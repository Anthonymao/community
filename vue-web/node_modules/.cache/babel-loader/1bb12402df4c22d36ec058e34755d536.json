{"ast":null,"code":"import \"core-js/modules/es.error.cause.js\";\n\nfunction _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, _typeof(obj);\n}\n\nimport \"core-js/modules/es.object.set-prototype-of.js\";\nimport \"core-js/modules/es.reflect.construct.js\";\nimport \"core-js/modules/es.reflect.get.js\";\nimport \"core-js/modules/es.object.get-own-property-descriptor.js\";\nimport \"core-js/modules/es.object.keys.js\";\nimport \"core-js/modules/es.array.index-of.js\";\nimport \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/es.object.get-own-property-descriptors.js\";\nimport \"core-js/modules/es.symbol.description.js\";\nimport \"core-js/modules/es.symbol.iterator.js\";\nimport \"core-js/modules/es.array.from.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nvar _excluded = [\"column\"],\n    _excluded2 = [\"column\"];\n\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();\n}\n\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return _arrayLikeToArray(arr);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nimport \"core-js/modules/es.array.sort.js\";\nimport \"core-js/modules/es.array.slice.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.number.is-integer.js\";\nimport \"core-js/modules/es.number.constructor.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.object.get-prototype-of.js\";\nimport \"core-js/modules/es.object.assign.js\";\nimport \"core-js/modules/es.array.iterator.js\";\nimport \"core-js/modules/es.map.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}\n\nfunction _get() {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get.bind();\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = _superPropBase(target, property);\n\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n\n      if (desc.get) {\n        return desc.get.call(arguments.length < 3 ? target : receiver);\n      }\n\n      return desc.value;\n    };\n  }\n\n  return _get.apply(this, arguments);\n}\n\nfunction _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = _getPrototypeOf(object);\n    if (object === null) break;\n  }\n\n  return object;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  Object.defineProperty(subClass, \"prototype\", {\n    writable: false\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  } else if (call !== void 0) {\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nimport { addClass, removeClass } from \"../../helpers/dom/element.mjs\";\nimport { isUndefined, isDefined } from \"../../helpers/mixed.mjs\";\nimport { isObject } from \"../../helpers/object.mjs\";\nimport { isFunction } from \"../../helpers/function.mjs\";\nimport { arrayMap } from \"../../helpers/array.mjs\";\nimport { BasePlugin } from \"../base/index.mjs\";\nimport { IndexesSequence, PhysicalIndexToValueMap as IndexToValueMap } from \"../../translations/index.mjs\";\nimport Hooks from \"../../pluginHooks.mjs\";\nimport { ColumnStatesManager } from \"./columnStatesManager.mjs\";\nimport { getNextSortOrder, areValidSortStates, getHeaderSpanElement, isFirstLevelColumnHeader, wasHeaderClickedProperly } from \"./utils.mjs\";\nimport { getClassesToRemove, getClassesToAdd } from \"./domHelpers.mjs\";\nimport { rootComparator } from \"./rootComparator.mjs\";\nimport { registerRootComparator, sort } from \"./sortService/index.mjs\";\nexport var PLUGIN_KEY = 'columnSorting';\nexport var PLUGIN_PRIORITY = 50;\nvar APPEND_COLUMN_CONFIG_STRATEGY = 'append';\nvar REPLACE_COLUMN_CONFIG_STRATEGY = 'replace';\nregisterRootComparator(PLUGIN_KEY, rootComparator);\nHooks.getSingleton().register('beforeColumnSort');\nHooks.getSingleton().register('afterColumnSort'); // DIFF - MultiColumnSorting & ColumnSorting: changed configuration documentation.\n\n/**\n * @plugin ColumnSorting\n * @class ColumnSorting\n *\n * @description\n * This plugin sorts the view by columns (but does not sort the data source!). To enable the plugin, set the\n * {@link Options#columnSorting} property to the correct value (see the examples below).\n *\n * @example\n * ```js\n * // as boolean\n * columnSorting: true\n *\n * // as an object with initial sort config (sort ascending for column at index 1)\n * columnSorting: {\n *   initialConfig: {\n *     column: 1,\n *     sortOrder: 'asc'\n *   }\n * }\n *\n * // as an object which define specific sorting options for all columns\n * columnSorting: {\n *   sortEmptyCells: true, // true = the table sorts empty cells, false = the table moves all empty cells to the end of the table (by default)\n *   indicator: true, // true = shows indicator for all columns (by default), false = don't show indicator for columns\n *   headerAction: true, // true = allow to click on the headers to sort (by default), false = turn off possibility to click on the headers to sort\n *   compareFunctionFactory: function(sortOrder, columnMeta) {\n *     return function(value, nextValue) {\n *       // Some value comparisons which will return -1, 0 or 1...\n *     }\n *   }\n * }\n *\n * // as an object passed to the `column` property, allows specifying a custom options for the desired column.\n * // please take a look at documentation of `column` property: https://handsontable.com/docs/Options.html#columns\n * columns: [{\n *   columnSorting: {\n *     indicator: false, // disable indicator for the first column,\n *     sortEmptyCells: true,\n *     headerAction: false, // clicks on the first column won't sort\n *     compareFunctionFactory: function(sortOrder, columnMeta) {\n *       return function(value, nextValue) {\n *         return 0; // Custom compare function for the first column (don't sort)\n *       }\n *     }\n *   }\n * }]\n * ```\n */\n\nexport var ColumnSorting = /*#__PURE__*/function (_BasePlugin) {\n  _inherits(ColumnSorting, _BasePlugin);\n\n  var _super = _createSuper(ColumnSorting);\n\n  function ColumnSorting(hotInstance) {\n    var _this;\n\n    _classCallCheck(this, ColumnSorting);\n\n    _this = _super.call(this, hotInstance);\n    /**\n     * Instance of column state manager.\n     *\n     * @private\n     * @type {null|ColumnStatesManager}\n     */\n\n    _this.columnStatesManager = null;\n    /**\n     * Cached column properties from plugin like i.e. `indicator`, `headerAction`.\n     *\n     * @private\n     * @type {null|PhysicalIndexToValueMap}\n     */\n\n    _this.columnMetaCache = null;\n    /**\n     * Main settings key designed for the plugin.\n     *\n     * @private\n     * @type {string}\n     */\n\n    _this.pluginKey = PLUGIN_KEY;\n    /**\n     * Plugin indexes cache.\n     *\n     * @private\n     * @type {null|IndexesSequence}\n     */\n\n    _this.indexesSequenceCache = null;\n    return _this;\n  }\n  /**\n   * Checks if the plugin is enabled in the Handsontable settings. This method is executed in {@link Hooks#beforeInit}\n   * hook and if it returns `true` then the {@link ColumnSorting#enablePlugin} method is called.\n   *\n   * @returns {boolean}\n   */\n\n\n  _createClass(ColumnSorting, [{\n    key: \"isEnabled\",\n    value: function isEnabled() {\n      return !!this.hot.getSettings()[this.pluginKey];\n    }\n    /**\n     * Enables the plugin functionality for this Handsontable instance.\n     */\n\n  }, {\n    key: \"enablePlugin\",\n    value: function enablePlugin() {\n      var _this2 = this;\n\n      if (this.enabled) {\n        return;\n      }\n\n      this.columnStatesManager = new ColumnStatesManager(this.hot, \"\".concat(this.pluginKey, \".sortingStates\"));\n      this.columnMetaCache = new IndexToValueMap(function (physicalIndex) {\n        var visualIndex = _this2.hot.toVisualColumn(physicalIndex);\n\n        if (visualIndex === null) {\n          visualIndex = physicalIndex;\n        }\n\n        return _this2.getMergedPluginSettings(visualIndex);\n      });\n      this.hot.columnIndexMapper.registerMap(\"\".concat(this.pluginKey, \".columnMeta\"), this.columnMetaCache);\n      this.addHook('afterGetColHeader', function (column, TH) {\n        return _this2.onAfterGetColHeader(column, TH);\n      });\n      this.addHook('beforeOnCellMouseDown', function () {\n        return _this2.onBeforeOnCellMouseDown.apply(_this2, arguments);\n      });\n      this.addHook('afterOnCellMouseDown', function (event, target) {\n        return _this2.onAfterOnCellMouseDown(event, target);\n      });\n      this.addHook('afterInit', function () {\n        return _this2.loadOrSortBySettings();\n      });\n      this.addHook('afterLoadData', function () {\n        return _this2.onAfterLoadData.apply(_this2, arguments);\n      }); // TODO: Workaround? It should be refactored / described.\n\n      if (this.hot.view) {\n        this.loadOrSortBySettings();\n      }\n\n      _get(_getPrototypeOf(ColumnSorting.prototype), \"enablePlugin\", this).call(this);\n    }\n    /**\n     * Disables the plugin functionality for this Handsontable instance.\n     */\n\n  }, {\n    key: \"disablePlugin\",\n    value: function disablePlugin() {\n      var _this3 = this;\n\n      var clearColHeader = function clearColHeader(column, TH) {\n        var headerSpanElement = getHeaderSpanElement(TH);\n\n        if (isFirstLevelColumnHeader(column, TH) === false || headerSpanElement === null) {\n          return;\n        }\n\n        _this3.updateHeaderClasses(headerSpanElement);\n      }; // Changing header width and removing indicator.\n\n\n      this.hot.addHook('afterGetColHeader', clearColHeader);\n      this.hot.addHookOnce('afterViewRender', function () {\n        _this3.hot.removeHook('afterGetColHeader', clearColHeader);\n      });\n      this.hot.batchExecution(function () {\n        if (_this3.indexesSequenceCache !== null) {\n          _this3.hot.rowIndexMapper.setIndexesSequence(_this3.indexesSequenceCache.getValues());\n\n          _this3.hot.rowIndexMapper.unregisterMap(_this3.pluginKey);\n        }\n      }, true);\n      this.hot.columnIndexMapper.unregisterMap(\"\".concat(this.pluginKey, \".columnMeta\"));\n      this.columnStatesManager.destroy();\n      this.columnMetaCache = null;\n      this.columnStatesManager = null;\n\n      _get(_getPrototypeOf(ColumnSorting.prototype), \"disablePlugin\", this).call(this);\n    } // DIFF - MultiColumnSorting & ColumnSorting: changed function documentation.\n\n    /**\n     * Sorts the table by chosen columns and orders.\n     *\n     * @param {undefined|object} sortConfig Single column sort configuration. The configuration object contains `column` and `sortOrder` properties.\n     * First of them contains visual column index, the second one contains sort order (`asc` for ascending, `desc` for descending).\n     *\n     * **Note**: Please keep in mind that every call of `sort` function set an entirely new sort order. Previous sort configs aren't preserved.\n     *\n     * @example\n     * ```js\n     * // sort ascending first visual column\n     * hot.getPlugin('columnSorting').sort({ column: 0, sortOrder: 'asc' });\n     * ```\n     *\n     * @fires Hooks#beforeColumnSort\n     * @fires Hooks#afterColumnSort\n     */\n\n  }, {\n    key: \"sort\",\n    value: function sort(sortConfig) {\n      var currentSortConfig = this.getSortConfig(); // We always pass configs defined as an array to `beforeColumnSort` and `afterColumnSort` hooks.\n\n      var destinationSortConfigs = this.getNormalizedSortConfigs(sortConfig);\n      var sortPossible = this.areValidSortConfigs(destinationSortConfigs);\n      var allowSort = this.hot.runHooks('beforeColumnSort', currentSortConfig, destinationSortConfigs, sortPossible);\n\n      if (allowSort === false) {\n        return;\n      }\n\n      if (currentSortConfig.length === 0 && this.indexesSequenceCache === null) {\n        this.indexesSequenceCache = this.hot.rowIndexMapper.registerMap(this.pluginKey, new IndexesSequence());\n        this.indexesSequenceCache.setValues(this.hot.rowIndexMapper.getIndexesSequence());\n      }\n\n      if (sortPossible) {\n        this.columnStatesManager.setSortStates(destinationSortConfigs);\n        this.sortByPresetSortStates(destinationSortConfigs);\n        this.saveAllSortSettings(destinationSortConfigs);\n      }\n\n      this.hot.runHooks('afterColumnSort', currentSortConfig, sortPossible ? destinationSortConfigs : currentSortConfig, sortPossible);\n\n      if (sortPossible) {\n        this.hot.render(); // TODO: Workaround? This triggers fast redraw. One test won't pass after removal.\n        // It should be refactored / described.\n\n        this.hot.forceFullRender = false;\n        this.hot.view.render();\n      }\n    }\n    /**\n     * Clear the sort performed on the table.\n     */\n\n  }, {\n    key: \"clearSort\",\n    value: function clearSort() {\n      this.sort([]);\n    }\n    /**\n     * Checks if the table is sorted (any column have to be sorted).\n     *\n     * @returns {boolean}\n     */\n\n  }, {\n    key: \"isSorted\",\n    value: function isSorted() {\n      return this.enabled && !this.columnStatesManager.isListOfSortedColumnsEmpty();\n    }\n    /**\n     * Get sort configuration for particular column or for all sorted columns. Objects contain `column` and `sortOrder` properties.\n     *\n     * **Note**: Please keep in mind that returned objects expose **visual** column index under the `column` key. They are handled by the `sort` function.\n     *\n     * @param {number} [column] Visual column index.\n     * @returns {undefined|object|Array}\n     */\n\n  }, {\n    key: \"getSortConfig\",\n    value: function getSortConfig(column) {\n      if (isDefined(column)) {\n        return this.columnStatesManager.getColumnSortState(column);\n      }\n\n      return this.columnStatesManager.getSortStates();\n    }\n    /**\n     * @description\n     * Warn: Useful mainly for providing server side sort implementation (see in the example below). It doesn't sort the data set. It just sets sort configuration for all sorted columns.\n     * Note: Please keep in mind that this method doesn't re-render the table.\n     *\n     * @example\n     * ```js\n     * beforeColumnSort: function(currentSortConfig, destinationSortConfigs) {\n     *   const columnSortPlugin = this.getPlugin('columnSorting');\n     *\n     *   columnSortPlugin.setSortConfig(destinationSortConfigs);\n     *\n     *   // const newData = ... // Calculated data set, ie. from an AJAX call.\n     *\n     *   this.loadData(newData); // Load new data set and re-render the table.\n     *\n     *   return false; // The blockade for the default sort action.\n     * }\n     * ```\n     *\n     * @param {undefined|object|Array} sortConfig Single column sort configuration or full sort configuration (for all sorted columns).\n     * The configuration object contains `column` and `sortOrder` properties. First of them contains visual column index, the second one contains\n     * sort order (`asc` for ascending, `desc` for descending).\n     */\n\n  }, {\n    key: \"setSortConfig\",\n    value: function setSortConfig(sortConfig) {\n      // We always set configs defined as an array.\n      var destinationSortConfigs = this.getNormalizedSortConfigs(sortConfig);\n\n      if (this.areValidSortConfigs(destinationSortConfigs)) {\n        this.columnStatesManager.setSortStates(destinationSortConfigs);\n      }\n    }\n    /**\n     * Get normalized sort configs.\n     *\n     * @private\n     * @param {object|Array} [sortConfig=[]] Single column sort configuration or full sort configuration (for all sorted columns).\n     * The configuration object contains `column` and `sortOrder` properties. First of them contains visual column index, the second one contains\n     * sort order (`asc` for ascending, `desc` for descending).\n     * @returns {Array}\n     */\n\n  }, {\n    key: \"getNormalizedSortConfigs\",\n    value: function getNormalizedSortConfigs() {\n      var sortConfig = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n\n      if (Array.isArray(sortConfig)) {\n        return sortConfig.slice(0, 1);\n      }\n\n      return [sortConfig];\n    }\n    /**\n     * Get if sort configs are valid.\n     *\n     * @private\n     * @param {Array} sortConfigs Sort configuration for all sorted columns. Objects contain `column` and `sortOrder` properties.\n     * @returns {boolean}\n     */\n\n  }, {\n    key: \"areValidSortConfigs\",\n    value: function areValidSortConfigs(sortConfigs) {\n      var numberOfColumns = this.hot.countCols(); // We don't translate visual indexes to physical indexes.\n\n      return areValidSortStates(sortConfigs) && sortConfigs.every(function (_ref) {\n        var column = _ref.column;\n        return column <= numberOfColumns && column >= 0;\n      });\n    }\n    /**\n     * Saves all sorting settings. Saving works only when {@link Options#persistentState} option is enabled.\n     *\n     * @param {Array} sortConfigs Sort configuration for all sorted columns. Objects contain `column` and `sortOrder` properties.\n     *\n     * @private\n     * @fires Hooks#persistentStateSave\n     */\n\n  }, {\n    key: \"saveAllSortSettings\",\n    value: function saveAllSortSettings(sortConfigs) {\n      var _this4 = this;\n\n      var allSortSettings = this.columnStatesManager.getAllColumnsProperties();\n\n      var translateColumnToPhysical = function translateColumnToPhysical(_ref2) {\n        var visualColumn = _ref2.column,\n            restOfProperties = _objectWithoutProperties(_ref2, _excluded);\n\n        return _objectSpread({\n          column: _this4.hot.toPhysicalColumn(visualColumn)\n        }, restOfProperties);\n      };\n\n      allSortSettings.initialConfig = arrayMap(sortConfigs, translateColumnToPhysical);\n      this.hot.runHooks('persistentStateSave', 'columnSorting', allSortSettings);\n    }\n    /**\n     * Get all saved sorting settings. Loading works only when {@link Options#persistentState} option is enabled.\n     *\n     * @private\n     * @returns {object} Previously saved sort settings.\n     *\n     * @fires Hooks#persistentStateLoad\n     */\n\n  }, {\n    key: \"getAllSavedSortSettings\",\n    value: function getAllSavedSortSettings() {\n      var _this5 = this;\n\n      var storedAllSortSettings = {};\n      this.hot.runHooks('persistentStateLoad', 'columnSorting', storedAllSortSettings);\n      var allSortSettings = storedAllSortSettings.value;\n\n      var translateColumnToVisual = function translateColumnToVisual(_ref3) {\n        var physicalColumn = _ref3.column,\n            restOfProperties = _objectWithoutProperties(_ref3, _excluded2);\n\n        return _objectSpread({\n          column: _this5.hot.toVisualColumn(physicalColumn)\n        }, restOfProperties);\n      };\n\n      if (isDefined(allSortSettings) && Array.isArray(allSortSettings.initialConfig)) {\n        allSortSettings.initialConfig = arrayMap(allSortSettings.initialConfig, translateColumnToVisual);\n      }\n\n      return allSortSettings;\n    }\n    /**\n     * Get next sort configuration for particular column. Object contain `column` and `sortOrder` properties.\n     *\n     * **Note**: Please keep in mind that returned object expose **visual** column index under the `column` key.\n     *\n     * @private\n     * @param {number} column Visual column index.\n     * @returns {undefined|object}\n     */\n\n  }, {\n    key: \"getColumnNextConfig\",\n    value: function getColumnNextConfig(column) {\n      var sortOrder = this.columnStatesManager.getSortOrderOfColumn(column);\n\n      if (isDefined(sortOrder)) {\n        var nextSortOrder = getNextSortOrder(sortOrder);\n\n        if (isDefined(nextSortOrder)) {\n          return {\n            column: column,\n            sortOrder: nextSortOrder\n          };\n        }\n\n        return;\n      }\n\n      var nrOfColumns = this.hot.countCols();\n\n      if (Number.isInteger(column) && column >= 0 && column < nrOfColumns) {\n        return {\n          column: column,\n          sortOrder: getNextSortOrder()\n        };\n      }\n    }\n    /**\n     * Get sort configuration with \"next order\" for particular column.\n     *\n     * @private\n     * @param {number} columnToChange Visual column index of column which order will be changed.\n     * @param {string} strategyId ID of strategy. Possible values: 'append' and 'replace'. The first one\n     * change order of particular column and change it's position in the sort queue to the last one. The second one\n     * just change order of particular column.\n     *\n     * **Note**: Please keep in mind that returned objects expose **visual** column index under the `column` key.\n     *\n     * @returns {Array}\n     */\n\n  }, {\n    key: \"getNextSortConfig\",\n    value: function getNextSortConfig(columnToChange) {\n      var strategyId = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : APPEND_COLUMN_CONFIG_STRATEGY;\n      var indexOfColumnToChange = this.columnStatesManager.getIndexOfColumnInSortQueue(columnToChange);\n      var isColumnSorted = indexOfColumnToChange !== -1;\n      var currentSortConfig = this.getSortConfig();\n      var nextColumnConfig = this.getColumnNextConfig(columnToChange);\n\n      if (isColumnSorted) {\n        if (isUndefined(nextColumnConfig)) {\n          return [].concat(_toConsumableArray(currentSortConfig.slice(0, indexOfColumnToChange)), _toConsumableArray(currentSortConfig.slice(indexOfColumnToChange + 1)));\n        }\n\n        if (strategyId === APPEND_COLUMN_CONFIG_STRATEGY) {\n          return [].concat(_toConsumableArray(currentSortConfig.slice(0, indexOfColumnToChange)), _toConsumableArray(currentSortConfig.slice(indexOfColumnToChange + 1)), [nextColumnConfig]);\n        } else if (strategyId === REPLACE_COLUMN_CONFIG_STRATEGY) {\n          return [].concat(_toConsumableArray(currentSortConfig.slice(0, indexOfColumnToChange)), [nextColumnConfig], _toConsumableArray(currentSortConfig.slice(indexOfColumnToChange + 1)));\n        }\n      }\n\n      if (isDefined(nextColumnConfig)) {\n        return currentSortConfig.concat(nextColumnConfig);\n      }\n\n      return currentSortConfig;\n    }\n    /**\n     * Get plugin's column config for the specified column index.\n     *\n     * @private\n     * @param {object} columnConfig Configuration inside `columns` property for the specified column index.\n     * @returns {object}\n     */\n\n  }, {\n    key: \"getPluginColumnConfig\",\n    value: function getPluginColumnConfig(columnConfig) {\n      if (isObject(columnConfig)) {\n        var pluginColumnConfig = columnConfig[this.pluginKey];\n\n        if (isObject(pluginColumnConfig)) {\n          return pluginColumnConfig;\n        }\n      }\n\n      return {};\n    }\n    /**\n     * Get plugin settings related properties, properly merged from cascade settings.\n     *\n     * @private\n     * @param {number} column Visual column index.\n     * @returns {object}\n     */\n\n  }, {\n    key: \"getMergedPluginSettings\",\n    value: function getMergedPluginSettings(column) {\n      var pluginMainSettings = this.hot.getSettings()[this.pluginKey];\n      var storedColumnProperties = this.columnStatesManager.getAllColumnsProperties();\n      var cellMeta = this.hot.getCellMeta(0, column);\n      var columnMeta = Object.getPrototypeOf(cellMeta);\n\n      if (Array.isArray(columnMeta.columns)) {\n        return Object.assign(storedColumnProperties, pluginMainSettings, this.getPluginColumnConfig(columnMeta.columns[column]));\n      } else if (isFunction(columnMeta.columns)) {\n        return Object.assign(storedColumnProperties, pluginMainSettings, this.getPluginColumnConfig(columnMeta.columns(column)));\n      }\n\n      return Object.assign(storedColumnProperties, pluginMainSettings);\n    }\n    /**\n     * Get copy of settings for first cell in the column.\n     *\n     * @private\n     * @param {number} column Visual column index.\n     * @returns {object}\n     */\n    // TODO: Workaround. Inheriting of non-primitive cell meta values doesn't work. Instead of getting properties from column meta we call this function.\n    // TODO: Remove test named: \"should not break the dataset when inserted new row\" (#5431).\n\n  }, {\n    key: \"getFirstCellSettings\",\n    value: function getFirstCellSettings(column) {\n      var cellMeta = this.hot.getCellMeta(0, column);\n      var cellMetaCopy = Object.create(cellMeta);\n      cellMetaCopy[this.pluginKey] = this.columnMetaCache.getValueAtIndex(this.hot.toPhysicalColumn(column));\n      return cellMetaCopy;\n    }\n    /**\n     * Get number of rows which should be sorted.\n     *\n     * @private\n     * @param {number} numberOfRows Total number of displayed rows.\n     * @returns {number}\n     */\n\n  }, {\n    key: \"getNumberOfRowsToSort\",\n    value: function getNumberOfRowsToSort(numberOfRows) {\n      var settings = this.hot.getSettings(); // `maxRows` option doesn't take into account `minSpareRows` option in this case.\n\n      if (settings.maxRows <= numberOfRows) {\n        return settings.maxRows;\n      }\n\n      return numberOfRows - settings.minSpareRows;\n    }\n    /**\n     * Performs the sorting using a stable sort function basing on internal state of sorting.\n     *\n     * @param {Array} sortConfigs Sort configuration for all sorted columns. Objects contain `column` and `sortOrder` properties.\n     * @private\n     */\n\n  }, {\n    key: \"sortByPresetSortStates\",\n    value: function sortByPresetSortStates(sortConfigs) {\n      var _this6 = this;\n\n      if (sortConfigs.length === 0) {\n        this.hot.rowIndexMapper.setIndexesSequence(this.indexesSequenceCache.getValues());\n        return;\n      }\n\n      var indexesWithData = [];\n      var numberOfRows = this.hot.countRows();\n\n      var getDataForSortedColumns = function getDataForSortedColumns(visualRowIndex) {\n        return arrayMap(sortConfigs, function (sortConfig) {\n          return _this6.hot.getDataAtCell(visualRowIndex, sortConfig.column);\n        });\n      };\n\n      for (var visualRowIndex = 0; visualRowIndex < this.getNumberOfRowsToSort(numberOfRows); visualRowIndex += 1) {\n        indexesWithData.push([this.hot.toPhysicalRow(visualRowIndex)].concat(getDataForSortedColumns(visualRowIndex)));\n      }\n\n      var indexesBefore = arrayMap(indexesWithData, function (indexWithData) {\n        return indexWithData[0];\n      });\n      sort(indexesWithData, this.pluginKey, arrayMap(sortConfigs, function (sortConfig) {\n        return sortConfig.sortOrder;\n      }), arrayMap(sortConfigs, function (sortConfig) {\n        return _this6.getFirstCellSettings(sortConfig.column);\n      })); // Append spareRows\n\n      for (var _visualRowIndex = indexesWithData.length; _visualRowIndex < numberOfRows; _visualRowIndex += 1) {\n        indexesWithData.push([_visualRowIndex].concat(getDataForSortedColumns(_visualRowIndex)));\n      }\n\n      var indexesAfter = arrayMap(indexesWithData, function (indexWithData) {\n        return indexWithData[0];\n      });\n      var indexMapping = new Map(arrayMap(indexesBefore, function (indexBefore, indexInsideArray) {\n        return [indexBefore, indexesAfter[indexInsideArray]];\n      }));\n      var newIndexesSequence = arrayMap(this.hot.rowIndexMapper.getIndexesSequence(), function (physicalIndex) {\n        if (indexMapping.has(physicalIndex)) {\n          return indexMapping.get(physicalIndex);\n        }\n\n        return physicalIndex;\n      });\n      this.hot.rowIndexMapper.setIndexesSequence(newIndexesSequence);\n    }\n    /**\n     * Load saved settings or sort by predefined plugin configuration.\n     *\n     * @private\n     */\n\n  }, {\n    key: \"loadOrSortBySettings\",\n    value: function loadOrSortBySettings() {\n      var storedAllSortSettings = this.getAllSavedSortSettings();\n\n      if (isObject(storedAllSortSettings)) {\n        this.sortBySettings(storedAllSortSettings);\n      } else {\n        var allSortSettings = this.hot.getSettings()[this.pluginKey];\n        this.sortBySettings(allSortSettings);\n      }\n    }\n    /**\n     * Sort the table by provided configuration.\n     *\n     * @private\n     * @param {object} allSortSettings All sort config settings. Object may contain `initialConfig`, `indicator`,\n     * `sortEmptyCells`, `headerAction` and `compareFunctionFactory` properties.\n     */\n\n  }, {\n    key: \"sortBySettings\",\n    value: function sortBySettings(allSortSettings) {\n      if (isObject(allSortSettings)) {\n        this.columnStatesManager.updateAllColumnsProperties(allSortSettings);\n        var initialConfig = allSortSettings.initialConfig;\n\n        if (Array.isArray(initialConfig) || isObject(initialConfig)) {\n          this.sort(initialConfig);\n        }\n      } else {\n        // Extra render for headers. Their width may change.\n        this.hot.render();\n      }\n    }\n    /**\n     * Callback for the `onAfterGetColHeader` hook. Adds column sorting CSS classes.\n     *\n     * @private\n     * @param {number} column Visual column index.\n     * @param {Element} TH TH HTML element.\n     */\n\n  }, {\n    key: \"onAfterGetColHeader\",\n    value: function onAfterGetColHeader(column, TH) {\n      var headerSpanElement = getHeaderSpanElement(TH);\n\n      if (isFirstLevelColumnHeader(column, TH) === false || headerSpanElement === null) {\n        return;\n      }\n\n      var pluginSettingsForColumn = this.getFirstCellSettings(column)[this.pluginKey];\n      var showSortIndicator = pluginSettingsForColumn.indicator;\n      var headerActionEnabled = pluginSettingsForColumn.headerAction;\n      this.updateHeaderClasses(headerSpanElement, this.columnStatesManager, column, showSortIndicator, headerActionEnabled);\n    }\n    /**\n     * Update header classes.\n     *\n     * @private\n     * @param {HTMLElement} headerSpanElement Header span element.\n     * @param {...*} args Extra arguments for helpers.\n     */\n\n  }, {\n    key: \"updateHeaderClasses\",\n    value: function updateHeaderClasses(headerSpanElement) {\n      removeClass(headerSpanElement, getClassesToRemove(headerSpanElement));\n\n      if (this.enabled !== false) {\n        for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n          args[_key - 1] = arguments[_key];\n        }\n\n        addClass(headerSpanElement, getClassesToAdd.apply(void 0, args));\n      }\n    }\n    /**\n     * Overwriting base plugin's `onUpdateSettings` method. Please keep in mind that `onAfterUpdateSettings` isn't called\n     * for `updateSettings` in specific situations.\n     *\n     * @private\n     * @param {object} newSettings New settings object.\n     */\n\n  }, {\n    key: \"onUpdateSettings\",\n    value: function onUpdateSettings(newSettings) {\n      _get(_getPrototypeOf(ColumnSorting.prototype), \"onUpdateSettings\", this).call(this);\n\n      if (this.columnMetaCache !== null) {\n        // Column meta cache base on settings, thus we should re-init the map.\n        this.columnMetaCache.init(this.hot.columnIndexMapper.getNumberOfIndexes());\n      }\n\n      if (isDefined(newSettings[this.pluginKey])) {\n        this.sortBySettings(newSettings[this.pluginKey]);\n      }\n    }\n    /**\n     * Callback for the `afterLoadData` hook.\n     *\n     * @private\n     * @param {boolean} initialLoad Flag that determines whether the data has been loaded during the initialization.\n     */\n\n  }, {\n    key: \"onAfterLoadData\",\n    value: function onAfterLoadData(initialLoad) {\n      if (initialLoad === true) {\n        // TODO: Workaround? It should be refactored / described.\n        if (this.hot.view) {\n          this.loadOrSortBySettings();\n        }\n      }\n    }\n    /**\n     * Indicates if clickable header was clicked.\n     *\n     * @private\n     * @param {MouseEvent} event The `mousedown` event.\n     * @param {number} column Visual column index.\n     * @returns {boolean}\n     */\n\n  }, {\n    key: \"wasClickableHeaderClicked\",\n    value: function wasClickableHeaderClicked(event, column) {\n      var pluginSettingsForColumn = this.getFirstCellSettings(column)[this.pluginKey];\n      var headerActionEnabled = pluginSettingsForColumn.headerAction;\n      return headerActionEnabled && event.target.nodeName === 'SPAN';\n    }\n    /**\n     * Changes the behavior of selection / dragging.\n     *\n     * @private\n     * @param {MouseEvent} event The `mousedown` event.\n     * @param {CellCoords} coords Visual coordinates.\n     * @param {HTMLElement} TD The cell element.\n     * @param {object} controller An object with properties `row`, `column` and `cell`. Each property contains\n     *                            a boolean value that allows or disallows changing the selection for that particular area.\n     */\n\n  }, {\n    key: \"onBeforeOnCellMouseDown\",\n    value: function onBeforeOnCellMouseDown(event, coords, TD, controller) {\n      if (wasHeaderClickedProperly(coords.row, coords.col, event) === false) {\n        return;\n      }\n\n      if (this.wasClickableHeaderClicked(event, coords.col) && this.hot.getShortcutManager().isCtrlPressed()) {\n        controller.column = true;\n      }\n    }\n    /**\n     * Callback for the `onAfterOnCellMouseDown` hook.\n     *\n     * @private\n     * @param {Event} event Event which are provided by hook.\n     * @param {CellCoords} coords Visual coords of the selected cell.\n     */\n\n  }, {\n    key: \"onAfterOnCellMouseDown\",\n    value: function onAfterOnCellMouseDown(event, coords) {\n      if (wasHeaderClickedProperly(coords.row, coords.col, event) === false) {\n        return;\n      }\n\n      if (this.wasClickableHeaderClicked(event, coords.col)) {\n        if (this.hot.getShortcutManager().isCtrlPressed()) {\n          this.hot.deselectCell();\n          this.hot.selectColumns(coords.col);\n        }\n\n        this.sort(this.getColumnNextConfig(coords.col));\n      }\n    }\n    /**\n     * Destroys the plugin instance.\n     */\n\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      var _this$columnStatesMan; // TODO: Probably not supported yet by ESLint: https://github.com/eslint/eslint/issues/11045\n      // eslint-disable-next-line no-unused-expressions\n\n\n      (_this$columnStatesMan = this.columnStatesManager) === null || _this$columnStatesMan === void 0 ? void 0 : _this$columnStatesMan.destroy();\n\n      _get(_getPrototypeOf(ColumnSorting.prototype), \"destroy\", this).call(this);\n    }\n  }], [{\n    key: \"PLUGIN_KEY\",\n    get: function get() {\n      return PLUGIN_KEY;\n    }\n  }, {\n    key: \"PLUGIN_PRIORITY\",\n    get: function get() {\n      return PLUGIN_PRIORITY;\n    }\n  }]);\n\n  return ColumnSorting;\n}(BasePlugin);","map":{"version":3,"names":["_typeof","obj","Symbol","iterator","constructor","prototype","_excluded","_excluded2","_toConsumableArray","arr","_arrayWithoutHoles","_iterableToArray","_unsupportedIterableToArray","_nonIterableSpread","TypeError","o","minLen","_arrayLikeToArray","n","Object","toString","call","slice","name","Array","from","test","iter","isArray","len","length","i","arr2","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","arguments","source","forEach","key","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","value","configurable","writable","_objectWithoutProperties","excluded","_objectWithoutPropertiesLoose","sourceSymbolKeys","indexOf","propertyIsEnumerable","sourceKeys","_classCallCheck","instance","Constructor","_defineProperties","props","descriptor","_createClass","protoProps","staticProps","_get","Reflect","get","bind","property","receiver","base","_superPropBase","desc","hasOwnProperty","_getPrototypeOf","_inherits","subClass","superClass","create","_setPrototypeOf","p","setPrototypeOf","__proto__","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","_createSuperInternal","Super","result","NewTarget","construct","_possibleConstructorReturn","self","_assertThisInitialized","ReferenceError","sham","Proxy","Boolean","valueOf","e","getPrototypeOf","addClass","removeClass","isUndefined","isDefined","isObject","isFunction","arrayMap","BasePlugin","IndexesSequence","PhysicalIndexToValueMap","IndexToValueMap","Hooks","ColumnStatesManager","getNextSortOrder","areValidSortStates","getHeaderSpanElement","isFirstLevelColumnHeader","wasHeaderClickedProperly","getClassesToRemove","getClassesToAdd","rootComparator","registerRootComparator","sort","PLUGIN_KEY","PLUGIN_PRIORITY","APPEND_COLUMN_CONFIG_STRATEGY","REPLACE_COLUMN_CONFIG_STRATEGY","getSingleton","register","ColumnSorting","_BasePlugin","_super","hotInstance","_this","columnStatesManager","columnMetaCache","pluginKey","indexesSequenceCache","isEnabled","hot","getSettings","enablePlugin","_this2","enabled","concat","physicalIndex","visualIndex","toVisualColumn","getMergedPluginSettings","columnIndexMapper","registerMap","addHook","column","TH","onAfterGetColHeader","onBeforeOnCellMouseDown","event","onAfterOnCellMouseDown","loadOrSortBySettings","onAfterLoadData","view","disablePlugin","_this3","clearColHeader","headerSpanElement","updateHeaderClasses","addHookOnce","removeHook","batchExecution","rowIndexMapper","setIndexesSequence","getValues","unregisterMap","destroy","sortConfig","currentSortConfig","getSortConfig","destinationSortConfigs","getNormalizedSortConfigs","sortPossible","areValidSortConfigs","allowSort","runHooks","setValues","getIndexesSequence","setSortStates","sortByPresetSortStates","saveAllSortSettings","render","forceFullRender","clearSort","isSorted","isListOfSortedColumnsEmpty","getColumnSortState","getSortStates","setSortConfig","undefined","sortConfigs","numberOfColumns","countCols","every","_ref","_this4","allSortSettings","getAllColumnsProperties","translateColumnToPhysical","_ref2","visualColumn","restOfProperties","toPhysicalColumn","initialConfig","getAllSavedSortSettings","_this5","storedAllSortSettings","translateColumnToVisual","_ref3","physicalColumn","getColumnNextConfig","sortOrder","getSortOrderOfColumn","nextSortOrder","nrOfColumns","Number","isInteger","getNextSortConfig","columnToChange","strategyId","indexOfColumnToChange","getIndexOfColumnInSortQueue","isColumnSorted","nextColumnConfig","getPluginColumnConfig","columnConfig","pluginColumnConfig","pluginMainSettings","storedColumnProperties","cellMeta","getCellMeta","columnMeta","columns","assign","getFirstCellSettings","cellMetaCopy","getValueAtIndex","getNumberOfRowsToSort","numberOfRows","settings","maxRows","minSpareRows","_this6","indexesWithData","countRows","getDataForSortedColumns","visualRowIndex","getDataAtCell","toPhysicalRow","indexesBefore","indexWithData","_visualRowIndex","indexesAfter","indexMapping","Map","indexBefore","indexInsideArray","newIndexesSequence","has","sortBySettings","updateAllColumnsProperties","pluginSettingsForColumn","showSortIndicator","indicator","headerActionEnabled","headerAction","_len","args","_key","onUpdateSettings","newSettings","init","getNumberOfIndexes","initialLoad","wasClickableHeaderClicked","nodeName","coords","TD","controller","row","col","getShortcutManager","isCtrlPressed","deselectCell","selectColumns","_this$columnStatesMan"],"sources":["/home/ubuntu/community/vue-web/node_modules/handsontable/plugins/columnSorting/columnSorting.mjs"],"sourcesContent":["function _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\nimport \"core-js/modules/es.object.set-prototype-of.js\";\nimport \"core-js/modules/es.reflect.construct.js\";\nimport \"core-js/modules/es.reflect.get.js\";\nimport \"core-js/modules/es.object.get-own-property-descriptor.js\";\nimport \"core-js/modules/es.object.keys.js\";\nimport \"core-js/modules/es.array.index-of.js\";\nimport \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/es.object.get-own-property-descriptors.js\";\nimport \"core-js/modules/es.symbol.description.js\";\nimport \"core-js/modules/es.symbol.iterator.js\";\nimport \"core-js/modules/es.array.from.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nvar _excluded = [\"column\"],\n  _excluded2 = [\"column\"];\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport \"core-js/modules/es.array.sort.js\";\nimport \"core-js/modules/es.array.slice.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.number.is-integer.js\";\nimport \"core-js/modules/es.number.constructor.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.object.get-prototype-of.js\";\nimport \"core-js/modules/es.object.assign.js\";\nimport \"core-js/modules/es.array.iterator.js\";\nimport \"core-js/modules/es.map.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\nfunction _get() { if (typeof Reflect !== \"undefined\" && Reflect.get) { _get = Reflect.get.bind(); } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(arguments.length < 3 ? target : receiver); } return desc.value; }; } return _get.apply(this, arguments); }\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, \"prototype\", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return _assertThisInitialized(self); }\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\nimport { addClass, removeClass } from \"../../helpers/dom/element.mjs\";\nimport { isUndefined, isDefined } from \"../../helpers/mixed.mjs\";\nimport { isObject } from \"../../helpers/object.mjs\";\nimport { isFunction } from \"../../helpers/function.mjs\";\nimport { arrayMap } from \"../../helpers/array.mjs\";\nimport { BasePlugin } from \"../base/index.mjs\";\nimport { IndexesSequence, PhysicalIndexToValueMap as IndexToValueMap } from \"../../translations/index.mjs\";\nimport Hooks from \"../../pluginHooks.mjs\";\nimport { ColumnStatesManager } from \"./columnStatesManager.mjs\";\nimport { getNextSortOrder, areValidSortStates, getHeaderSpanElement, isFirstLevelColumnHeader, wasHeaderClickedProperly } from \"./utils.mjs\";\nimport { getClassesToRemove, getClassesToAdd } from \"./domHelpers.mjs\";\nimport { rootComparator } from \"./rootComparator.mjs\";\nimport { registerRootComparator, sort } from \"./sortService/index.mjs\";\nexport var PLUGIN_KEY = 'columnSorting';\nexport var PLUGIN_PRIORITY = 50;\nvar APPEND_COLUMN_CONFIG_STRATEGY = 'append';\nvar REPLACE_COLUMN_CONFIG_STRATEGY = 'replace';\nregisterRootComparator(PLUGIN_KEY, rootComparator);\nHooks.getSingleton().register('beforeColumnSort');\nHooks.getSingleton().register('afterColumnSort');\n\n// DIFF - MultiColumnSorting & ColumnSorting: changed configuration documentation.\n/**\n * @plugin ColumnSorting\n * @class ColumnSorting\n *\n * @description\n * This plugin sorts the view by columns (but does not sort the data source!). To enable the plugin, set the\n * {@link Options#columnSorting} property to the correct value (see the examples below).\n *\n * @example\n * ```js\n * // as boolean\n * columnSorting: true\n *\n * // as an object with initial sort config (sort ascending for column at index 1)\n * columnSorting: {\n *   initialConfig: {\n *     column: 1,\n *     sortOrder: 'asc'\n *   }\n * }\n *\n * // as an object which define specific sorting options for all columns\n * columnSorting: {\n *   sortEmptyCells: true, // true = the table sorts empty cells, false = the table moves all empty cells to the end of the table (by default)\n *   indicator: true, // true = shows indicator for all columns (by default), false = don't show indicator for columns\n *   headerAction: true, // true = allow to click on the headers to sort (by default), false = turn off possibility to click on the headers to sort\n *   compareFunctionFactory: function(sortOrder, columnMeta) {\n *     return function(value, nextValue) {\n *       // Some value comparisons which will return -1, 0 or 1...\n *     }\n *   }\n * }\n *\n * // as an object passed to the `column` property, allows specifying a custom options for the desired column.\n * // please take a look at documentation of `column` property: https://handsontable.com/docs/Options.html#columns\n * columns: [{\n *   columnSorting: {\n *     indicator: false, // disable indicator for the first column,\n *     sortEmptyCells: true,\n *     headerAction: false, // clicks on the first column won't sort\n *     compareFunctionFactory: function(sortOrder, columnMeta) {\n *       return function(value, nextValue) {\n *         return 0; // Custom compare function for the first column (don't sort)\n *       }\n *     }\n *   }\n * }]\n * ```\n */\nexport var ColumnSorting = /*#__PURE__*/function (_BasePlugin) {\n  _inherits(ColumnSorting, _BasePlugin);\n  var _super = _createSuper(ColumnSorting);\n  function ColumnSorting(hotInstance) {\n    var _this;\n    _classCallCheck(this, ColumnSorting);\n    _this = _super.call(this, hotInstance);\n    /**\n     * Instance of column state manager.\n     *\n     * @private\n     * @type {null|ColumnStatesManager}\n     */\n    _this.columnStatesManager = null;\n    /**\n     * Cached column properties from plugin like i.e. `indicator`, `headerAction`.\n     *\n     * @private\n     * @type {null|PhysicalIndexToValueMap}\n     */\n    _this.columnMetaCache = null;\n    /**\n     * Main settings key designed for the plugin.\n     *\n     * @private\n     * @type {string}\n     */\n    _this.pluginKey = PLUGIN_KEY;\n    /**\n     * Plugin indexes cache.\n     *\n     * @private\n     * @type {null|IndexesSequence}\n     */\n    _this.indexesSequenceCache = null;\n    return _this;\n  }\n\n  /**\n   * Checks if the plugin is enabled in the Handsontable settings. This method is executed in {@link Hooks#beforeInit}\n   * hook and if it returns `true` then the {@link ColumnSorting#enablePlugin} method is called.\n   *\n   * @returns {boolean}\n   */\n  _createClass(ColumnSorting, [{\n    key: \"isEnabled\",\n    value: function isEnabled() {\n      return !!this.hot.getSettings()[this.pluginKey];\n    }\n\n    /**\n     * Enables the plugin functionality for this Handsontable instance.\n     */\n  }, {\n    key: \"enablePlugin\",\n    value: function enablePlugin() {\n      var _this2 = this;\n      if (this.enabled) {\n        return;\n      }\n      this.columnStatesManager = new ColumnStatesManager(this.hot, \"\".concat(this.pluginKey, \".sortingStates\"));\n      this.columnMetaCache = new IndexToValueMap(function (physicalIndex) {\n        var visualIndex = _this2.hot.toVisualColumn(physicalIndex);\n        if (visualIndex === null) {\n          visualIndex = physicalIndex;\n        }\n        return _this2.getMergedPluginSettings(visualIndex);\n      });\n      this.hot.columnIndexMapper.registerMap(\"\".concat(this.pluginKey, \".columnMeta\"), this.columnMetaCache);\n      this.addHook('afterGetColHeader', function (column, TH) {\n        return _this2.onAfterGetColHeader(column, TH);\n      });\n      this.addHook('beforeOnCellMouseDown', function () {\n        return _this2.onBeforeOnCellMouseDown.apply(_this2, arguments);\n      });\n      this.addHook('afterOnCellMouseDown', function (event, target) {\n        return _this2.onAfterOnCellMouseDown(event, target);\n      });\n      this.addHook('afterInit', function () {\n        return _this2.loadOrSortBySettings();\n      });\n      this.addHook('afterLoadData', function () {\n        return _this2.onAfterLoadData.apply(_this2, arguments);\n      });\n\n      // TODO: Workaround? It should be refactored / described.\n      if (this.hot.view) {\n        this.loadOrSortBySettings();\n      }\n      _get(_getPrototypeOf(ColumnSorting.prototype), \"enablePlugin\", this).call(this);\n    }\n\n    /**\n     * Disables the plugin functionality for this Handsontable instance.\n     */\n  }, {\n    key: \"disablePlugin\",\n    value: function disablePlugin() {\n      var _this3 = this;\n      var clearColHeader = function clearColHeader(column, TH) {\n        var headerSpanElement = getHeaderSpanElement(TH);\n        if (isFirstLevelColumnHeader(column, TH) === false || headerSpanElement === null) {\n          return;\n        }\n        _this3.updateHeaderClasses(headerSpanElement);\n      };\n\n      // Changing header width and removing indicator.\n      this.hot.addHook('afterGetColHeader', clearColHeader);\n      this.hot.addHookOnce('afterViewRender', function () {\n        _this3.hot.removeHook('afterGetColHeader', clearColHeader);\n      });\n      this.hot.batchExecution(function () {\n        if (_this3.indexesSequenceCache !== null) {\n          _this3.hot.rowIndexMapper.setIndexesSequence(_this3.indexesSequenceCache.getValues());\n          _this3.hot.rowIndexMapper.unregisterMap(_this3.pluginKey);\n        }\n      }, true);\n      this.hot.columnIndexMapper.unregisterMap(\"\".concat(this.pluginKey, \".columnMeta\"));\n      this.columnStatesManager.destroy();\n      this.columnMetaCache = null;\n      this.columnStatesManager = null;\n      _get(_getPrototypeOf(ColumnSorting.prototype), \"disablePlugin\", this).call(this);\n    }\n\n    // DIFF - MultiColumnSorting & ColumnSorting: changed function documentation.\n    /**\n     * Sorts the table by chosen columns and orders.\n     *\n     * @param {undefined|object} sortConfig Single column sort configuration. The configuration object contains `column` and `sortOrder` properties.\n     * First of them contains visual column index, the second one contains sort order (`asc` for ascending, `desc` for descending).\n     *\n     * **Note**: Please keep in mind that every call of `sort` function set an entirely new sort order. Previous sort configs aren't preserved.\n     *\n     * @example\n     * ```js\n     * // sort ascending first visual column\n     * hot.getPlugin('columnSorting').sort({ column: 0, sortOrder: 'asc' });\n     * ```\n     *\n     * @fires Hooks#beforeColumnSort\n     * @fires Hooks#afterColumnSort\n     */\n  }, {\n    key: \"sort\",\n    value: function sort(sortConfig) {\n      var currentSortConfig = this.getSortConfig();\n\n      // We always pass configs defined as an array to `beforeColumnSort` and `afterColumnSort` hooks.\n      var destinationSortConfigs = this.getNormalizedSortConfigs(sortConfig);\n      var sortPossible = this.areValidSortConfigs(destinationSortConfigs);\n      var allowSort = this.hot.runHooks('beforeColumnSort', currentSortConfig, destinationSortConfigs, sortPossible);\n      if (allowSort === false) {\n        return;\n      }\n      if (currentSortConfig.length === 0 && this.indexesSequenceCache === null) {\n        this.indexesSequenceCache = this.hot.rowIndexMapper.registerMap(this.pluginKey, new IndexesSequence());\n        this.indexesSequenceCache.setValues(this.hot.rowIndexMapper.getIndexesSequence());\n      }\n      if (sortPossible) {\n        this.columnStatesManager.setSortStates(destinationSortConfigs);\n        this.sortByPresetSortStates(destinationSortConfigs);\n        this.saveAllSortSettings(destinationSortConfigs);\n      }\n      this.hot.runHooks('afterColumnSort', currentSortConfig, sortPossible ? destinationSortConfigs : currentSortConfig, sortPossible);\n      if (sortPossible) {\n        this.hot.render();\n        // TODO: Workaround? This triggers fast redraw. One test won't pass after removal.\n        // It should be refactored / described.\n        this.hot.forceFullRender = false;\n        this.hot.view.render();\n      }\n    }\n\n    /**\n     * Clear the sort performed on the table.\n     */\n  }, {\n    key: \"clearSort\",\n    value: function clearSort() {\n      this.sort([]);\n    }\n\n    /**\n     * Checks if the table is sorted (any column have to be sorted).\n     *\n     * @returns {boolean}\n     */\n  }, {\n    key: \"isSorted\",\n    value: function isSorted() {\n      return this.enabled && !this.columnStatesManager.isListOfSortedColumnsEmpty();\n    }\n\n    /**\n     * Get sort configuration for particular column or for all sorted columns. Objects contain `column` and `sortOrder` properties.\n     *\n     * **Note**: Please keep in mind that returned objects expose **visual** column index under the `column` key. They are handled by the `sort` function.\n     *\n     * @param {number} [column] Visual column index.\n     * @returns {undefined|object|Array}\n     */\n  }, {\n    key: \"getSortConfig\",\n    value: function getSortConfig(column) {\n      if (isDefined(column)) {\n        return this.columnStatesManager.getColumnSortState(column);\n      }\n      return this.columnStatesManager.getSortStates();\n    }\n\n    /**\n     * @description\n     * Warn: Useful mainly for providing server side sort implementation (see in the example below). It doesn't sort the data set. It just sets sort configuration for all sorted columns.\n     * Note: Please keep in mind that this method doesn't re-render the table.\n     *\n     * @example\n     * ```js\n     * beforeColumnSort: function(currentSortConfig, destinationSortConfigs) {\n     *   const columnSortPlugin = this.getPlugin('columnSorting');\n     *\n     *   columnSortPlugin.setSortConfig(destinationSortConfigs);\n     *\n     *   // const newData = ... // Calculated data set, ie. from an AJAX call.\n     *\n     *   this.loadData(newData); // Load new data set and re-render the table.\n     *\n     *   return false; // The blockade for the default sort action.\n     * }\n     * ```\n     *\n     * @param {undefined|object|Array} sortConfig Single column sort configuration or full sort configuration (for all sorted columns).\n     * The configuration object contains `column` and `sortOrder` properties. First of them contains visual column index, the second one contains\n     * sort order (`asc` for ascending, `desc` for descending).\n     */\n  }, {\n    key: \"setSortConfig\",\n    value: function setSortConfig(sortConfig) {\n      // We always set configs defined as an array.\n      var destinationSortConfigs = this.getNormalizedSortConfigs(sortConfig);\n      if (this.areValidSortConfigs(destinationSortConfigs)) {\n        this.columnStatesManager.setSortStates(destinationSortConfigs);\n      }\n    }\n\n    /**\n     * Get normalized sort configs.\n     *\n     * @private\n     * @param {object|Array} [sortConfig=[]] Single column sort configuration or full sort configuration (for all sorted columns).\n     * The configuration object contains `column` and `sortOrder` properties. First of them contains visual column index, the second one contains\n     * sort order (`asc` for ascending, `desc` for descending).\n     * @returns {Array}\n     */\n  }, {\n    key: \"getNormalizedSortConfigs\",\n    value: function getNormalizedSortConfigs() {\n      var sortConfig = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n      if (Array.isArray(sortConfig)) {\n        return sortConfig.slice(0, 1);\n      }\n      return [sortConfig];\n    }\n\n    /**\n     * Get if sort configs are valid.\n     *\n     * @private\n     * @param {Array} sortConfigs Sort configuration for all sorted columns. Objects contain `column` and `sortOrder` properties.\n     * @returns {boolean}\n     */\n  }, {\n    key: \"areValidSortConfigs\",\n    value: function areValidSortConfigs(sortConfigs) {\n      var numberOfColumns = this.hot.countCols();\n\n      // We don't translate visual indexes to physical indexes.\n      return areValidSortStates(sortConfigs) && sortConfigs.every(function (_ref) {\n        var column = _ref.column;\n        return column <= numberOfColumns && column >= 0;\n      });\n    }\n\n    /**\n     * Saves all sorting settings. Saving works only when {@link Options#persistentState} option is enabled.\n     *\n     * @param {Array} sortConfigs Sort configuration for all sorted columns. Objects contain `column` and `sortOrder` properties.\n     *\n     * @private\n     * @fires Hooks#persistentStateSave\n     */\n  }, {\n    key: \"saveAllSortSettings\",\n    value: function saveAllSortSettings(sortConfigs) {\n      var _this4 = this;\n      var allSortSettings = this.columnStatesManager.getAllColumnsProperties();\n      var translateColumnToPhysical = function translateColumnToPhysical(_ref2) {\n        var visualColumn = _ref2.column,\n          restOfProperties = _objectWithoutProperties(_ref2, _excluded);\n        return _objectSpread({\n          column: _this4.hot.toPhysicalColumn(visualColumn)\n        }, restOfProperties);\n      };\n      allSortSettings.initialConfig = arrayMap(sortConfigs, translateColumnToPhysical);\n      this.hot.runHooks('persistentStateSave', 'columnSorting', allSortSettings);\n    }\n\n    /**\n     * Get all saved sorting settings. Loading works only when {@link Options#persistentState} option is enabled.\n     *\n     * @private\n     * @returns {object} Previously saved sort settings.\n     *\n     * @fires Hooks#persistentStateLoad\n     */\n  }, {\n    key: \"getAllSavedSortSettings\",\n    value: function getAllSavedSortSettings() {\n      var _this5 = this;\n      var storedAllSortSettings = {};\n      this.hot.runHooks('persistentStateLoad', 'columnSorting', storedAllSortSettings);\n      var allSortSettings = storedAllSortSettings.value;\n      var translateColumnToVisual = function translateColumnToVisual(_ref3) {\n        var physicalColumn = _ref3.column,\n          restOfProperties = _objectWithoutProperties(_ref3, _excluded2);\n        return _objectSpread({\n          column: _this5.hot.toVisualColumn(physicalColumn)\n        }, restOfProperties);\n      };\n      if (isDefined(allSortSettings) && Array.isArray(allSortSettings.initialConfig)) {\n        allSortSettings.initialConfig = arrayMap(allSortSettings.initialConfig, translateColumnToVisual);\n      }\n      return allSortSettings;\n    }\n\n    /**\n     * Get next sort configuration for particular column. Object contain `column` and `sortOrder` properties.\n     *\n     * **Note**: Please keep in mind that returned object expose **visual** column index under the `column` key.\n     *\n     * @private\n     * @param {number} column Visual column index.\n     * @returns {undefined|object}\n     */\n  }, {\n    key: \"getColumnNextConfig\",\n    value: function getColumnNextConfig(column) {\n      var sortOrder = this.columnStatesManager.getSortOrderOfColumn(column);\n      if (isDefined(sortOrder)) {\n        var nextSortOrder = getNextSortOrder(sortOrder);\n        if (isDefined(nextSortOrder)) {\n          return {\n            column: column,\n            sortOrder: nextSortOrder\n          };\n        }\n        return;\n      }\n      var nrOfColumns = this.hot.countCols();\n      if (Number.isInteger(column) && column >= 0 && column < nrOfColumns) {\n        return {\n          column: column,\n          sortOrder: getNextSortOrder()\n        };\n      }\n    }\n\n    /**\n     * Get sort configuration with \"next order\" for particular column.\n     *\n     * @private\n     * @param {number} columnToChange Visual column index of column which order will be changed.\n     * @param {string} strategyId ID of strategy. Possible values: 'append' and 'replace'. The first one\n     * change order of particular column and change it's position in the sort queue to the last one. The second one\n     * just change order of particular column.\n     *\n     * **Note**: Please keep in mind that returned objects expose **visual** column index under the `column` key.\n     *\n     * @returns {Array}\n     */\n  }, {\n    key: \"getNextSortConfig\",\n    value: function getNextSortConfig(columnToChange) {\n      var strategyId = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : APPEND_COLUMN_CONFIG_STRATEGY;\n      var indexOfColumnToChange = this.columnStatesManager.getIndexOfColumnInSortQueue(columnToChange);\n      var isColumnSorted = indexOfColumnToChange !== -1;\n      var currentSortConfig = this.getSortConfig();\n      var nextColumnConfig = this.getColumnNextConfig(columnToChange);\n      if (isColumnSorted) {\n        if (isUndefined(nextColumnConfig)) {\n          return [].concat(_toConsumableArray(currentSortConfig.slice(0, indexOfColumnToChange)), _toConsumableArray(currentSortConfig.slice(indexOfColumnToChange + 1)));\n        }\n        if (strategyId === APPEND_COLUMN_CONFIG_STRATEGY) {\n          return [].concat(_toConsumableArray(currentSortConfig.slice(0, indexOfColumnToChange)), _toConsumableArray(currentSortConfig.slice(indexOfColumnToChange + 1)), [nextColumnConfig]);\n        } else if (strategyId === REPLACE_COLUMN_CONFIG_STRATEGY) {\n          return [].concat(_toConsumableArray(currentSortConfig.slice(0, indexOfColumnToChange)), [nextColumnConfig], _toConsumableArray(currentSortConfig.slice(indexOfColumnToChange + 1)));\n        }\n      }\n      if (isDefined(nextColumnConfig)) {\n        return currentSortConfig.concat(nextColumnConfig);\n      }\n      return currentSortConfig;\n    }\n\n    /**\n     * Get plugin's column config for the specified column index.\n     *\n     * @private\n     * @param {object} columnConfig Configuration inside `columns` property for the specified column index.\n     * @returns {object}\n     */\n  }, {\n    key: \"getPluginColumnConfig\",\n    value: function getPluginColumnConfig(columnConfig) {\n      if (isObject(columnConfig)) {\n        var pluginColumnConfig = columnConfig[this.pluginKey];\n        if (isObject(pluginColumnConfig)) {\n          return pluginColumnConfig;\n        }\n      }\n      return {};\n    }\n\n    /**\n     * Get plugin settings related properties, properly merged from cascade settings.\n     *\n     * @private\n     * @param {number} column Visual column index.\n     * @returns {object}\n     */\n  }, {\n    key: \"getMergedPluginSettings\",\n    value: function getMergedPluginSettings(column) {\n      var pluginMainSettings = this.hot.getSettings()[this.pluginKey];\n      var storedColumnProperties = this.columnStatesManager.getAllColumnsProperties();\n      var cellMeta = this.hot.getCellMeta(0, column);\n      var columnMeta = Object.getPrototypeOf(cellMeta);\n      if (Array.isArray(columnMeta.columns)) {\n        return Object.assign(storedColumnProperties, pluginMainSettings, this.getPluginColumnConfig(columnMeta.columns[column]));\n      } else if (isFunction(columnMeta.columns)) {\n        return Object.assign(storedColumnProperties, pluginMainSettings, this.getPluginColumnConfig(columnMeta.columns(column)));\n      }\n      return Object.assign(storedColumnProperties, pluginMainSettings);\n    }\n\n    /**\n     * Get copy of settings for first cell in the column.\n     *\n     * @private\n     * @param {number} column Visual column index.\n     * @returns {object}\n     */\n    // TODO: Workaround. Inheriting of non-primitive cell meta values doesn't work. Instead of getting properties from column meta we call this function.\n    // TODO: Remove test named: \"should not break the dataset when inserted new row\" (#5431).\n  }, {\n    key: \"getFirstCellSettings\",\n    value: function getFirstCellSettings(column) {\n      var cellMeta = this.hot.getCellMeta(0, column);\n      var cellMetaCopy = Object.create(cellMeta);\n      cellMetaCopy[this.pluginKey] = this.columnMetaCache.getValueAtIndex(this.hot.toPhysicalColumn(column));\n      return cellMetaCopy;\n    }\n\n    /**\n     * Get number of rows which should be sorted.\n     *\n     * @private\n     * @param {number} numberOfRows Total number of displayed rows.\n     * @returns {number}\n     */\n  }, {\n    key: \"getNumberOfRowsToSort\",\n    value: function getNumberOfRowsToSort(numberOfRows) {\n      var settings = this.hot.getSettings();\n\n      // `maxRows` option doesn't take into account `minSpareRows` option in this case.\n      if (settings.maxRows <= numberOfRows) {\n        return settings.maxRows;\n      }\n      return numberOfRows - settings.minSpareRows;\n    }\n\n    /**\n     * Performs the sorting using a stable sort function basing on internal state of sorting.\n     *\n     * @param {Array} sortConfigs Sort configuration for all sorted columns. Objects contain `column` and `sortOrder` properties.\n     * @private\n     */\n  }, {\n    key: \"sortByPresetSortStates\",\n    value: function sortByPresetSortStates(sortConfigs) {\n      var _this6 = this;\n      if (sortConfigs.length === 0) {\n        this.hot.rowIndexMapper.setIndexesSequence(this.indexesSequenceCache.getValues());\n        return;\n      }\n      var indexesWithData = [];\n      var numberOfRows = this.hot.countRows();\n      var getDataForSortedColumns = function getDataForSortedColumns(visualRowIndex) {\n        return arrayMap(sortConfigs, function (sortConfig) {\n          return _this6.hot.getDataAtCell(visualRowIndex, sortConfig.column);\n        });\n      };\n      for (var visualRowIndex = 0; visualRowIndex < this.getNumberOfRowsToSort(numberOfRows); visualRowIndex += 1) {\n        indexesWithData.push([this.hot.toPhysicalRow(visualRowIndex)].concat(getDataForSortedColumns(visualRowIndex)));\n      }\n      var indexesBefore = arrayMap(indexesWithData, function (indexWithData) {\n        return indexWithData[0];\n      });\n      sort(indexesWithData, this.pluginKey, arrayMap(sortConfigs, function (sortConfig) {\n        return sortConfig.sortOrder;\n      }), arrayMap(sortConfigs, function (sortConfig) {\n        return _this6.getFirstCellSettings(sortConfig.column);\n      }));\n\n      // Append spareRows\n      for (var _visualRowIndex = indexesWithData.length; _visualRowIndex < numberOfRows; _visualRowIndex += 1) {\n        indexesWithData.push([_visualRowIndex].concat(getDataForSortedColumns(_visualRowIndex)));\n      }\n      var indexesAfter = arrayMap(indexesWithData, function (indexWithData) {\n        return indexWithData[0];\n      });\n      var indexMapping = new Map(arrayMap(indexesBefore, function (indexBefore, indexInsideArray) {\n        return [indexBefore, indexesAfter[indexInsideArray]];\n      }));\n      var newIndexesSequence = arrayMap(this.hot.rowIndexMapper.getIndexesSequence(), function (physicalIndex) {\n        if (indexMapping.has(physicalIndex)) {\n          return indexMapping.get(physicalIndex);\n        }\n        return physicalIndex;\n      });\n      this.hot.rowIndexMapper.setIndexesSequence(newIndexesSequence);\n    }\n\n    /**\n     * Load saved settings or sort by predefined plugin configuration.\n     *\n     * @private\n     */\n  }, {\n    key: \"loadOrSortBySettings\",\n    value: function loadOrSortBySettings() {\n      var storedAllSortSettings = this.getAllSavedSortSettings();\n      if (isObject(storedAllSortSettings)) {\n        this.sortBySettings(storedAllSortSettings);\n      } else {\n        var allSortSettings = this.hot.getSettings()[this.pluginKey];\n        this.sortBySettings(allSortSettings);\n      }\n    }\n\n    /**\n     * Sort the table by provided configuration.\n     *\n     * @private\n     * @param {object} allSortSettings All sort config settings. Object may contain `initialConfig`, `indicator`,\n     * `sortEmptyCells`, `headerAction` and `compareFunctionFactory` properties.\n     */\n  }, {\n    key: \"sortBySettings\",\n    value: function sortBySettings(allSortSettings) {\n      if (isObject(allSortSettings)) {\n        this.columnStatesManager.updateAllColumnsProperties(allSortSettings);\n        var initialConfig = allSortSettings.initialConfig;\n        if (Array.isArray(initialConfig) || isObject(initialConfig)) {\n          this.sort(initialConfig);\n        }\n      } else {\n        // Extra render for headers. Their width may change.\n        this.hot.render();\n      }\n    }\n\n    /**\n     * Callback for the `onAfterGetColHeader` hook. Adds column sorting CSS classes.\n     *\n     * @private\n     * @param {number} column Visual column index.\n     * @param {Element} TH TH HTML element.\n     */\n  }, {\n    key: \"onAfterGetColHeader\",\n    value: function onAfterGetColHeader(column, TH) {\n      var headerSpanElement = getHeaderSpanElement(TH);\n      if (isFirstLevelColumnHeader(column, TH) === false || headerSpanElement === null) {\n        return;\n      }\n      var pluginSettingsForColumn = this.getFirstCellSettings(column)[this.pluginKey];\n      var showSortIndicator = pluginSettingsForColumn.indicator;\n      var headerActionEnabled = pluginSettingsForColumn.headerAction;\n      this.updateHeaderClasses(headerSpanElement, this.columnStatesManager, column, showSortIndicator, headerActionEnabled);\n    }\n\n    /**\n     * Update header classes.\n     *\n     * @private\n     * @param {HTMLElement} headerSpanElement Header span element.\n     * @param {...*} args Extra arguments for helpers.\n     */\n  }, {\n    key: \"updateHeaderClasses\",\n    value: function updateHeaderClasses(headerSpanElement) {\n      removeClass(headerSpanElement, getClassesToRemove(headerSpanElement));\n      if (this.enabled !== false) {\n        for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n          args[_key - 1] = arguments[_key];\n        }\n        addClass(headerSpanElement, getClassesToAdd.apply(void 0, args));\n      }\n    }\n\n    /**\n     * Overwriting base plugin's `onUpdateSettings` method. Please keep in mind that `onAfterUpdateSettings` isn't called\n     * for `updateSettings` in specific situations.\n     *\n     * @private\n     * @param {object} newSettings New settings object.\n     */\n  }, {\n    key: \"onUpdateSettings\",\n    value: function onUpdateSettings(newSettings) {\n      _get(_getPrototypeOf(ColumnSorting.prototype), \"onUpdateSettings\", this).call(this);\n      if (this.columnMetaCache !== null) {\n        // Column meta cache base on settings, thus we should re-init the map.\n        this.columnMetaCache.init(this.hot.columnIndexMapper.getNumberOfIndexes());\n      }\n      if (isDefined(newSettings[this.pluginKey])) {\n        this.sortBySettings(newSettings[this.pluginKey]);\n      }\n    }\n\n    /**\n     * Callback for the `afterLoadData` hook.\n     *\n     * @private\n     * @param {boolean} initialLoad Flag that determines whether the data has been loaded during the initialization.\n     */\n  }, {\n    key: \"onAfterLoadData\",\n    value: function onAfterLoadData(initialLoad) {\n      if (initialLoad === true) {\n        // TODO: Workaround? It should be refactored / described.\n        if (this.hot.view) {\n          this.loadOrSortBySettings();\n        }\n      }\n    }\n\n    /**\n     * Indicates if clickable header was clicked.\n     *\n     * @private\n     * @param {MouseEvent} event The `mousedown` event.\n     * @param {number} column Visual column index.\n     * @returns {boolean}\n     */\n  }, {\n    key: \"wasClickableHeaderClicked\",\n    value: function wasClickableHeaderClicked(event, column) {\n      var pluginSettingsForColumn = this.getFirstCellSettings(column)[this.pluginKey];\n      var headerActionEnabled = pluginSettingsForColumn.headerAction;\n      return headerActionEnabled && event.target.nodeName === 'SPAN';\n    }\n\n    /**\n     * Changes the behavior of selection / dragging.\n     *\n     * @private\n     * @param {MouseEvent} event The `mousedown` event.\n     * @param {CellCoords} coords Visual coordinates.\n     * @param {HTMLElement} TD The cell element.\n     * @param {object} controller An object with properties `row`, `column` and `cell`. Each property contains\n     *                            a boolean value that allows or disallows changing the selection for that particular area.\n     */\n  }, {\n    key: \"onBeforeOnCellMouseDown\",\n    value: function onBeforeOnCellMouseDown(event, coords, TD, controller) {\n      if (wasHeaderClickedProperly(coords.row, coords.col, event) === false) {\n        return;\n      }\n      if (this.wasClickableHeaderClicked(event, coords.col) && this.hot.getShortcutManager().isCtrlPressed()) {\n        controller.column = true;\n      }\n    }\n\n    /**\n     * Callback for the `onAfterOnCellMouseDown` hook.\n     *\n     * @private\n     * @param {Event} event Event which are provided by hook.\n     * @param {CellCoords} coords Visual coords of the selected cell.\n     */\n  }, {\n    key: \"onAfterOnCellMouseDown\",\n    value: function onAfterOnCellMouseDown(event, coords) {\n      if (wasHeaderClickedProperly(coords.row, coords.col, event) === false) {\n        return;\n      }\n      if (this.wasClickableHeaderClicked(event, coords.col)) {\n        if (this.hot.getShortcutManager().isCtrlPressed()) {\n          this.hot.deselectCell();\n          this.hot.selectColumns(coords.col);\n        }\n        this.sort(this.getColumnNextConfig(coords.col));\n      }\n    }\n\n    /**\n     * Destroys the plugin instance.\n     */\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      var _this$columnStatesMan;\n      // TODO: Probably not supported yet by ESLint: https://github.com/eslint/eslint/issues/11045\n      // eslint-disable-next-line no-unused-expressions\n      (_this$columnStatesMan = this.columnStatesManager) === null || _this$columnStatesMan === void 0 ? void 0 : _this$columnStatesMan.destroy();\n      _get(_getPrototypeOf(ColumnSorting.prototype), \"destroy\", this).call(this);\n    }\n  }], [{\n    key: \"PLUGIN_KEY\",\n    get: function get() {\n      return PLUGIN_KEY;\n    }\n  }, {\n    key: \"PLUGIN_PRIORITY\",\n    get: function get() {\n      return PLUGIN_PRIORITY;\n    }\n  }]);\n  return ColumnSorting;\n}(BasePlugin);"],"mappings":"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"},"metadata":{},"sourceType":"module"}