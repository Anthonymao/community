{"ast":null,"code":"import \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.number.is-integer.js\";\nimport \"core-js/modules/es.number.constructor.js\";\nimport \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.array.iterator.js\";\nimport \"core-js/modules/es.set.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport \"core-js/modules/es.array.index-of.js\";\nimport \"core-js/modules/es.array.from.js\";\nimport { isObject } from \"../../helpers/object.mjs\";\nimport { isRightClick } from \"../../helpers/dom/event.mjs\";\nexport var ASC_SORT_STATE = 'asc';\nexport var DESC_SORT_STATE = 'desc';\nexport var HEADER_SPAN_CLASS = 'colHeader';\n/**\n * Get if column state is valid.\n *\n * @param {number} columnState Particular column state.\n * @returns {boolean}\n */\n\nfunction isValidColumnState(columnState) {\n  if (isObject(columnState) === false) {\n    return false;\n  }\n\n  var column = columnState.column,\n      sortOrder = columnState.sortOrder;\n  return Number.isInteger(column) && [ASC_SORT_STATE, DESC_SORT_STATE].includes(sortOrder);\n}\n/**\n * Get if all sorted columns states are valid.\n *\n * @param {Array} sortStates The sort state collection.\n * @returns {boolean}\n */\n\n\nexport function areValidSortStates(sortStates) {\n  if (sortStates.some(function (columnState) {\n    return isValidColumnState(columnState) === false;\n  })) {\n    return false;\n  }\n\n  var sortedColumns = sortStates.map(function (_ref) {\n    var column = _ref.column;\n    return column;\n  }); // Indexes occurs only once.\n\n  return new Set(sortedColumns).size === sortedColumns.length;\n}\n/**\n * Get next sort order for particular column. The order sequence looks as follows: 'asc' -> 'desc' -> undefined -> 'asc'.\n *\n * @param {string|undefined} sortOrder Sort order (`asc` for ascending, `desc` for descending and undefined for not sorted).\n * @returns {string|undefined} Next sort order (`asc` for ascending, `desc` for descending and undefined for not sorted).\n */\n\nexport function getNextSortOrder(sortOrder) {\n  if (sortOrder === DESC_SORT_STATE) {\n    return;\n  } else if (sortOrder === ASC_SORT_STATE) {\n    return DESC_SORT_STATE;\n  }\n\n  return ASC_SORT_STATE;\n}\n/**\n * Get `span` DOM element inside `th` DOM element.\n *\n * @param {Element} TH Th HTML element.\n * @returns {Element | null}\n */\n\nexport function getHeaderSpanElement(TH) {\n  var headerSpanElement = TH.querySelector(\".\".concat(HEADER_SPAN_CLASS));\n  return headerSpanElement;\n}\n/**\n *\n * Get if handled header is first level column header.\n *\n * @param {number} column Visual column index.\n * @param {Element} TH Th HTML element.\n * @returns {boolean}\n */\n\nexport function isFirstLevelColumnHeader(column, TH) {\n  if (column < 0 || !TH.parentNode) {\n    return false;\n  }\n\n  var TRs = TH.parentNode.parentNode.childNodes;\n  var headerLevel = Array.from(TRs).indexOf(TH.parentNode) - TRs.length;\n\n  if (headerLevel !== -1) {\n    return false;\n  }\n\n  return true;\n}\n/**\n *  Get if header was clicked properly. Click on column header and NOT done by right click return `true`.\n *\n * @param {number} row Visual row index.\n * @param {number} column Visual column index.\n * @param {Event} clickEvent Click event.\n * @returns {boolean}\n */\n\nexport function wasHeaderClickedProperly(row, column, clickEvent) {\n  return row === -1 && column >= 0 && isRightClick(clickEvent) === false;\n}","map":{"version":3,"names":["isObject","isRightClick","ASC_SORT_STATE","DESC_SORT_STATE","HEADER_SPAN_CLASS","isValidColumnState","columnState","column","sortOrder","Number","isInteger","includes","areValidSortStates","sortStates","some","sortedColumns","map","_ref","Set","size","length","getNextSortOrder","getHeaderSpanElement","TH","headerSpanElement","querySelector","concat","isFirstLevelColumnHeader","parentNode","TRs","childNodes","headerLevel","Array","from","indexOf","wasHeaderClickedProperly","row","clickEvent"],"sources":["/home/ubuntu/community/vue-web/node_modules/handsontable/plugins/columnSorting/utils.mjs"],"sourcesContent":["import \"core-js/modules/es.number.is-integer.js\";\nimport \"core-js/modules/es.number.constructor.js\";\nimport \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.array.iterator.js\";\nimport \"core-js/modules/es.set.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport \"core-js/modules/es.array.index-of.js\";\nimport \"core-js/modules/es.array.from.js\";\nimport { isObject } from \"../../helpers/object.mjs\";\nimport { isRightClick } from \"../../helpers/dom/event.mjs\";\nexport var ASC_SORT_STATE = 'asc';\nexport var DESC_SORT_STATE = 'desc';\nexport var HEADER_SPAN_CLASS = 'colHeader';\n\n/**\n * Get if column state is valid.\n *\n * @param {number} columnState Particular column state.\n * @returns {boolean}\n */\nfunction isValidColumnState(columnState) {\n  if (isObject(columnState) === false) {\n    return false;\n  }\n  var column = columnState.column,\n    sortOrder = columnState.sortOrder;\n  return Number.isInteger(column) && [ASC_SORT_STATE, DESC_SORT_STATE].includes(sortOrder);\n}\n\n/**\n * Get if all sorted columns states are valid.\n *\n * @param {Array} sortStates The sort state collection.\n * @returns {boolean}\n */\nexport function areValidSortStates(sortStates) {\n  if (sortStates.some(function (columnState) {\n    return isValidColumnState(columnState) === false;\n  })) {\n    return false;\n  }\n  var sortedColumns = sortStates.map(function (_ref) {\n    var column = _ref.column;\n    return column;\n  });\n\n  // Indexes occurs only once.\n  return new Set(sortedColumns).size === sortedColumns.length;\n}\n\n/**\n * Get next sort order for particular column. The order sequence looks as follows: 'asc' -> 'desc' -> undefined -> 'asc'.\n *\n * @param {string|undefined} sortOrder Sort order (`asc` for ascending, `desc` for descending and undefined for not sorted).\n * @returns {string|undefined} Next sort order (`asc` for ascending, `desc` for descending and undefined for not sorted).\n */\nexport function getNextSortOrder(sortOrder) {\n  if (sortOrder === DESC_SORT_STATE) {\n    return;\n  } else if (sortOrder === ASC_SORT_STATE) {\n    return DESC_SORT_STATE;\n  }\n  return ASC_SORT_STATE;\n}\n\n/**\n * Get `span` DOM element inside `th` DOM element.\n *\n * @param {Element} TH Th HTML element.\n * @returns {Element | null}\n */\nexport function getHeaderSpanElement(TH) {\n  var headerSpanElement = TH.querySelector(\".\".concat(HEADER_SPAN_CLASS));\n  return headerSpanElement;\n}\n\n/**\n *\n * Get if handled header is first level column header.\n *\n * @param {number} column Visual column index.\n * @param {Element} TH Th HTML element.\n * @returns {boolean}\n */\nexport function isFirstLevelColumnHeader(column, TH) {\n  if (column < 0 || !TH.parentNode) {\n    return false;\n  }\n  var TRs = TH.parentNode.parentNode.childNodes;\n  var headerLevel = Array.from(TRs).indexOf(TH.parentNode) - TRs.length;\n  if (headerLevel !== -1) {\n    return false;\n  }\n  return true;\n}\n\n/**\n *  Get if header was clicked properly. Click on column header and NOT done by right click return `true`.\n *\n * @param {number} row Visual row index.\n * @param {number} column Visual column index.\n * @param {Event} clickEvent Click event.\n * @returns {boolean}\n */\nexport function wasHeaderClickedProperly(row, column, clickEvent) {\n  return row === -1 && column >= 0 && isRightClick(clickEvent) === false;\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}