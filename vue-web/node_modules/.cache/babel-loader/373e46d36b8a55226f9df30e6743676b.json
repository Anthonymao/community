{"ast":null,"code":"import \"core-js/modules/es.error.cause.js\";\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}\n\nimport { extend } from \"../../../helpers/object.mjs\";\nimport { expandMetaType } from \"../utils.mjs\";\n/**\n * The table meta object is a layer that keeps all settings of the Handsontable that was passed in\n * the constructor. That layer contains all default settings inherited from the GlobalMeta layer\n * merged with settings passed by the developer. Adding, removing, or changing property in that\n * object has no direct reflection on any other layers.\n *\n * +-------------+.\n * │ GlobalMeta  │\n * │ (prototype) │\n * +-------------+\\\n *       │         \\\n *       │          \\\n *      \\│/         _\\|\n * +-------------+    +-------------+.\n * │ TableMeta   │    │ ColumnMeta  │\n * │ (instance)  │    │ (prototype) │\n * +-------------+    +-------------+.\n *                         │\n *                         │\n *                        \\│/\n *                    +-------------+.\n *                    │  CellMeta   │\n *                    │ (instance)  │\n *                    +-------------+.\n */\n\nvar TableMeta = /*#__PURE__*/function () {\n  function TableMeta(globalMeta) {\n    _classCallCheck(this, TableMeta);\n\n    var MetaCtor = globalMeta.getMetaConstructor();\n    /**\n     * Main object (instance of the internal TableMeta class from GlobalMeta), holder for all settings defined in the table scope.\n     *\n     * @type {TableMeta}\n     */\n\n    this.meta = new MetaCtor();\n  }\n  /**\n   * Gets settings object for this layer.\n   *\n   * @returns {TableMeta}\n   */\n\n\n  _createClass(TableMeta, [{\n    key: \"getMeta\",\n    value: function getMeta() {\n      return this.meta;\n    }\n    /**\n     * Updates table settings object by merging settings with the current state.\n     *\n     * @param {object} settings An object to merge with.\n     */\n\n  }, {\n    key: \"updateMeta\",\n    value: function updateMeta(settings) {\n      extend(this.meta, settings);\n      extend(this.meta, expandMetaType(settings.type, settings));\n    }\n  }]);\n\n  return TableMeta;\n}();\n\nexport { TableMeta as default };","map":{"version":3,"names":["_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_createClass","protoProps","staticProps","prototype","extend","expandMetaType","TableMeta","globalMeta","MetaCtor","getMetaConstructor","meta","value","getMeta","updateMeta","settings","type","default"],"sources":["/home/ubuntu/community/vue-web/node_modules/handsontable/dataMap/metaManager/metaLayers/tableMeta.mjs"],"sourcesContent":["function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\nimport { extend } from \"../../../helpers/object.mjs\";\nimport { expandMetaType } from \"../utils.mjs\"; /**\n                                                * The table meta object is a layer that keeps all settings of the Handsontable that was passed in\n                                                * the constructor. That layer contains all default settings inherited from the GlobalMeta layer\n                                                * merged with settings passed by the developer. Adding, removing, or changing property in that\n                                                * object has no direct reflection on any other layers.\n                                                *\n                                                * +-------------+.\n                                                * │ GlobalMeta  │\n                                                * │ (prototype) │\n                                                * +-------------+\\\n                                                *       │         \\\n                                                *       │          \\\n                                                *      \\│/         _\\|\n                                                * +-------------+    +-------------+.\n                                                * │ TableMeta   │    │ ColumnMeta  │\n                                                * │ (instance)  │    │ (prototype) │\n                                                * +-------------+    +-------------+.\n                                                *                         │\n                                                *                         │\n                                                *                        \\│/\n                                                *                    +-------------+.\n                                                *                    │  CellMeta   │\n                                                *                    │ (instance)  │\n                                                *                    +-------------+.\n                                                */\nvar TableMeta = /*#__PURE__*/function () {\n  function TableMeta(globalMeta) {\n    _classCallCheck(this, TableMeta);\n    var MetaCtor = globalMeta.getMetaConstructor();\n\n    /**\n     * Main object (instance of the internal TableMeta class from GlobalMeta), holder for all settings defined in the table scope.\n     *\n     * @type {TableMeta}\n     */\n    this.meta = new MetaCtor();\n  }\n\n  /**\n   * Gets settings object for this layer.\n   *\n   * @returns {TableMeta}\n   */\n  _createClass(TableMeta, [{\n    key: \"getMeta\",\n    value: function getMeta() {\n      return this.meta;\n    }\n\n    /**\n     * Updates table settings object by merging settings with the current state.\n     *\n     * @param {object} settings An object to merge with.\n     */\n  }, {\n    key: \"updateMeta\",\n    value: function updateMeta(settings) {\n      extend(this.meta, settings);\n      extend(this.meta, expandMetaType(settings.type, settings));\n    }\n  }]);\n  return TableMeta;\n}();\nexport { TableMeta as default };"],"mappings":";;AAAA,SAASA,eAAT,CAAyBC,QAAzB,EAAmCC,WAAnC,EAAgD;EAAE,IAAI,EAAED,QAAQ,YAAYC,WAAtB,CAAJ,EAAwC;IAAE,MAAM,IAAIC,SAAJ,CAAc,mCAAd,CAAN;EAA2D;AAAE;;AACzJ,SAASC,iBAAT,CAA2BC,MAA3B,EAAmCC,KAAnC,EAA0C;EAAE,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,KAAK,CAACE,MAA1B,EAAkCD,CAAC,EAAnC,EAAuC;IAAE,IAAIE,UAAU,GAAGH,KAAK,CAACC,CAAD,CAAtB;IAA2BE,UAAU,CAACC,UAAX,GAAwBD,UAAU,CAACC,UAAX,IAAyB,KAAjD;IAAwDD,UAAU,CAACE,YAAX,GAA0B,IAA1B;IAAgC,IAAI,WAAWF,UAAf,EAA2BA,UAAU,CAACG,QAAX,GAAsB,IAAtB;IAA4BC,MAAM,CAACC,cAAP,CAAsBT,MAAtB,EAA8BI,UAAU,CAACM,GAAzC,EAA8CN,UAA9C;EAA4D;AAAE;;AAC7T,SAASO,YAAT,CAAsBd,WAAtB,EAAmCe,UAAnC,EAA+CC,WAA/C,EAA4D;EAAE,IAAID,UAAJ,EAAgBb,iBAAiB,CAACF,WAAW,CAACiB,SAAb,EAAwBF,UAAxB,CAAjB;EAAsD,IAAIC,WAAJ,EAAiBd,iBAAiB,CAACF,WAAD,EAAcgB,WAAd,CAAjB;EAA6CL,MAAM,CAACC,cAAP,CAAsBZ,WAAtB,EAAmC,WAAnC,EAAgD;IAAEU,QAAQ,EAAE;EAAZ,CAAhD;EAAsE,OAAOV,WAAP;AAAqB;;AAC7R,SAASkB,MAAT,QAAuB,6BAAvB;AACA,SAASC,cAAT,QAA+B,cAA/B;AAA+C;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,IAAIC,SAAS,GAAG,aAAa,YAAY;EACvC,SAASA,SAAT,CAAmBC,UAAnB,EAA+B;IAC7BvB,eAAe,CAAC,IAAD,EAAOsB,SAAP,CAAf;;IACA,IAAIE,QAAQ,GAAGD,UAAU,CAACE,kBAAX,EAAf;IAEA;AACJ;AACA;AACA;AACA;;IACI,KAAKC,IAAL,GAAY,IAAIF,QAAJ,EAAZ;EACD;EAED;AACF;AACA;AACA;AACA;;;EACER,YAAY,CAACM,SAAD,EAAY,CAAC;IACvBP,GAAG,EAAE,SADkB;IAEvBY,KAAK,EAAE,SAASC,OAAT,GAAmB;MACxB,OAAO,KAAKF,IAAZ;IACD;IAED;AACJ;AACA;AACA;AACA;;EAV2B,CAAD,EAWrB;IACDX,GAAG,EAAE,YADJ;IAEDY,KAAK,EAAE,SAASE,UAAT,CAAoBC,QAApB,EAA8B;MACnCV,MAAM,CAAC,KAAKM,IAAN,EAAYI,QAAZ,CAAN;MACAV,MAAM,CAAC,KAAKM,IAAN,EAAYL,cAAc,CAACS,QAAQ,CAACC,IAAV,EAAgBD,QAAhB,CAA1B,CAAN;IACD;EALA,CAXqB,CAAZ,CAAZ;;EAkBA,OAAOR,SAAP;AACD,CArC4B,EAA7B;;AAsCA,SAASA,SAAS,IAAIU,OAAtB"},"metadata":{},"sourceType":"module"}