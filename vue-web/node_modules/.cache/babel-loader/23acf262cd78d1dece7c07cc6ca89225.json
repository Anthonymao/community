{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, createBlock as _createBlock, createElementVNode as _createElementVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-6d3dc716\"), n = n(), _popScopeId(), n);\n\nconst _hoisted_1 = {\n  style: {\n    \"margin\": \"60px auto 0\"\n  }\n};\nconst _hoisted_2 = {\n  key: 0\n};\n\nconst _hoisted_3 = /*#__PURE__*/_createTextVNode(\" ( \");\n\nconst _hoisted_4 = /*#__PURE__*/_createTextVNode(\" 请添加合法投票者. ) \");\n\nconst _hoisted_5 = /*#__PURE__*/_createTextVNode(\"添加\");\n\nconst _hoisted_6 = /*#__PURE__*/_createTextVNode(\"上一步\");\n\nconst _hoisted_7 = /*#__PURE__*/_createTextVNode(\"下一步\");\n\nconst _hoisted_8 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"step-form-style-desc\"\n}, [/*#__PURE__*/_createElementVNode(\"h3\", null, \"说明\"), /*#__PURE__*/_createElementVNode(\"h4\", null, \"发起匿名权重投票事项\"), /*#__PURE__*/_createElementVNode(\"p\", null, \"如果需要，这里可以放一些关于产品的常见问题说明。如果需要，这里可以放一些关于产品的常见问题说明。如果需要，这里可以放一些关于产品的常见问题说明。\")], -1\n/* HOISTED */\n));\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_UserOutlined = _resolveComponent(\"UserOutlined\");\n\n  const _component_a_avatar = _resolveComponent(\"a-avatar\");\n\n  const _component_SmileOutlined = _resolveComponent(\"SmileOutlined\");\n\n  const _component_a_typography_text = _resolveComponent(\"a-typography-text\");\n\n  const _component_a_button = _resolveComponent(\"a-button\");\n\n  const _component_a_form_item = _resolveComponent(\"a-form-item\");\n\n  const _component_a_table = _resolveComponent(\"a-table\");\n\n  const _component_a_input = _resolveComponent(\"a-input\");\n\n  const _component_a_form = _resolveComponent(\"a-form\");\n\n  const _component_a_modal = _resolveComponent(\"a-modal\");\n\n  const _component_a_divider = _resolveComponent(\"a-divider\");\n\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_a_form, {\n    model: _ctx.formState,\n    name: \"custom-validation\",\n    rules: _ctx.rules,\n    labelCol: {\n      lg: {\n        span: 7\n      },\n      sm: {\n        span: 7\n      }\n    },\n    wrapperCol: {\n      lg: {\n        span: 10\n      },\n      sm: {\n        span: 20\n      }\n    },\n    style: {\n      \"margin\": \"40px auto 0\"\n    },\n    autocomplete: \"off\"\n  }, {\n    default: _withCtx(() => [_createCommentVNode(\"\\r\\n      <a-form-item label=\\\"加密参数\\\" :rules=\\\"[{ required: true ,message: '请选择投票选项'}]\\\">\\r\\n        <a-button size=\\\"large\\\" type=\\\"dashed\\\" style=\\\"width: 80%\\\" @click=\\\"getpara\\\">\\r\\n          <PlusOutlined />\\r\\n          获取加密参数\\r\\n        </a-button>\\r\\n      </a-form-item>\\r\\n\\r\\n      <a-form-item label=\\\"投票类型\\\" name=\\\"pattern\\\" :rules=\\\"[{ required: true, message: '请选择投票类型' }]\\\">\\r\\n        <a-radio-group v-model:value=\\\"formState.pattern\\\">\\r\\n          <a-radio :value=\\\"1\\\">单选</a-radio>\\r\\n          <a-radio :value=\\\"2\\\">多选</a-radio>\\r\\n          <a-radio :value=\\\"3\\\">分数</a-radio>\\r\\n        </a-radio-group>\\r\\n      </a-form-item>\\r\\n      \\r\\n\\r\\n      <a-form-item label=\\\"加密参数\\\" v-if=\\\"formState.encryption.length\\\">\\r\\n        <a-descriptions bordered :column=\\\"{ xxl: 1, xl: 1, lg: 1, md: 1, sm: 1, xs: 1 }\\\">\\r\\n          <a-descriptions-item label=\\\"P\\\">{{formState.encryption[0]}}</a-descriptions-item>\\r\\n          <a-descriptions-item label=\\\"G\\\">{{formState.encryption[1]}}</a-descriptions-item>\\r\\n          <a-descriptions-item label=\\\"G\\\">{{formState.encryption[2]}}</a-descriptions-item>\\r\\n        </a-descriptions>\\r\\n      </a-form-item>\\r\\n      \"), _createVNode(_component_a_form_item, {\n      label: \"添加投票者\",\n      rules: [{\n        required: true\n      }]\n    }, {\n      default: _withCtx(() => [_ctx.formState.users.length ? (_openBlock(), _createElementBlock(\"ul\", _hoisted_2, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.formState.users, user => {\n        return _openBlock(), _createElementBlock(\"li\", {\n          key: user.key,\n          class: \"user\"\n        }, [_createVNode(_component_a_avatar, null, {\n          icon: _withCtx(() => [_createVNode(_component_UserOutlined)]),\n          _: 1\n          /* STABLE */\n\n        }), _createTextVNode(\" \" + _toDisplayString(user.id), 1\n        /* TEXT */\n        )]);\n      }), 128\n      /* KEYED_FRAGMENT */\n      ))])) : (_openBlock(), _createBlock(_component_a_typography_text, {\n        key: 1,\n        class: \"ant-form-text\",\n        type: \"secondary\"\n      }, {\n        default: _withCtx(() => [_hoisted_3, _createVNode(_component_SmileOutlined), _hoisted_4]),\n        _: 1\n        /* STABLE */\n\n      })), _createVNode(_component_a_button, {\n        \"html-type\": \"button\",\n        style: {\n          \"margin\": \"0 8px\"\n        },\n        onClick: _ctx.send\n      }, {\n        default: _withCtx(() => [_hoisted_5]),\n        _: 1\n        /* STABLE */\n\n      }, 8\n      /* PROPS */\n      , [\"onClick\"])]),\n      _: 1\n      /* STABLE */\n\n    }), _createVNode(_component_a_table, {\n      dataSource: _ctx.data,\n      columns: _ctx.columns\n    }, null, 8\n    /* PROPS */\n    , [\"dataSource\", \"columns\"]), _createVNode(_component_a_modal, {\n      visible: _ctx.visible,\n      \"onUpdate:visible\": _cache[1] || (_cache[1] = $event => _ctx.visible = $event),\n      title: \"投票者信息\",\n      onOk: _ctx.onOk\n    }, {\n      default: _withCtx(() => [_createVNode(_component_a_form, {\n        ref: \"modalFormRef\",\n        model: _ctx.modalFormState,\n        layout: \"vertical\",\n        name: \"userForm\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_a_form_item, {\n          name: \"id\",\n          label: \"投票者ID\",\n          rules: [{\n            required: true\n          }]\n        }, {\n          default: _withCtx(() => [_createVNode(_component_a_input, {\n            value: _ctx.modalFormState.id,\n            \"onUpdate:value\": _cache[0] || (_cache[0] = $event => _ctx.modalFormState.id = $event)\n          }, null, 8\n          /* PROPS */\n          , [\"value\"])]),\n          _: 1\n          /* STABLE */\n\n        })]),\n        _: 1\n        /* STABLE */\n\n      }, 8\n      /* PROPS */\n      , [\"model\"])]),\n      _: 1\n      /* STABLE */\n\n    }, 8\n    /* PROPS */\n    , [\"visible\", \"onOk\"]), _createCommentVNode(\"\\r\\n      <a-form-item label=\\\"加密参数\\\" :rules=\\\"[{ required: true ,message: '请选择投票选项'}]\\\">\\r\\n        <a-input-number id=\\\"inputNumber\\\" v-model:value=\\\"formState.k\\\" :min=\\\"1\\\" :max=\\\"formState.n\\\" @click=\\\"number\\\" />\\r\\n      </a-form-item>\\r\\n      <a-form-item label=\\\"门限参数\\\" v-if=\\\"formState.k\\\">\\r\\n        <a-descriptions bordered :column=\\\"{ xxl: 1, xl: 1, lg: 1, md: 1, sm: 1, xs: 1 }\\\">\\r\\n          <a-descriptions-item label=\\\"投票者人数\\\">{{formState.n}}</a-descriptions-item>\\r\\n          <a-descriptions-item label=\\\"门限人数\\\">{{formState.k}}</a-descriptions-item>\\r\\n        </a-descriptions>\\r\\n      </a-form-item>\\r\\n      \"), _createVNode(_component_a_form_item, {\n      wrapperCol: {\n        span: 24\n      },\n      style: {\n        \"text-align\": \"center\"\n      }\n    }, {\n      default: _withCtx(() => [_createVNode(_component_a_button, {\n        type: \"primary\",\n        onClick: _ctx.prevStep\n      }, {\n        default: _withCtx(() => [_hoisted_6]),\n        _: 1\n        /* STABLE */\n\n      }, 8\n      /* PROPS */\n      , [\"onClick\"]), _createVNode(_component_a_button, {\n        type: \"primary\",\n        \"html-type\": \"submit\",\n        style: {\n          \"margin-left\": \"8px\"\n        },\n        onClick: _ctx.nextStep\n      }, {\n        default: _withCtx(() => [_hoisted_7]),\n        _: 1\n        /* STABLE */\n\n      }, 8\n      /* PROPS */\n      , [\"onClick\"])]),\n      _: 1\n      /* STABLE */\n\n    })]),\n    _: 1\n    /* STABLE */\n\n  }, 8\n  /* PROPS */\n  , [\"model\", \"rules\"]), _createVNode(_component_a_divider), _hoisted_8]);\n}","map":{"version":3,"mappings":";;;;;EACOA,KAA4B,EAA5B;IAAA;EAAA;;;;;;iDA6C6D;;iDAEvC;;iDAI4C;;iDAyBtB;;iDAC4C;;gEAK3FC,oBAIM,KAJN,EAIM;EAJDC,KAAK,EAAC;AAIL,CAJN,EAAiC,cAC/BD,oBAAW,IAAX,EAAW,IAAX,EAAI,IAAJ,CAD+B,eAE/BA,oBAAmB,IAAnB,EAAmB,IAAnB,EAAI,YAAJ,CAF+B,eAG/BA,oBAA+E,GAA/E,EAA+E,IAA/E,EAAG,0EAAH,CAH+B,CAAjC;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;uBAlFFE,oBAuFM,KAvFN,cAuFM,CAtFJC,aA8ESC,iBA9ET,EA8ES;IA9EAC,KAAK,EAAEC,cA8EP;IA9EkBC,IAAI,EAAC,mBA8EvB;IA9E4CC,KAAK,EAAEF,UA8EnD;IA9E2DG,QAAQ,EAAE;MAAAC;QAAAC;MAAA;MAAAC;QAAAD;MAAA;IAAA,CA8ErE;IA7ENE,UAAU,EAAE;MAAAH;QAAAC;MAAA;MAAAC;QAAAD;MAAA;IAAA,CA6EN;IA7EwCZ,KAA4B,EAA5B;MAAA;IAAA,CA6ExC;IA7EqEe,YAAY,EAAC;EA6ElF,CA9ET;sBAEA,MAwBK,CAxBLC,urCAwBK,EAEHZ,aAuBca,sBAvBd,EAuBc;MAvBDC,KAAK,EAAC,OAuBL;MAvBcT,KAAK,EAAE;QAAAU;MAAA;IAuBrB,CAvBd;wBACE,MAaW,CAbKZ,eAAUa,KAAV,CAAgBC,wBAC9BlB,oBAWK,IAXL,EAWKmB,UAXL,EAWK,oBAVHnB,oBASWoB,SATX,EASW,IATX,EASWC,YATcjB,eAAUa,KASxB,EATMK,IAAuB,IAAnB;6BACnBtB,oBAOK,IAPL,EAOK;eARyCsB,IAAI,CAACC,GAQ9C;UAPDxB,KAAK,EAAC;QAOL,CAPL,GACEE,aAIWuB,mBAJX,EAIW,IAJX,EAIW;UAHEC,IAAI,WACb,MAAgB,CAAhBxB,aAAgByB,uBAAhB,CAAgB,CADH,CAGN;;;;QAAA,CAJX,oBAIW,MACXC,iBAAGL,IAAI,CAACM,EAAR,GAAU;QAAA;UANZ;OAQS,CATX;;MAAA,CAUG,EAXL,oBAcAC,aAIoBC,4BAJpB,EAIoB;cAAA;QAJD/B,KAAK,EAAC,eAIL;QAJqBgC,IAAI,EAAC;MAI1B,CAJpB;0BAA0D,MAExD,0BAAiBC,wBAAjB;;;;OAFF,EAFS,EAQX/B,aAA8EgC,mBAA9E,EAA8E;QAApE,aAAU,QAA0D;QAAjDpC,KAAqB,EAArB;UAAA;QAAA,CAAiD;QAA1BqC,OAAK,EAAE9B;MAAmB,CAA9E;0BAAiE,MAAE;;;;OAAnE;;MAAA,cARW;;;;KAdb,CAFG,EA2BHH,aAAiDkC,kBAAjD,EAAiD;MAAvCC,UAAU,EAAEhC,SAA2B;MAApBiC,OAAO,EAAEjC;IAAW,CAAjD;;IAAA,4BA3BG,EA6BHH,aAMUqC,kBANV,EAMU;MANOC,OAAO,EAAEnC,YAMhB;8DANgBA,eAAOoC,OAMvB;MANyBC,KAAK,EAAC,OAM/B;MANwCC,IAAE,EAAEtC;IAM5C,CANV;wBACE,MAIS,CAJTH,aAISC,iBAJT,EAIS;QAJDyC,GAAG,EAAC,cAIH;QAJmBxC,KAAK,EAAEC,mBAI1B;QAJ0CwC,MAAM,EAAC,UAIjD;QAJ4DvC,IAAI,EAAC;MAIjE,CAJT;0BACE,MAEc,CAFdJ,aAEca,sBAFd,EAEc;UAFDT,IAAI,EAAC,IAEJ;UAFSU,KAAK,EAAC,OAEf;UAFwBT,KAAK,EAAE;YAAAU;UAAA;QAE/B,CAFd;4BACE,MAA6C,CAA7Cf,aAA6C4C,kBAA7C,EAA6C;YAA5BC,KAAK,EAAE1C,oBAAewB,EAAM;kEAArBxB,oBAAewB,KAAEY;UAAI,CAA7C;;UAAA,YAA6C;;;;SAD/C,CAEc;;;;OAHhB;;MAAA,YAIS;;;;KALX;;IAAA,sBA7BG,EAoCH3B,ipBApCG,EAgDHZ,aAGca,sBAHd,EAGc;MAHAH,UAAU,EAAE;QAAAF;MAAA,CAGZ;MAH0BZ,KAA0B,EAA1B;QAAA;MAAA;IAG1B,CAHd;wBACE,MAAyD,CAAzDI,aAAyDgC,mBAAzD,EAAyD;QAA/CF,IAAI,EAAC,SAA0C;QAA/BG,OAAK,EAAE9B;MAAwB,CAAzD;0BAA2C,MAAG;;;;OAA9C;;MAAA,cAAyD,EACzDH,aAAqGgC,mBAArG,EAAqG;QAA3FF,IAAI,EAAC,SAAsF;QAA5E,aAAU,QAAkE;QAAzDlC,KAAwB,EAAxB;UAAA;QAAA,CAAyD;QAA/BqC,OAAK,EAAE9B;MAAwB,CAArG;0BAAuF,MAAG;;;;OAA1F;;MAAA,cADyD;;;;KAD3D,CAhDG;;;;GA1BL;;EAAA,qBAsFI,EANJH,aAAa8C,oBAAb,CAMI,EALJC,UAKI,CAvFN","names":["style","_createElementVNode","class","_createElementBlock","_createVNode","_component_a_form","model","_ctx","name","rules","labelCol","lg","span","sm","wrapperCol","autocomplete","_createCommentVNode","_component_a_form_item","label","required","users","length","_hoisted_2","_Fragment","_renderList","user","key","_component_a_avatar","icon","_component_UserOutlined","_toDisplayString","id","_createBlock","_component_a_typography_text","type","_component_SmileOutlined","_component_a_button","onClick","_component_a_table","dataSource","columns","_component_a_modal","visible","$event","title","onOk","ref","layout","_component_a_input","value","_component_a_divider","_hoisted_8"],"sourceRoot":"","sources":["/home/ubuntu/community/vue-web/src/views/InitVote/avec/initAvec/StepTwo.vue"],"sourcesContent":["<template>\r\n  <div style=\"margin: 60px auto 0;\">\r\n    <a-form :model=\"formState\" name=\"custom-validation\" :rules=\"rules\" :labelCol=\"{lg: {span: 7}, sm: {span: 7}}\"\r\n      :wrapperCol=\"{lg: {span: 10}, sm: {span: 20}}\" style=\"margin: 40px auto 0;\" autocomplete=\"off\">\r\n    <!--\r\n      <a-form-item label=\"加密参数\" :rules=\"[{ required: true ,message: '请选择投票选项'}]\">\r\n        <a-button size=\"large\" type=\"dashed\" style=\"width: 80%\" @click=\"getpara\">\r\n          <PlusOutlined />\r\n          获取加密参数\r\n        </a-button>\r\n      </a-form-item>\r\n\r\n      <a-form-item label=\"投票类型\" name=\"pattern\" :rules=\"[{ required: true, message: '请选择投票类型' }]\">\r\n        <a-radio-group v-model:value=\"formState.pattern\">\r\n          <a-radio :value=\"1\">单选</a-radio>\r\n          <a-radio :value=\"2\">多选</a-radio>\r\n          <a-radio :value=\"3\">分数</a-radio>\r\n        </a-radio-group>\r\n      </a-form-item>\r\n      \r\n\r\n      <a-form-item label=\"加密参数\" v-if=\"formState.encryption.length\">\r\n        <a-descriptions bordered :column=\"{ xxl: 1, xl: 1, lg: 1, md: 1, sm: 1, xs: 1 }\">\r\n          <a-descriptions-item label=\"P\">{{formState.encryption[0]}}</a-descriptions-item>\r\n          <a-descriptions-item label=\"G\">{{formState.encryption[1]}}</a-descriptions-item>\r\n          <a-descriptions-item label=\"G\">{{formState.encryption[2]}}</a-descriptions-item>\r\n        </a-descriptions>\r\n      </a-form-item>\r\n      -->\r\n\r\n      <a-form-item label=\"添加投票者\" :rules=\"[{ required: true }]\">\r\n        <template v-if=\"formState.users.length\">\r\n          <ul>\r\n            <template v-for=\"user in formState.users\" :key=\"user.key\">\r\n              <li class=\"user\">\r\n                <a-avatar>\r\n                  <template #icon>\r\n                    <UserOutlined />\r\n                  </template>\r\n                </a-avatar>\r\n                {{ user.id }}\r\n              </li>\r\n            </template>\r\n          </ul>\r\n        </template>\r\n        <template v-else>\r\n          <a-typography-text class=\"ant-form-text\" type=\"secondary\">\r\n            (\r\n            <SmileOutlined />\r\n            请添加合法投票者. )\r\n          </a-typography-text>\r\n        </template>\r\n        <a-button html-type=\"button\" style=\"margin: 0 8px\" @click=\"send\">添加</a-button>\r\n      </a-form-item>\r\n\r\n      <a-table :dataSource=\"data\" :columns=\"columns\" />\r\n\r\n      <a-modal v-model:visible=\"visible\" title=\"投票者信息\" @ok=\"onOk\">\r\n        <a-form ref=\"modalFormRef\" :model=\"modalFormState\" layout=\"vertical\" name=\"userForm\">\r\n          <a-form-item name=\"id\" label=\"投票者ID\" :rules=\"[{ required: true }]\">\r\n            <a-input v-model:value=\"modalFormState.id\" />\r\n          </a-form-item>\r\n        </a-form>\r\n      </a-modal>\r\n      <!--\r\n      <a-form-item label=\"加密参数\" :rules=\"[{ required: true ,message: '请选择投票选项'}]\">\r\n        <a-input-number id=\"inputNumber\" v-model:value=\"formState.k\" :min=\"1\" :max=\"formState.n\" @click=\"number\" />\r\n      </a-form-item>\r\n      <a-form-item label=\"门限参数\" v-if=\"formState.k\">\r\n        <a-descriptions bordered :column=\"{ xxl: 1, xl: 1, lg: 1, md: 1, sm: 1, xs: 1 }\">\r\n          <a-descriptions-item label=\"投票者人数\">{{formState.n}}</a-descriptions-item>\r\n          <a-descriptions-item label=\"门限人数\">{{formState.k}}</a-descriptions-item>\r\n        </a-descriptions>\r\n      </a-form-item>\r\n      -->\r\n\r\n      <a-form-item :wrapperCol=\"{ span: 24 }\" style=\"text-align: center\">\r\n        <a-button type=\"primary\" @click=\"prevStep\">上一步</a-button>\r\n        <a-button type=\"primary\" html-type=\"submit\" style=\"margin-left: 8px\" @click=\"nextStep\">下一步</a-button>\r\n      </a-form-item>\r\n    </a-form>\r\n\r\n    <a-divider />\r\n    <div class=\"step-form-style-desc\">\r\n      <h3>说明</h3>\r\n      <h4>发起匿名权重投票事项</h4>\r\n      <p>如果需要，这里可以放一些关于产品的常见问题说明。如果需要，这里可以放一些关于产品的常见问题说明。如果需要，这里可以放一些关于产品的常见问题说明。</p>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport emitter from '@/utils/bus';\r\nimport { message } from 'ant-design-vue';\r\nimport { defineComponent, reactive, ref, watch, toRaw } from 'vue';\r\n\r\n\r\nexport default defineComponent({\r\n  setup() {\r\n    const formState = reactive({\r\n      encryption: [],\r\n      users: [],\r\n      n: '',\r\n      k: '',\r\n      pattern: ''\r\n    });\r\n\r\n    var data= []\r\n    const conlums = [{\r\n      title:\"Uid\",\r\n      dateIndex:\"uid\",\r\n      key:\"uid\"\r\n    },\r\n    {\r\n      title:\"Action\",\r\n      dataIndex:\"action\",\r\n      key:\"action\"\r\n    }];\r\n\r\n    const formRef = ref();\r\n    const modalFormRef = ref();\r\n    const visible = ref(false);\r\n    const modalFormState = ref({});\r\n    watch(visible, () => {\r\n      modalFormState.value = {};\r\n    }, {\r\n      flush: 'post',\r\n    });\r\n\r\n    const onOk = () => {\r\n      modalFormRef.value.validateFields().then(() => {\r\n        formState.users.push({\r\n          ...modalFormState.value,\r\n          key: Date.now(),\r\n        });\r\n        visible.value = false;\r\n      });\r\n    };\r\n\r\n    const onFinish = () => {\r\n      console.log('Finish:', toRaw(formState));\r\n    };\r\n\r\n\r\n    return {\r\n      formState,\r\n      formRef,\r\n      modalFormRef,\r\n      visible,\r\n      modalFormState,\r\n      onOk,\r\n      onFinish,\r\n    };\r\n  },\r\n\r\n  methods: {\r\n    send(){\r\n      this.$http.post('http://192.168.5.42:9999/get_all_user')\r\n      .then((response) => {\r\n        this.formState.all_user = response.data\r\n        for (let i = 0; i<this.formState.all_user.length;i++){\r\n          this.data.push({name:this.formState.all_user[i],action:\"123\"})\r\n        }\r\n      })\r\n    },\r\n\r\n    number() {\r\n      this.formState.n = this.formState.users.length\r\n    },\r\n    getpara() {\r\n      var para = setup1(256)\r\n      console.log(para.P)\r\n      console.log(typeof (para))\r\n      this.formState.encryption = Object.values(para)\r\n      // console.log(Object.values(para))\r\n    },\r\n    prevStep() {\r\n      this.$emit('prevStep')\r\n    },\r\n    nextStep() {\r\n\r\n      if (this.formState.encryption != '' && this.formState.users != '' && this.formState.k != '') {\r\n        emitter.emit(\"Res1\", this.formState.encryption)\r\n        var users = []\r\n        for (let i = 0; i < this.formState.users.length; i++) {\r\n          users[i] = this.formState.users[i].id\r\n        }\r\n        var res = []\r\n        res.push(users.toString(), this.formState.n, this.formState.k, this.formState.pattern, this.formState.users)\r\n        emitter.emit(\"Res2\", res)\r\n        this.$emit('nextStep')\r\n      }\r\n      else {\r\n        message.destroy()\r\n        message.warning(\"请生成定制信息\")\r\n      }\r\n    }\r\n\r\n  }\r\n\r\n\r\n});\r\n</script>\r\n<style lang=\"less\" scoped>\r\n.step-form-style-desc {\r\n  padding: 0 56px;\r\n  color: rgba(0, 0, 0, .45);\r\n\r\n  h3 {\r\n    margin: 0 0 12px;\r\n    color: rgba(0, 0, 0, .45);\r\n    font-size: 16px;\r\n    line-height: 32px;\r\n  }\r\n\r\n  h4 {\r\n    margin: 0 0 4px;\r\n    color: rgba(0, 0, 0, .45);\r\n    font-size: 14px;\r\n    line-height: 22px;\r\n  }\r\n\r\n  p {\r\n    margin-top: 0;\r\n    margin-bottom: 12px;\r\n    line-height: 22px;\r\n  }\r\n}\r\n\r\n.dynamic-delete-button {\r\n  cursor: pointer;\r\n  position: relative;\r\n  top: 4px;\r\n  font-size: 24px;\r\n  color: #999;\r\n  transition: all 0.3s;\r\n}\r\n\r\n.dynamic-delete-button:hover {\r\n  color: #777;\r\n}\r\n\r\n.dynamic-delete-button[disabled] {\r\n  cursor: not-allowed;\r\n  opacity: 0.5;\r\n}\r\n</style>\r\n"]},"metadata":{},"sourceType":"module"}