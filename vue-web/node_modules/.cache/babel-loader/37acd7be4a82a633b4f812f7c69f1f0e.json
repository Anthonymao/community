{"ast":null,"code":"import \"core-js/modules/es.error.cause.js\";\n\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n}\n\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nfunction _iterableToArrayLimit(arr, i) {\n  var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n\n  if (_i == null) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n\n  var _s, _e;\n\n  try {\n    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/es.string.trim.js\";\nimport \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.symbol.description.js\";\nimport \"core-js/modules/es.symbol.iterator.js\";\nimport \"core-js/modules/es.array.iterator.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport \"core-js/modules/es.array.slice.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.array.from.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}\n\nimport { addClass, outerHeight } from \"./../helpers/dom/element.mjs\";\nimport { arrayEach } from \"./../helpers/array.mjs\";\n/**\n * @class GhostTable\n */\n\nvar GhostTable = /*#__PURE__*/function () {\n  function GhostTable(hotInstance) {\n    _classCallCheck(this, GhostTable);\n    /**\n     * Handsontable instance.\n     *\n     * @type {Core}\n     */\n\n\n    this.hot = hotInstance;\n    /**\n     * Container element where every table will be injected.\n     *\n     * @type {HTMLElement|null}\n     */\n\n    this.container = null;\n    /**\n     * Flag which determine is table was injected to DOM.\n     *\n     * @type {boolean}\n     */\n\n    this.injected = false;\n    /**\n     * Added rows collection.\n     *\n     * @type {Array}\n     */\n\n    this.rows = [];\n    /**\n     * Added columns collection.\n     *\n     * @type {Array}\n     */\n\n    this.columns = [];\n    /**\n     * Samples prepared for calculations.\n     *\n     * @type {Map}\n     * @default {null}\n     */\n\n    this.samples = null;\n    /**\n     * Ghost table settings.\n     *\n     * @type {object}\n     * @default {Object}\n     */\n\n    this.settings = {\n      useHeaders: true\n    };\n  }\n  /**\n   * Add row.\n   *\n   * @param {number} row Row index.\n   * @param {Map} samples Samples Map object.\n   */\n\n\n  _createClass(GhostTable, [{\n    key: \"addRow\",\n    value: function addRow(row, samples) {\n      if (this.columns.length) {\n        throw new Error('Doesn\\'t support multi-dimensional table');\n      }\n\n      if (!this.rows.length) {\n        this.container = this.createContainer(this.hot.rootElement.className);\n      }\n\n      var rowObject = {\n        row: row\n      };\n      this.rows.push(rowObject);\n      this.samples = samples;\n      this.table = this.createTable(this.hot.table.className);\n      this.table.colGroup.appendChild(this.createColGroupsCol());\n      this.table.tr.appendChild(this.createRow(row));\n      this.container.container.appendChild(this.table.fragment);\n      rowObject.table = this.table.table;\n    }\n    /**\n     * Add a row consisting of the column headers.\n     *\n     * @param {Map} samples A map with sampled table values.\n     */\n\n  }, {\n    key: \"addColumnHeadersRow\",\n    value: function addColumnHeadersRow(samples) {\n      var colHeader = this.hot.getColHeader(0);\n\n      if (colHeader !== null && colHeader !== void 0) {\n        var rowObject = {\n          row: -1\n        };\n        this.rows.push(rowObject);\n        this.container = this.createContainer(this.hot.rootElement.className);\n        this.samples = samples;\n        this.table = this.createTable(this.hot.table.className);\n        this.table.colGroup.appendChild(this.createColGroupsCol());\n        this.appendColumnHeadersRow();\n        this.container.container.appendChild(this.table.fragment);\n        rowObject.table = this.table.table;\n      }\n    }\n    /**\n     * Add column.\n     *\n     * @param {number} column Column index.\n     * @param {Map} samples A map with sampled table values.\n     */\n\n  }, {\n    key: \"addColumn\",\n    value: function addColumn(column, samples) {\n      if (this.rows.length) {\n        throw new Error('Doesn\\'t support multi-dimensional table');\n      }\n\n      if (!this.columns.length) {\n        this.container = this.createContainer(this.hot.rootElement.className);\n      }\n\n      var columnObject = {\n        col: column\n      };\n      this.columns.push(columnObject);\n      this.samples = samples;\n      this.table = this.createTable(this.hot.table.className);\n\n      if (this.getSetting('useHeaders') && this.hot.getColHeader(column) !== null) {\n        // Please keep in mind that the renderable column index equal to the visual columns index for the GhostTable.\n        // We render all columns.\n        this.hot.view.appendColHeader(column, this.table.th);\n      }\n\n      this.table.tBody.appendChild(this.createCol(column));\n      this.container.container.appendChild(this.table.fragment);\n      columnObject.table = this.table.table;\n    }\n    /**\n     * Get calculated heights.\n     *\n     * @param {Function} callback Callback which will be fired for each calculated row.\n     */\n\n  }, {\n    key: \"getHeights\",\n    value: function getHeights(callback) {\n      if (!this.injected) {\n        this.injectTable();\n      }\n\n      arrayEach(this.rows, function (row) {\n        // -1 <- reduce border-top from table\n        callback(row.row, outerHeight(row.table) - 1);\n      });\n    }\n    /**\n     * Get calculated widths.\n     *\n     * @param {Function} callback Callback which will be fired for each calculated column.\n     */\n\n  }, {\n    key: \"getWidths\",\n    value: function getWidths(callback) {\n      if (!this.injected) {\n        this.injectTable();\n      }\n\n      arrayEach(this.columns, function (column) {\n        // The GhostTable class is responsible for calculating the columns' width based on the\n        // contents rendered in the cells. In some cases, when the column's width calculated by\n        // the browser is a decimal point with a fractional component. For example, 35.32px.\n        // The usage of the `.offsetWidth` (or our helper `outerWidth`) is incorrect.\n        // The `outerWidth` in the mentioned example (35.32px) would return 35 pixels that\n        // would cause the text to not fit in the cell, thus increasing the row height.\n        // That's why the `getBoundingClientRect` method is used. The method returns the number\n        // that is rounded up to make sure that there will be a space for the cell's content.\n        var _column$table$getBoun = column.table.getBoundingClientRect(),\n            width = _column$table$getBoun.width;\n\n        callback(column.col, Math.ceil(width));\n      });\n    }\n    /**\n     * Set the Ghost Table settings to the provided object.\n     *\n     * @param {object} settings New Ghost Table Settings.\n     */\n\n  }, {\n    key: \"setSettings\",\n    value: function setSettings(settings) {\n      this.settings = settings;\n    }\n    /**\n     * Set a single setting of the Ghost Table.\n     *\n     * @param {string} name Setting name.\n     * @param {*} value Setting value.\n     */\n\n  }, {\n    key: \"setSetting\",\n    value: function setSetting(name, value) {\n      if (!this.settings) {\n        this.settings = {};\n      }\n\n      this.settings[name] = value;\n    }\n    /**\n     * Get the Ghost Table settings.\n     *\n     * @returns {object|null}\n     */\n\n  }, {\n    key: \"getSettings\",\n    value: function getSettings() {\n      return this.settings;\n    }\n    /**\n     * Get a single Ghost Table setting.\n     *\n     * @param {string} name The setting name to get.\n     * @returns {boolean|null}\n     */\n\n  }, {\n    key: \"getSetting\",\n    value: function getSetting(name) {\n      if (this.settings) {\n        return this.settings[name];\n      }\n\n      return null;\n    }\n    /**\n     * Create colgroup col elements.\n     *\n     * @returns {DocumentFragment}\n     */\n\n  }, {\n    key: \"createColGroupsCol\",\n    value: function createColGroupsCol() {\n      var _this = this;\n\n      var fragment = this.hot.rootDocument.createDocumentFragment();\n\n      if (this.hot.hasRowHeaders()) {\n        fragment.appendChild(this.createColElement(-1));\n      }\n\n      this.samples.forEach(function (sample) {\n        arrayEach(sample.strings, function (string) {\n          fragment.appendChild(_this.createColElement(string.col));\n        });\n      });\n      return fragment;\n    }\n    /**\n     * Create table row element.\n     *\n     * @param {number} row Row index.\n     * @returns {DocumentFragment} Returns created table row elements.\n     */\n\n  }, {\n    key: \"createRow\",\n    value: function createRow(row) {\n      var _this2 = this;\n\n      var rootDocument = this.hot.rootDocument;\n      var fragment = rootDocument.createDocumentFragment();\n      var th = rootDocument.createElement('th');\n\n      if (this.hot.hasRowHeaders()) {\n        this.hot.view.appendRowHeader(row, th);\n        fragment.appendChild(th);\n      }\n\n      this.samples.forEach(function (sample) {\n        arrayEach(sample.strings, function (string) {\n          var column = string.col;\n\n          var cellProperties = _this2.hot.getCellMeta(row, column);\n\n          cellProperties.col = column;\n          cellProperties.row = row;\n\n          var renderer = _this2.hot.getCellRenderer(cellProperties);\n\n          var td = rootDocument.createElement('td'); // Indicate that this element is created and supported by GhostTable. It can be useful to\n          // exclude rendering performance costly logic or exclude logic which doesn't work within a hidden table.\n\n          td.setAttribute('ghost-table', 1);\n          renderer(_this2.hot, td, row, column, _this2.hot.colToProp(column), string.value, cellProperties);\n          fragment.appendChild(td);\n        });\n      });\n      return fragment;\n    }\n    /**\n     * Creates DOM elements for headers and appends them to the THEAD element of the table.\n     */\n\n  }, {\n    key: \"appendColumnHeadersRow\",\n    value: function appendColumnHeadersRow() {\n      var _this3 = this;\n\n      var rootDocument = this.hot.rootDocument;\n      var domFragment = rootDocument.createDocumentFragment();\n      var columnHeaders = [];\n\n      if (this.hot.hasRowHeaders()) {\n        var th = rootDocument.createElement('th');\n        columnHeaders.push([-1, th]);\n        domFragment.appendChild(th);\n      }\n\n      this.samples.forEach(function (sample) {\n        arrayEach(sample.strings, function (string) {\n          var column = string.col;\n          var th = rootDocument.createElement('th');\n          columnHeaders.push([column, th]);\n          domFragment.appendChild(th);\n        });\n      }); // Appending DOM elements for headers\n\n      this.table.tHead.appendChild(domFragment);\n      arrayEach(columnHeaders, function (columnHeader) {\n        var _columnHeader = _slicedToArray(columnHeader, 2),\n            column = _columnHeader[0],\n            th = _columnHeader[1]; // Using source method for filling a header with value.\n\n\n        _this3.hot.view.appendColHeader(column, th);\n      });\n    }\n    /**\n     * Create table column elements.\n     *\n     * @param {number} column Column index.\n     * @returns {DocumentFragment} Returns created column table column elements.\n     */\n\n  }, {\n    key: \"createCol\",\n    value: function createCol(column) {\n      var _this4 = this;\n\n      var rootDocument = this.hot.rootDocument;\n      var fragment = rootDocument.createDocumentFragment();\n      this.samples.forEach(function (sample) {\n        arrayEach(sample.strings, function (string) {\n          var row = string.row;\n\n          var cellProperties = _this4.hot.getCellMeta(row, column);\n\n          cellProperties.col = column;\n          cellProperties.row = row;\n\n          var renderer = _this4.hot.getCellRenderer(cellProperties);\n\n          var td = rootDocument.createElement('td');\n          var tr = rootDocument.createElement('tr'); // Indicate that this element is created and supported by GhostTable. It can be useful to\n          // exclude rendering performance costly logic or exclude logic which doesn't work within a hidden table.\n\n          td.setAttribute('ghost-table', 1);\n          renderer(_this4.hot, td, row, column, _this4.hot.colToProp(column), string.value, cellProperties);\n          tr.appendChild(td);\n          fragment.appendChild(tr);\n        });\n      });\n      return fragment;\n    }\n    /**\n     * Remove table from document and reset internal state.\n     */\n\n  }, {\n    key: \"clean\",\n    value: function clean() {\n      this.rows.length = 0;\n      this.rows[-1] = void 0;\n      this.columns.length = 0;\n\n      if (this.samples) {\n        this.samples.clear();\n      }\n\n      this.samples = null;\n      this.removeTable();\n    }\n    /**\n     * Inject generated table into document.\n     *\n     * @param {HTMLElement} [parent=null] The element to which the ghost table is injected.\n     */\n\n  }, {\n    key: \"injectTable\",\n    value: function injectTable() {\n      var parent = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n\n      if (!this.injected) {\n        (parent || this.hot.rootElement).appendChild(this.container.fragment);\n        this.injected = true;\n      }\n    }\n    /**\n     * Remove table from document.\n     */\n\n  }, {\n    key: \"removeTable\",\n    value: function removeTable() {\n      if (this.injected && this.container.container.parentNode) {\n        this.container.container.parentNode.removeChild(this.container.container);\n        this.container = null;\n        this.injected = false;\n      }\n    }\n    /**\n     * Create col element.\n     *\n     * @param {number} column Column index.\n     * @returns {HTMLElement}\n     */\n\n  }, {\n    key: \"createColElement\",\n    value: function createColElement(column) {\n      var col = this.hot.rootDocument.createElement('col');\n      col.style.width = \"\".concat(this.hot.view._wt.wtTable.getStretchedColumnWidth(column), \"px\");\n      return col;\n    }\n    /**\n     * Create table element.\n     *\n     * @param {string} className The CSS classes to add.\n     * @returns {object}\n     */\n\n  }, {\n    key: \"createTable\",\n    value: function createTable() {\n      var className = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n      var rootDocument = this.hot.rootDocument;\n      var fragment = rootDocument.createDocumentFragment();\n      var table = rootDocument.createElement('table');\n      var tHead = rootDocument.createElement('thead');\n      var tBody = rootDocument.createElement('tbody');\n      var colGroup = rootDocument.createElement('colgroup');\n      var tr = rootDocument.createElement('tr');\n      var th = rootDocument.createElement('th');\n\n      if (this.isVertical()) {\n        table.appendChild(colGroup);\n      }\n\n      if (this.isHorizontal()) {\n        tr.appendChild(th);\n        tHead.appendChild(tr);\n        table.style.tableLayout = 'auto';\n        table.style.width = 'auto';\n      }\n\n      table.appendChild(tHead);\n\n      if (this.isVertical()) {\n        tBody.appendChild(tr);\n      }\n\n      table.appendChild(tBody);\n      addClass(table, className);\n      fragment.appendChild(table);\n      return {\n        fragment: fragment,\n        table: table,\n        tHead: tHead,\n        tBody: tBody,\n        colGroup: colGroup,\n        tr: tr,\n        th: th\n      };\n    }\n    /**\n     * Create container for tables.\n     *\n     * @param {string} className The CSS classes to add.\n     * @returns {object}\n     */\n\n  }, {\n    key: \"createContainer\",\n    value: function createContainer() {\n      var className = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n      var rootDocument = this.hot.rootDocument;\n      var fragment = rootDocument.createDocumentFragment();\n      var container = rootDocument.createElement('div');\n      var containerClassName = \"htGhostTable htAutoSize \".concat(className.trim());\n      addClass(container, containerClassName);\n      fragment.appendChild(container);\n      return {\n        fragment: fragment,\n        container: container\n      };\n    }\n    /**\n     * Checks if table is raised vertically (checking rows).\n     *\n     * @returns {boolean}\n     */\n\n  }, {\n    key: \"isVertical\",\n    value: function isVertical() {\n      return !!(this.rows.length && !this.columns.length);\n    }\n    /**\n     * Checks if table is raised horizontally (checking columns).\n     *\n     * @returns {boolean}\n     */\n\n  }, {\n    key: \"isHorizontal\",\n    value: function isHorizontal() {\n      return !!(this.columns.length && !this.rows.length);\n    }\n  }]);\n\n  return GhostTable;\n}();\n\nexport default GhostTable;","map":{"version":3,"names":["_slicedToArray","arr","i","_arrayWithHoles","_iterableToArrayLimit","_unsupportedIterableToArray","_nonIterableRest","TypeError","o","minLen","_arrayLikeToArray","n","Object","prototype","toString","call","slice","constructor","name","Array","from","test","len","length","arr2","_i","Symbol","iterator","_arr","_n","_d","_s","_e","next","done","push","value","err","isArray","_classCallCheck","instance","Constructor","_defineProperties","target","props","descriptor","enumerable","configurable","writable","defineProperty","key","_createClass","protoProps","staticProps","addClass","outerHeight","arrayEach","GhostTable","hotInstance","hot","container","injected","rows","columns","samples","settings","useHeaders","addRow","row","Error","createContainer","rootElement","className","rowObject","table","createTable","colGroup","appendChild","createColGroupsCol","tr","createRow","fragment","addColumnHeadersRow","colHeader","getColHeader","appendColumnHeadersRow","addColumn","column","columnObject","col","getSetting","view","appendColHeader","th","tBody","createCol","getHeights","callback","injectTable","getWidths","_column$table$getBoun","getBoundingClientRect","width","Math","ceil","setSettings","setSetting","getSettings","_this","rootDocument","createDocumentFragment","hasRowHeaders","createColElement","forEach","sample","strings","string","_this2","createElement","appendRowHeader","cellProperties","getCellMeta","renderer","getCellRenderer","td","setAttribute","colToProp","_this3","domFragment","columnHeaders","tHead","columnHeader","_columnHeader","_this4","clean","clear","removeTable","parent","arguments","undefined","parentNode","removeChild","style","concat","_wt","wtTable","getStretchedColumnWidth","isVertical","isHorizontal","tableLayout","containerClassName","trim"],"sources":["/home/ubuntu/community/vue-web/node_modules/handsontable/utils/ghostTable.mjs"],"sourcesContent":["function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\nfunction _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/es.string.trim.js\";\nimport \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.symbol.description.js\";\nimport \"core-js/modules/es.symbol.iterator.js\";\nimport \"core-js/modules/es.array.iterator.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport \"core-js/modules/es.array.slice.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.array.from.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\nimport { addClass, outerHeight } from \"./../helpers/dom/element.mjs\";\nimport { arrayEach } from \"./../helpers/array.mjs\"; /**\n                                                     * @class GhostTable\n                                                     */\nvar GhostTable = /*#__PURE__*/function () {\n  function GhostTable(hotInstance) {\n    _classCallCheck(this, GhostTable);\n    /**\n     * Handsontable instance.\n     *\n     * @type {Core}\n     */\n    this.hot = hotInstance;\n    /**\n     * Container element where every table will be injected.\n     *\n     * @type {HTMLElement|null}\n     */\n    this.container = null;\n    /**\n     * Flag which determine is table was injected to DOM.\n     *\n     * @type {boolean}\n     */\n    this.injected = false;\n    /**\n     * Added rows collection.\n     *\n     * @type {Array}\n     */\n    this.rows = [];\n    /**\n     * Added columns collection.\n     *\n     * @type {Array}\n     */\n    this.columns = [];\n    /**\n     * Samples prepared for calculations.\n     *\n     * @type {Map}\n     * @default {null}\n     */\n    this.samples = null;\n    /**\n     * Ghost table settings.\n     *\n     * @type {object}\n     * @default {Object}\n     */\n    this.settings = {\n      useHeaders: true\n    };\n  }\n\n  /**\n   * Add row.\n   *\n   * @param {number} row Row index.\n   * @param {Map} samples Samples Map object.\n   */\n  _createClass(GhostTable, [{\n    key: \"addRow\",\n    value: function addRow(row, samples) {\n      if (this.columns.length) {\n        throw new Error('Doesn\\'t support multi-dimensional table');\n      }\n      if (!this.rows.length) {\n        this.container = this.createContainer(this.hot.rootElement.className);\n      }\n      var rowObject = {\n        row: row\n      };\n      this.rows.push(rowObject);\n      this.samples = samples;\n      this.table = this.createTable(this.hot.table.className);\n      this.table.colGroup.appendChild(this.createColGroupsCol());\n      this.table.tr.appendChild(this.createRow(row));\n      this.container.container.appendChild(this.table.fragment);\n      rowObject.table = this.table.table;\n    }\n\n    /**\n     * Add a row consisting of the column headers.\n     *\n     * @param {Map} samples A map with sampled table values.\n     */\n  }, {\n    key: \"addColumnHeadersRow\",\n    value: function addColumnHeadersRow(samples) {\n      var colHeader = this.hot.getColHeader(0);\n      if (colHeader !== null && colHeader !== void 0) {\n        var rowObject = {\n          row: -1\n        };\n        this.rows.push(rowObject);\n        this.container = this.createContainer(this.hot.rootElement.className);\n        this.samples = samples;\n        this.table = this.createTable(this.hot.table.className);\n        this.table.colGroup.appendChild(this.createColGroupsCol());\n        this.appendColumnHeadersRow();\n        this.container.container.appendChild(this.table.fragment);\n        rowObject.table = this.table.table;\n      }\n    }\n\n    /**\n     * Add column.\n     *\n     * @param {number} column Column index.\n     * @param {Map} samples A map with sampled table values.\n     */\n  }, {\n    key: \"addColumn\",\n    value: function addColumn(column, samples) {\n      if (this.rows.length) {\n        throw new Error('Doesn\\'t support multi-dimensional table');\n      }\n      if (!this.columns.length) {\n        this.container = this.createContainer(this.hot.rootElement.className);\n      }\n      var columnObject = {\n        col: column\n      };\n      this.columns.push(columnObject);\n      this.samples = samples;\n      this.table = this.createTable(this.hot.table.className);\n      if (this.getSetting('useHeaders') && this.hot.getColHeader(column) !== null) {\n        // Please keep in mind that the renderable column index equal to the visual columns index for the GhostTable.\n        // We render all columns.\n        this.hot.view.appendColHeader(column, this.table.th);\n      }\n      this.table.tBody.appendChild(this.createCol(column));\n      this.container.container.appendChild(this.table.fragment);\n      columnObject.table = this.table.table;\n    }\n\n    /**\n     * Get calculated heights.\n     *\n     * @param {Function} callback Callback which will be fired for each calculated row.\n     */\n  }, {\n    key: \"getHeights\",\n    value: function getHeights(callback) {\n      if (!this.injected) {\n        this.injectTable();\n      }\n      arrayEach(this.rows, function (row) {\n        // -1 <- reduce border-top from table\n        callback(row.row, outerHeight(row.table) - 1);\n      });\n    }\n\n    /**\n     * Get calculated widths.\n     *\n     * @param {Function} callback Callback which will be fired for each calculated column.\n     */\n  }, {\n    key: \"getWidths\",\n    value: function getWidths(callback) {\n      if (!this.injected) {\n        this.injectTable();\n      }\n      arrayEach(this.columns, function (column) {\n        // The GhostTable class is responsible for calculating the columns' width based on the\n        // contents rendered in the cells. In some cases, when the column's width calculated by\n        // the browser is a decimal point with a fractional component. For example, 35.32px.\n        // The usage of the `.offsetWidth` (or our helper `outerWidth`) is incorrect.\n        // The `outerWidth` in the mentioned example (35.32px) would return 35 pixels that\n        // would cause the text to not fit in the cell, thus increasing the row height.\n        // That's why the `getBoundingClientRect` method is used. The method returns the number\n        // that is rounded up to make sure that there will be a space for the cell's content.\n        var _column$table$getBoun = column.table.getBoundingClientRect(),\n          width = _column$table$getBoun.width;\n        callback(column.col, Math.ceil(width));\n      });\n    }\n\n    /**\n     * Set the Ghost Table settings to the provided object.\n     *\n     * @param {object} settings New Ghost Table Settings.\n     */\n  }, {\n    key: \"setSettings\",\n    value: function setSettings(settings) {\n      this.settings = settings;\n    }\n\n    /**\n     * Set a single setting of the Ghost Table.\n     *\n     * @param {string} name Setting name.\n     * @param {*} value Setting value.\n     */\n  }, {\n    key: \"setSetting\",\n    value: function setSetting(name, value) {\n      if (!this.settings) {\n        this.settings = {};\n      }\n      this.settings[name] = value;\n    }\n\n    /**\n     * Get the Ghost Table settings.\n     *\n     * @returns {object|null}\n     */\n  }, {\n    key: \"getSettings\",\n    value: function getSettings() {\n      return this.settings;\n    }\n\n    /**\n     * Get a single Ghost Table setting.\n     *\n     * @param {string} name The setting name to get.\n     * @returns {boolean|null}\n     */\n  }, {\n    key: \"getSetting\",\n    value: function getSetting(name) {\n      if (this.settings) {\n        return this.settings[name];\n      }\n      return null;\n    }\n\n    /**\n     * Create colgroup col elements.\n     *\n     * @returns {DocumentFragment}\n     */\n  }, {\n    key: \"createColGroupsCol\",\n    value: function createColGroupsCol() {\n      var _this = this;\n      var fragment = this.hot.rootDocument.createDocumentFragment();\n      if (this.hot.hasRowHeaders()) {\n        fragment.appendChild(this.createColElement(-1));\n      }\n      this.samples.forEach(function (sample) {\n        arrayEach(sample.strings, function (string) {\n          fragment.appendChild(_this.createColElement(string.col));\n        });\n      });\n      return fragment;\n    }\n\n    /**\n     * Create table row element.\n     *\n     * @param {number} row Row index.\n     * @returns {DocumentFragment} Returns created table row elements.\n     */\n  }, {\n    key: \"createRow\",\n    value: function createRow(row) {\n      var _this2 = this;\n      var rootDocument = this.hot.rootDocument;\n      var fragment = rootDocument.createDocumentFragment();\n      var th = rootDocument.createElement('th');\n      if (this.hot.hasRowHeaders()) {\n        this.hot.view.appendRowHeader(row, th);\n        fragment.appendChild(th);\n      }\n      this.samples.forEach(function (sample) {\n        arrayEach(sample.strings, function (string) {\n          var column = string.col;\n          var cellProperties = _this2.hot.getCellMeta(row, column);\n          cellProperties.col = column;\n          cellProperties.row = row;\n          var renderer = _this2.hot.getCellRenderer(cellProperties);\n          var td = rootDocument.createElement('td');\n\n          // Indicate that this element is created and supported by GhostTable. It can be useful to\n          // exclude rendering performance costly logic or exclude logic which doesn't work within a hidden table.\n          td.setAttribute('ghost-table', 1);\n          renderer(_this2.hot, td, row, column, _this2.hot.colToProp(column), string.value, cellProperties);\n          fragment.appendChild(td);\n        });\n      });\n      return fragment;\n    }\n\n    /**\n     * Creates DOM elements for headers and appends them to the THEAD element of the table.\n     */\n  }, {\n    key: \"appendColumnHeadersRow\",\n    value: function appendColumnHeadersRow() {\n      var _this3 = this;\n      var rootDocument = this.hot.rootDocument;\n      var domFragment = rootDocument.createDocumentFragment();\n      var columnHeaders = [];\n      if (this.hot.hasRowHeaders()) {\n        var th = rootDocument.createElement('th');\n        columnHeaders.push([-1, th]);\n        domFragment.appendChild(th);\n      }\n      this.samples.forEach(function (sample) {\n        arrayEach(sample.strings, function (string) {\n          var column = string.col;\n          var th = rootDocument.createElement('th');\n          columnHeaders.push([column, th]);\n          domFragment.appendChild(th);\n        });\n      });\n\n      // Appending DOM elements for headers\n      this.table.tHead.appendChild(domFragment);\n      arrayEach(columnHeaders, function (columnHeader) {\n        var _columnHeader = _slicedToArray(columnHeader, 2),\n          column = _columnHeader[0],\n          th = _columnHeader[1];\n\n        // Using source method for filling a header with value.\n        _this3.hot.view.appendColHeader(column, th);\n      });\n    }\n\n    /**\n     * Create table column elements.\n     *\n     * @param {number} column Column index.\n     * @returns {DocumentFragment} Returns created column table column elements.\n     */\n  }, {\n    key: \"createCol\",\n    value: function createCol(column) {\n      var _this4 = this;\n      var rootDocument = this.hot.rootDocument;\n      var fragment = rootDocument.createDocumentFragment();\n      this.samples.forEach(function (sample) {\n        arrayEach(sample.strings, function (string) {\n          var row = string.row;\n          var cellProperties = _this4.hot.getCellMeta(row, column);\n          cellProperties.col = column;\n          cellProperties.row = row;\n          var renderer = _this4.hot.getCellRenderer(cellProperties);\n          var td = rootDocument.createElement('td');\n          var tr = rootDocument.createElement('tr');\n\n          // Indicate that this element is created and supported by GhostTable. It can be useful to\n          // exclude rendering performance costly logic or exclude logic which doesn't work within a hidden table.\n          td.setAttribute('ghost-table', 1);\n          renderer(_this4.hot, td, row, column, _this4.hot.colToProp(column), string.value, cellProperties);\n          tr.appendChild(td);\n          fragment.appendChild(tr);\n        });\n      });\n      return fragment;\n    }\n\n    /**\n     * Remove table from document and reset internal state.\n     */\n  }, {\n    key: \"clean\",\n    value: function clean() {\n      this.rows.length = 0;\n      this.rows[-1] = void 0;\n      this.columns.length = 0;\n      if (this.samples) {\n        this.samples.clear();\n      }\n      this.samples = null;\n      this.removeTable();\n    }\n\n    /**\n     * Inject generated table into document.\n     *\n     * @param {HTMLElement} [parent=null] The element to which the ghost table is injected.\n     */\n  }, {\n    key: \"injectTable\",\n    value: function injectTable() {\n      var parent = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n      if (!this.injected) {\n        (parent || this.hot.rootElement).appendChild(this.container.fragment);\n        this.injected = true;\n      }\n    }\n\n    /**\n     * Remove table from document.\n     */\n  }, {\n    key: \"removeTable\",\n    value: function removeTable() {\n      if (this.injected && this.container.container.parentNode) {\n        this.container.container.parentNode.removeChild(this.container.container);\n        this.container = null;\n        this.injected = false;\n      }\n    }\n\n    /**\n     * Create col element.\n     *\n     * @param {number} column Column index.\n     * @returns {HTMLElement}\n     */\n  }, {\n    key: \"createColElement\",\n    value: function createColElement(column) {\n      var col = this.hot.rootDocument.createElement('col');\n      col.style.width = \"\".concat(this.hot.view._wt.wtTable.getStretchedColumnWidth(column), \"px\");\n      return col;\n    }\n\n    /**\n     * Create table element.\n     *\n     * @param {string} className The CSS classes to add.\n     * @returns {object}\n     */\n  }, {\n    key: \"createTable\",\n    value: function createTable() {\n      var className = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n      var rootDocument = this.hot.rootDocument;\n      var fragment = rootDocument.createDocumentFragment();\n      var table = rootDocument.createElement('table');\n      var tHead = rootDocument.createElement('thead');\n      var tBody = rootDocument.createElement('tbody');\n      var colGroup = rootDocument.createElement('colgroup');\n      var tr = rootDocument.createElement('tr');\n      var th = rootDocument.createElement('th');\n      if (this.isVertical()) {\n        table.appendChild(colGroup);\n      }\n      if (this.isHorizontal()) {\n        tr.appendChild(th);\n        tHead.appendChild(tr);\n        table.style.tableLayout = 'auto';\n        table.style.width = 'auto';\n      }\n      table.appendChild(tHead);\n      if (this.isVertical()) {\n        tBody.appendChild(tr);\n      }\n      table.appendChild(tBody);\n      addClass(table, className);\n      fragment.appendChild(table);\n      return {\n        fragment: fragment,\n        table: table,\n        tHead: tHead,\n        tBody: tBody,\n        colGroup: colGroup,\n        tr: tr,\n        th: th\n      };\n    }\n\n    /**\n     * Create container for tables.\n     *\n     * @param {string} className The CSS classes to add.\n     * @returns {object}\n     */\n  }, {\n    key: \"createContainer\",\n    value: function createContainer() {\n      var className = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n      var rootDocument = this.hot.rootDocument;\n      var fragment = rootDocument.createDocumentFragment();\n      var container = rootDocument.createElement('div');\n      var containerClassName = \"htGhostTable htAutoSize \".concat(className.trim());\n      addClass(container, containerClassName);\n      fragment.appendChild(container);\n      return {\n        fragment: fragment,\n        container: container\n      };\n    }\n\n    /**\n     * Checks if table is raised vertically (checking rows).\n     *\n     * @returns {boolean}\n     */\n  }, {\n    key: \"isVertical\",\n    value: function isVertical() {\n      return !!(this.rows.length && !this.columns.length);\n    }\n\n    /**\n     * Checks if table is raised horizontally (checking columns).\n     *\n     * @returns {boolean}\n     */\n  }, {\n    key: \"isHorizontal\",\n    value: function isHorizontal() {\n      return !!(this.columns.length && !this.rows.length);\n    }\n  }]);\n  return GhostTable;\n}();\nexport default GhostTable;"],"mappings":"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"},"metadata":{},"sourceType":"module"}