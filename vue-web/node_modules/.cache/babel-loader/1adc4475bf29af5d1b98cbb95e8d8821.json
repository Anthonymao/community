{"ast":null,"code":"import \"core-js/modules/es.error.cause.js\";\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}\n\nimport { getWindowScrollLeft, getWindowScrollTop } from \"../../helpers/dom/element.mjs\";\n/**\n * Helper class for checking if element will fit at the desired side of cursor.\n *\n * @private\n * @class Cursor\n */\n\nvar Cursor = /*#__PURE__*/function () {\n  function Cursor(object, rootWindow) {\n    _classCallCheck(this, Cursor);\n\n    var windowScrollTop = getWindowScrollTop(rootWindow);\n    var windowScrollLeft = getWindowScrollLeft(rootWindow);\n    var top;\n    var topRelative;\n    var left;\n    var leftRelative;\n    var cellHeight;\n    var cellWidth;\n    this.rootWindow = rootWindow;\n    this.type = this.getSourceType(object);\n\n    if (this.type === 'literal') {\n      top = parseInt(object.top, 10);\n      left = parseInt(object.left, 10);\n      cellHeight = object.height || 0;\n      cellWidth = object.width || 0;\n      topRelative = top;\n      leftRelative = left;\n      top += windowScrollTop;\n      left += windowScrollLeft;\n    } else if (this.type === 'event') {\n      top = parseInt(object.pageY, 10);\n      left = parseInt(object.pageX, 10);\n      cellHeight = object.target.clientHeight;\n      cellWidth = object.target.clientWidth;\n      topRelative = top - windowScrollTop;\n      leftRelative = left - windowScrollLeft;\n    }\n\n    this.top = top;\n    this.topRelative = topRelative;\n    this.left = left;\n    this.leftRelative = leftRelative;\n    this.scrollTop = windowScrollTop;\n    this.scrollLeft = windowScrollLeft;\n    this.cellHeight = cellHeight;\n    this.cellWidth = cellWidth;\n  }\n  /**\n   * Get source type name.\n   *\n   * @param {*} object Event or Object with coordinates.\n   * @returns {string} Returns one of this values: `'literal'`, `'event'`.\n   */\n\n\n  _createClass(Cursor, [{\n    key: \"getSourceType\",\n    value: function getSourceType(object) {\n      var type = 'literal';\n\n      if (object instanceof Event) {\n        type = 'event';\n      }\n\n      return type;\n    }\n    /**\n     * Checks if element can be placed above the cursor.\n     *\n     * @param {HTMLElement} element Element to check if it's size will fit above the cursor.\n     * @returns {boolean}\n     */\n\n  }, {\n    key: \"fitsAbove\",\n    value: function fitsAbove(element) {\n      return this.topRelative >= element.offsetHeight;\n    }\n    /**\n     * Checks if element can be placed below the cursor.\n     *\n     * @param {HTMLElement} element Element to check if it's size will fit below the cursor.\n     * @param {number} [viewportHeight] The viewport height.\n     * @returns {boolean}\n     */\n\n  }, {\n    key: \"fitsBelow\",\n    value: function fitsBelow(element) {\n      var viewportHeight = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.rootWindow.innerHeight;\n      return this.topRelative + element.offsetHeight <= viewportHeight;\n    }\n    /**\n     * Checks if element can be placed on the right of the cursor.\n     *\n     * @param {HTMLElement} element Element to check if it's size will fit on the right of the cursor.\n     * @param {number} [viewportWidth] The viewport width.\n     * @returns {boolean}\n     */\n\n  }, {\n    key: \"fitsOnRight\",\n    value: function fitsOnRight(element) {\n      var viewportWidth = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.rootWindow.innerWidth;\n      return this.leftRelative + this.cellWidth + element.offsetWidth <= viewportWidth;\n    }\n    /**\n     * Checks if element can be placed on the left on the cursor.\n     *\n     * @param {HTMLElement} element Element to check if it's size will fit on the left of the cursor.\n     * @returns {boolean}\n     */\n\n  }, {\n    key: \"fitsOnLeft\",\n    value: function fitsOnLeft(element) {\n      return this.leftRelative >= element.offsetWidth;\n    }\n  }]);\n\n  return Cursor;\n}();\n\nexport default Cursor;","map":{"version":3,"names":["_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_createClass","protoProps","staticProps","prototype","getWindowScrollLeft","getWindowScrollTop","Cursor","object","rootWindow","windowScrollTop","windowScrollLeft","top","topRelative","left","leftRelative","cellHeight","cellWidth","type","getSourceType","parseInt","height","width","pageY","pageX","clientHeight","clientWidth","scrollTop","scrollLeft","value","Event","fitsAbove","element","offsetHeight","fitsBelow","viewportHeight","arguments","undefined","innerHeight","fitsOnRight","viewportWidth","innerWidth","offsetWidth","fitsOnLeft"],"sources":["/home/ubuntu/community/vue-web/node_modules/handsontable/plugins/contextMenu/cursor.mjs"],"sourcesContent":["function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\nimport { getWindowScrollLeft, getWindowScrollTop } from \"../../helpers/dom/element.mjs\"; /**\n                                                                                          * Helper class for checking if element will fit at the desired side of cursor.\n                                                                                          *\n                                                                                          * @private\n                                                                                          * @class Cursor\n                                                                                          */\nvar Cursor = /*#__PURE__*/function () {\n  function Cursor(object, rootWindow) {\n    _classCallCheck(this, Cursor);\n    var windowScrollTop = getWindowScrollTop(rootWindow);\n    var windowScrollLeft = getWindowScrollLeft(rootWindow);\n    var top;\n    var topRelative;\n    var left;\n    var leftRelative;\n    var cellHeight;\n    var cellWidth;\n    this.rootWindow = rootWindow;\n    this.type = this.getSourceType(object);\n    if (this.type === 'literal') {\n      top = parseInt(object.top, 10);\n      left = parseInt(object.left, 10);\n      cellHeight = object.height || 0;\n      cellWidth = object.width || 0;\n      topRelative = top;\n      leftRelative = left;\n      top += windowScrollTop;\n      left += windowScrollLeft;\n    } else if (this.type === 'event') {\n      top = parseInt(object.pageY, 10);\n      left = parseInt(object.pageX, 10);\n      cellHeight = object.target.clientHeight;\n      cellWidth = object.target.clientWidth;\n      topRelative = top - windowScrollTop;\n      leftRelative = left - windowScrollLeft;\n    }\n    this.top = top;\n    this.topRelative = topRelative;\n    this.left = left;\n    this.leftRelative = leftRelative;\n    this.scrollTop = windowScrollTop;\n    this.scrollLeft = windowScrollLeft;\n    this.cellHeight = cellHeight;\n    this.cellWidth = cellWidth;\n  }\n\n  /**\n   * Get source type name.\n   *\n   * @param {*} object Event or Object with coordinates.\n   * @returns {string} Returns one of this values: `'literal'`, `'event'`.\n   */\n  _createClass(Cursor, [{\n    key: \"getSourceType\",\n    value: function getSourceType(object) {\n      var type = 'literal';\n      if (object instanceof Event) {\n        type = 'event';\n      }\n      return type;\n    }\n\n    /**\n     * Checks if element can be placed above the cursor.\n     *\n     * @param {HTMLElement} element Element to check if it's size will fit above the cursor.\n     * @returns {boolean}\n     */\n  }, {\n    key: \"fitsAbove\",\n    value: function fitsAbove(element) {\n      return this.topRelative >= element.offsetHeight;\n    }\n\n    /**\n     * Checks if element can be placed below the cursor.\n     *\n     * @param {HTMLElement} element Element to check if it's size will fit below the cursor.\n     * @param {number} [viewportHeight] The viewport height.\n     * @returns {boolean}\n     */\n  }, {\n    key: \"fitsBelow\",\n    value: function fitsBelow(element) {\n      var viewportHeight = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.rootWindow.innerHeight;\n      return this.topRelative + element.offsetHeight <= viewportHeight;\n    }\n\n    /**\n     * Checks if element can be placed on the right of the cursor.\n     *\n     * @param {HTMLElement} element Element to check if it's size will fit on the right of the cursor.\n     * @param {number} [viewportWidth] The viewport width.\n     * @returns {boolean}\n     */\n  }, {\n    key: \"fitsOnRight\",\n    value: function fitsOnRight(element) {\n      var viewportWidth = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.rootWindow.innerWidth;\n      return this.leftRelative + this.cellWidth + element.offsetWidth <= viewportWidth;\n    }\n\n    /**\n     * Checks if element can be placed on the left on the cursor.\n     *\n     * @param {HTMLElement} element Element to check if it's size will fit on the left of the cursor.\n     * @returns {boolean}\n     */\n  }, {\n    key: \"fitsOnLeft\",\n    value: function fitsOnLeft(element) {\n      return this.leftRelative >= element.offsetWidth;\n    }\n  }]);\n  return Cursor;\n}();\nexport default Cursor;"],"mappings":"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"},"metadata":{},"sourceType":"module"}