{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, createTextVNode as _createTextVNode, openBlock as _openBlock, createBlock as _createBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-82f3dd70\"), n = n(), _popScopeId(), n);\n\nconst _hoisted_1 = /*#__PURE__*/_createTextVNode(\"注册\");\n\nconst _hoisted_2 = /*#__PURE__*/_createTextVNode(\"重置\");\n\nconst _hoisted_3 = /*#__PURE__*/_createTextVNode(\"已有账户登录\");\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_a_input = _resolveComponent(\"a-input\");\n\n  const _component_a_form_item = _resolveComponent(\"a-form-item\");\n\n  const _component_a_input_password = _resolveComponent(\"a-input-password\");\n\n  const _component_a_tab_pane = _resolveComponent(\"a-tab-pane\");\n\n  const _component_a_tabs = _resolveComponent(\"a-tabs\");\n\n  const _component_a_button = _resolveComponent(\"a-button\");\n\n  const _component_router_link = _resolveComponent(\"router-link\");\n\n  const _component_a_form = _resolveComponent(\"a-form\");\n\n  return _openBlock(), _createBlock(_component_a_form, {\n    ref: \"formRef\",\n    name: \"custom-validation\",\n    model: _ctx.formState,\n    rules: _ctx.rules,\n    class: \"user-layout-login\",\n    onFinish: _ctx.handleFinish,\n    onValidate: _ctx.handleValidate,\n    onFinishFailed: _ctx.handleFinishFailed\n  }, {\n    default: _withCtx(() => [_createVNode(_component_a_tabs, {\n      tabBarStyle: {\n        textAlign: 'center',\n        borderBottom: 'unset'\n      },\n      centered: \"\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_a_tab_pane, {\n        key: \"tab1\",\n        tab: \"账户注册\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_a_form_item, {\n          \"has-feedback\": \"\",\n          name: \"name\"\n        }, {\n          default: _withCtx(() => [_createVNode(_component_a_input, {\n            size: \"large\",\n            placeholder: \"账户名\",\n            value: _ctx.formState.name,\n            \"onUpdate:value\": _cache[0] || (_cache[0] = $event => _ctx.formState.name = $event),\n            type: \"text\",\n            autocomplete: \"off\"\n          }, null, 8\n          /* PROPS */\n          , [\"value\"])]),\n          _: 1\n          /* STABLE */\n\n        }), _createVNode(_component_a_form_item, {\n          \"has-feedback\": \"\",\n          name: \"pass\"\n        }, {\n          default: _withCtx(() => [_createVNode(_component_a_input_password, {\n            size: \"large\",\n            placeholder: \"输入密码\",\n            value: _ctx.formState.pass,\n            \"onUpdate:value\": _cache[1] || (_cache[1] = $event => _ctx.formState.pass = $event),\n            type: \"password\",\n            autocomplete: \"off\"\n          }, null, 8\n          /* PROPS */\n          , [\"value\"])]),\n          _: 1\n          /* STABLE */\n\n        }), _createVNode(_component_a_form_item, {\n          \"has-feedback\": \"\",\n          name: \"checkPass\"\n        }, {\n          default: _withCtx(() => [_createVNode(_component_a_input_password, {\n            size: \"large\",\n            placeholder: \"再次输入密码\",\n            value: _ctx.formState.checkPass,\n            \"onUpdate:value\": _cache[2] || (_cache[2] = $event => _ctx.formState.checkPass = $event),\n            type: \"password\",\n            autocomplete: \"off\"\n          }, null, 8\n          /* PROPS */\n          , [\"value\"])]),\n          _: 1\n          /* STABLE */\n\n        })]),\n        _: 1\n        /* STABLE */\n\n      })]),\n      _: 1\n      /* STABLE */\n\n    }), _createVNode(_component_a_form_item, null, {\n      default: _withCtx(() => [_createVNode(_component_a_button, {\n        size: \"large\",\n        style: {\n          \"width\": \"77%\"\n        },\n        type: \"primary\",\n        \"html-type\": \"submit\",\n        onClick: _ctx.register\n      }, {\n        default: _withCtx(() => [_hoisted_1]),\n        _: 1\n        /* STABLE */\n\n      }, 8\n      /* PROPS */\n      , [\"onClick\"]), _createVNode(_component_a_button, {\n        size: \"large\",\n        style: {\n          \"margin-left\": \"10px\",\n          \"width\": \"20%\"\n        },\n        onClick: _ctx.resetForm\n      }, {\n        default: _withCtx(() => [_hoisted_2]),\n        _: 1\n        /* STABLE */\n\n      }, 8\n      /* PROPS */\n      , [\"onClick\"])]),\n      _: 1\n      /* STABLE */\n\n    }), _createVNode(_component_a_form_item, null, {\n      default: _withCtx(() => [_createVNode(_component_router_link, {\n        class: \"register\",\n        to: \"/login\",\n        style: {\n          \"float\": \"right\"\n        }\n      }, {\n        default: _withCtx(() => [_hoisted_3]),\n        _: 1\n        /* STABLE */\n\n      })]),\n      _: 1\n      /* STABLE */\n\n    })]),\n    _: 1\n    /* STABLE */\n\n  }, 8\n  /* PROPS */\n  , [\"model\", \"rules\", \"onFinish\", \"onValidate\", \"onFinishFailed\"]);\n}","map":{"version":3,"mappings":"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","names":["_createBlock","_component_a_form","ref","name","model","_ctx","rules","class","onFinish","onValidate","onFinishFailed","_createVNode","_component_a_tabs","tabBarStyle","textAlign","borderBottom","centered","_component_a_tab_pane","key","tab","_component_a_form_item","_component_a_input","size","placeholder","value","$event","type","autocomplete","_component_a_input_password","pass","checkPass","_component_a_button","style","onClick","_component_router_link","to"],"sourceRoot":"","sources":["/home/ubuntu/voting/vue-web/src/views/user/RegisterUser.vue"],"sourcesContent":["<template>\r\n  <a-form\r\n    ref=\"formRef\"\r\n    name=\"custom-validation\"\r\n    :model=\"formState\"\r\n    :rules=\"rules\"\r\n    class=\"user-layout-login\"\r\n    @finish=\"handleFinish\"\r\n    @validate=\"handleValidate\"\r\n    @finishFailed=\"handleFinishFailed\"\r\n  >\r\n    <a-tabs\r\n          :tabBarStyle=\"{ textAlign: 'center', borderBottom: 'unset' }\" centered>\r\n        <a-tab-pane key=\"tab1\" tab=\"账户注册\">\r\n             <a-form-item has-feedback name=\"name\">\r\n      <a-input  size=\"large\" placeholder=\"账户名\" v-model:value=\"formState.name\" type=\"text\" autocomplete=\"off\" />\r\n    </a-form-item>\r\n\r\n\r\n   <a-form-item has-feedback name=\"pass\">\r\n      <a-input-password size=\"large\"\r\n                placeholder=\"输入密码\" v-model:value=\"formState.pass\" type=\"password\" autocomplete=\"off\" />\r\n    </a-form-item>\r\n             <a-form-item has-feedback name=\"checkPass\">\r\n      <a-input-password size=\"large\"\r\n                placeholder=\"再次输入密码\" v-model:value=\"formState.checkPass\" type=\"password\" autocomplete=\"off\" />\r\n    </a-form-item>\r\n        </a-tab-pane>\r\n      </a-tabs>\r\n   \r\n <a-form-item >\r\n      <a-button size=\"large\" style=\"width:77%\" type=\"primary\" html-type=\"submit\" @click=\"register\">注册</a-button>\r\n      <a-button size=\"large\" style=\"margin-left: 10px;width: 20%;\" @click=\"resetForm\">重置</a-button>\r\n    </a-form-item> \r\n\r\n      <a-form-item>\r\n        <router-link class=\"register\" to='/login' style=\"float: right;\">已有账户登录</router-link>\r\n      </a-form-item>\r\n  </a-form>\r\n</template>\r\n<script>\r\n\r\nimport { message } from 'ant-design-vue';\r\nimport { defineComponent, reactive, ref } from 'vue';\r\nexport default defineComponent({\r\n  setup() {\r\n    const formRef = ref();\r\n    const formState = reactive({\r\n      name:'',\r\n      pass: '',\r\n      checkPass: ''\r\n    });\r\n\r\n     let validateName = async (_rule, value) => {\r\n      if (value ==='') {\r\n        return Promise.reject('请输入正确格式账户名');\r\n      } \r\n      else if(value.length != value.split(\" \").join(\"\").length){\r\n        return Promise.reject('输入包含空格');\r\n      }\r\n      else {\r\n        return Promise.resolve();\r\n      }\r\n    };\r\n    let validatePass = async (_rule, value) => {\r\n      if (value === '') {\r\n        return Promise.reject('请输入初始密码');\r\n      }\r\n      else if(value.length != value.split(\" \").join(\"\").length){\r\n        return Promise.reject('输入包含空格');\r\n      } \r\n      else {\r\n        if (formState.checkPass !== '') {\r\n          formRef.value.validateFields('checkPass');\r\n        }\r\n        return Promise.resolve();\r\n      }\r\n    };\r\n\r\n    let validatePass2 = async (_rule, value) => {\r\n      if (value === '') {\r\n        return Promise.reject('请再次输入初始密码');\r\n      } \r\n      if (value !== formState.pass) {\r\n        return Promise.reject(\"两次密码不一样！\");\r\n      } \r\n      if(value.length != value.split(\" \").join(\"\").length){\r\n        return Promise.reject('输入包含空格');\r\n      }\r\n      else {\r\n        return Promise.resolve();\r\n      }\r\n    };\r\n\r\n    const rules = {\r\n      pass: [{\r\n        required: true,\r\n        validator: validatePass,\r\n        trigger: 'change',\r\n      }],\r\n      checkPass: [{\r\n        validator: validatePass2,\r\n        trigger: 'change',\r\n      }],\r\n      name: [{\r\n        validator: validateName,\r\n        trigger: 'change',\r\n      }],\r\n    };\r\n\r\n    const handleFinish = values => {\r\n      console.log(values, formState);\r\n    };\r\n\r\n    const handleFinishFailed = errors => {\r\n      console.log(errors);\r\n    };\r\n\r\n    const resetForm = () => {\r\n      formRef.value.resetFields();\r\n    };\r\n\r\n    const handleValidate = (...args) => {\r\n      console.log(args);\r\n    };\r\n\r\n    return {\r\n      formState,\r\n      formRef,\r\n      rules,\r\n      handleFinishFailed,\r\n      handleFinish,\r\n      resetForm,\r\n      handleValidate,\r\n    };\r\n  },\r\n\r\n    methods:{\r\n    register() {\r\n\r\n      console.log(sessionStorage.getItem('user'))\r\n      if(this.formState.name.length !== this.formState.name.split(\" \").join(\"\").length||this.formState.pass.length !== this.formState.pass.split(\" \").join(\"\").length\r\n      ||this.formState.checkPass.length !== this.formState.checkPass.split(\" \").join(\"\").length || this.formState.name =='' \r\n    ||this.formState.pass =='' || this.formState.checkPass =='' || this.formState.pass !== this.formState.checkPass){\r\n      message.destroy()\r\n        message.error('注册失败，请检查输入格式', 5)\r\n      }\r\n\r\n      else{\r\n        this.$http.post('http://192.168.5.42:8888/register', {\r\n        name:this.formState.name,\r\n        password:this.formState.pass\r\n      }).then((response) => {\r\n        if(response.data.result === 'success'){\r\n          message.destroy()\r\n          message.success('注册成功，请登录！', 2)\r\n          this.$router.push('/login');\r\n        }\r\n        if(response.data.result === 'exist'){\r\n          message.destroy()\r\n          message.warning('该用户名已注册', 3)\r\n        }\r\n        else{\r\n          message.destroy()\r\n          message.success('注册错误', 2)\r\n        }\r\n      }).catch(function (error) { // 请求失败处理\r\n        console.log(error)\r\n      }) \r\n      }\r\n    }\r\n  }\r\n\r\n});\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n.user-layout-login {\r\n  label {\r\n    font-size: 14px;\r\n  }\r\n\r\n  .getCaptcha {\r\n    display: block;\r\n    width: 100%;\r\n    height: 40px;\r\n  }\r\n\r\n  .forge-password {\r\n    font-size: 14px;\r\n  }\r\n\r\n  button.login-button {\r\n    padding: 0 15px;\r\n    font-size: 16px;\r\n    height: 40px;\r\n    width: 50%;\r\n  }\r\n\r\n  .user-login-other {\r\n    text-align: left;\r\n    margin-top: 24px;\r\n    line-height: 22px;\r\n\r\n    .item-icon {\r\n      font-size: 24px;\r\n      color: rgba(0, 0, 0, 0.2);\r\n      margin-left: 16px;\r\n      vertical-align: middle;\r\n      cursor: pointer;\r\n      transition: color 0.3s;\r\n\r\n      &:hover {\r\n        color: #1890ff;\r\n      }\r\n    }\r\n\r\n    .register {\r\n      float: right;\r\n    }\r\n  }\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module"}