{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, createTextVNode as _createTextVNode, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-6d3dc716\"), n = n(), _popScopeId(), n);\n\nconst _hoisted_1 = {\n  style: {\n    \"margin\": \"40px auto 0\"\n  }\n};\n\nconst _hoisted_2 = /*#__PURE__*/_createTextVNode(\"下一步\");\n\nconst _hoisted_3 = /*#__PURE__*/_createTextVNode(\"上一步\");\n\nconst _hoisted_4 = /*#__PURE__*/_createTextVNode(\" prevStep(){ this.$emit('prevStep') }, nextStep(){ this.$emit('nextStep') } \");\n\nconst _hoisted_5 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"step-form-style-desc\"\n}, [/*#__PURE__*/_createElementVNode(\"h3\", null, \"说明\"), /*#__PURE__*/_createElementVNode(\"h4\", null, \"发起匿名灵活投票事项\"), /*#__PURE__*/_createElementVNode(\"p\", null, \"如果需要，这里可以放一些关于产品的常见问题说明。如果需要，这里可以放一些关于产品的常见问题说明。如果需要，这里可以放一些关于产品的常见问题说明。\")], -1\n/* HOISTED */\n));\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_a_input = _resolveComponent(\"a-input\");\n\n  const _component_a_form_item = _resolveComponent(\"a-form-item\");\n\n  const _component_a_button = _resolveComponent(\"a-button\");\n\n  const _component_a_form = _resolveComponent(\"a-form\");\n\n  const _component_a_divider = _resolveComponent(\"a-divider\");\n\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_a_form, {\n    model: _ctx.formState,\n    name: \"custom-validation\",\n    rules: _ctx.rules,\n    labelCol: {\n      lg: {\n        span: 7\n      },\n      sm: {\n        span: 7\n      }\n    },\n    wrapperCol: {\n      lg: {\n        span: 10\n      },\n      sm: {\n        span: 20\n      }\n    },\n    style: {\n      \"margin\": \"40px auto 0\"\n    },\n    autocomplete: \"off\"\n  }, {\n    default: _withCtx(() => [_createVNode(_component_a_form_item, {\n      \"has-feedback\": \"\",\n      label: \"投票类型\",\n      name: \"pattern\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_a_input, {\n        value: _ctx.formState.pattern,\n        \"onUpdate:value\": _cache[0] || (_cache[0] = $event => _ctx.formState.pattern = $event),\n        placeholder: \"选择投票类型\",\n        type: \"text\",\n        autocomplete: \"off\"\n      }, null, 8\n      /* PROPS */\n      , [\"value\"])]),\n      _: 1\n      /* STABLE */\n\n    }), _createVNode(_component_a_form_item, {\n      \"has-feedback\": \"\",\n      label: \"加密参数\",\n      name: \"encryption\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_a_input, {\n        value: _ctx.formState.encryption,\n        \"onUpdate:value\": _cache[1] || (_cache[1] = $event => _ctx.formState.encryption = $event),\n        placeholder: \"选择投票类型\",\n        type: \"text\",\n        autocomplete: \"off\"\n      }, null, 8\n      /* PROPS */\n      , [\"value\"])]),\n      _: 1\n      /* STABLE */\n\n    }), _createVNode(_component_a_form_item, {\n      wrapperCol: {\n        span: 24\n      },\n      style: {\n        \"text-align\": \"center\"\n      }\n    }, {\n      default: _withCtx(() => [_createVNode(_component_a_button, {\n        type: \"primary\",\n        \"html-type\": \"submit\",\n        onClick: _ctx.check\n      }, {\n        default: _withCtx(() => [_hoisted_2]),\n        _: 1\n        /* STABLE */\n\n      }, 8\n      /* PROPS */\n      , [\"onClick\"]), _createVNode(_component_a_button, {\n        type: \"primary\",\n        onClick: _ctx.prevStep\n      }, {\n        default: _withCtx(() => [_hoisted_3]),\n        _: 1\n        /* STABLE */\n\n      }, 8\n      /* PROPS */\n      , [\"onClick\"]), _hoisted_4]),\n      _: 1\n      /* STABLE */\n\n    })]),\n    _: 1\n    /* STABLE */\n\n  }, 8\n  /* PROPS */\n  , [\"model\", \"rules\"]), _createVNode(_component_a_divider), _hoisted_5]);\n}","map":{"version":3,"mappings":";;;;;EACOA,KAA4B,EAA5B;IAAA;EAAA;;;iDAuB0D;;iDACf;;iDAAc;;gEAY9DC,oBAIM,KAJN,EAIM;EAJDC,KAAK,EAAC;AAIL,CAJN,EAAiC,cAC/BD,oBAAW,IAAX,EAAW,IAAX,EAAI,IAAJ,CAD+B,eAE/BA,oBAAmB,IAAnB,EAAmB,IAAnB,EAAI,YAAJ,CAF+B,eAG/BA,oBAA+E,GAA/E,EAA+E,IAA/E,EAAG,0EAAH,CAH+B,CAAjC;;AAAA;;;;;;;;;;;;;uBApCAE,oBAyCI,KAzCJ,cAyCI,CAxCJC,aA+BSC,iBA/BT,EA+BS;IA9BJC,KAAK,EAAEC,cA8BH;IA7BJC,IAAI,EAAC,mBA6BD;IA5BJC,KAAK,EAAEF,UA4BH;IA3BJG,QAAQ,EAAE;MAAAC;QAAAC;MAAA;MAAAC;QAAAD;MAAA;IAAA,CA2BN;IA1BJE,UAAU,EAAE;MAAAH;QAAAC;MAAA;MAAAC;QAAAD;MAAA;IAAA,CA0BR;IAzBLZ,KAA4B,EAA5B;MAAA;IAAA,CAyBK;IAxBLe,YAAY,EAAC;EAwBR,CA/BT;sBASE,MAEc,CAFdX,aAEcY,sBAFd,EAEc;MAFD,kBAEC;MAFYC,KAAK,EAAC,MAElB;MAFyBT,IAAI,EAAC;IAE9B,CAFd;wBACE,MAAiG,CAAjGJ,aAAiGc,kBAAjG,EAAiG;QAAhFC,KAAK,EAAEZ,eAAUa,OAA+D;8DAAzEb,eAAUa,UAAOC,OAAwD;QAAtDC,WAAW,EAAC,QAA0C;QAAjCC,IAAI,EAAC,MAA4B;QAArBR,YAAY,EAAC;MAAQ,CAAjG;;MAAA,YAAiG;;;;KADnG,CAEc,EAEdX,aAEcY,sBAFd,EAEc;MAFD,kBAEC;MAFYC,KAAK,EAAC,MAElB;MAFyBT,IAAI,EAAC;IAE9B,CAFd;wBACE,MAAqG,CAArGJ,aAAqGc,kBAArG,EAAqG;QAAnFC,KAAK,EAAEZ,eAAUiB,UAAkE;8DAA5EjB,eAAUiB,aAAUH,OAAwD;QAAtDC,WAAW,EAAC,QAA0C;QAAjCC,IAAI,EAAC,MAA4B;QAArBR,YAAY,EAAC;MAAQ,CAArG;;MAAA,YAAqG;;;;KADvG,CAFc,EASdX,aAUcY,sBAVd,EAUc;MAVAF,UAAU,EAAE;QAAAF;MAAA,CAUZ;MATDZ,KAA0B,EAA1B;QAAA;MAAA;IASC,CAVd;wBAEE,MAAyE,CAAzEI,aAAyEqB,mBAAzE,EAAyE;QAA/DF,IAAI,EAAC,SAA0D;QAAhD,aAAU,QAAsC;QAA5BG,OAAK,EAAEnB;MAAqB,CAAzE;0BAA2D,MAAG;;;;OAA9D;;MAAA,cAAyE,EACzEH,aAA0DqB,mBAA1D,EAA0D;QAAhDF,IAAI,EAAC,SAA2C;QAA/BG,OAAK,EAAEnB;MAAwB,CAA1D;0BAA4C,MAAG;;;;OAA/C;;MAAA,cADyE;;;;KAF3E,CATc;;;;GAXhB;;EAAA,qBAwCI,EANJH,aAAauB,oBAAb,CAMI,EALJC,UAKI,CAzCJ","names":["style","_createElementVNode","class","_createElementBlock","_createVNode","_component_a_form","model","_ctx","name","rules","labelCol","lg","span","sm","wrapperCol","autocomplete","_component_a_form_item","label","_component_a_input","value","pattern","$event","placeholder","type","encryption","_component_a_button","onClick","_component_a_divider","_hoisted_5"],"sourceRoot":"","sources":["/home/ubuntu/voting/vue-web/src/views/InitVote/avec/initAvec/StepTwo.vue"],"sourcesContent":["<template>\r\n  <div style=\"margin: 40px auto 0;\">\r\n  <a-form\r\n      :model=\"formState\"\r\n       name=\"custom-validation\"\r\n      :rules=\"rules\"\r\n      :labelCol=\"{lg: {span: 7}, sm: {span: 7}}\"\r\n      :wrapperCol=\"{lg: {span: 10}, sm: {span: 20}}\"\r\n      style=\"margin: 40px auto 0;\"\r\n      autocomplete=\"off\" \r\n  >\r\n    <a-form-item has-feedback label=\"投票类型\" name=\"pattern\">\r\n      <a-input v-model:value=\"formState.pattern\" placeholder=\"选择投票类型\" type=\"text\" autocomplete=\"off\" />\r\n    </a-form-item>\r\n\r\n    <a-form-item has-feedback label=\"加密参数\" name=\"encryption\">\r\n      <a-input  v-model:value=\"formState.encryption\" placeholder=\"选择投票类型\" type=\"text\" autocomplete=\"off\" />\r\n    </a-form-item>\r\n\r\n\r\n    \r\n\r\n    <a-form-item :wrapperCol=\"{ span: 24 }\"\r\n                 style=\"text-align: center\">\r\n      <a-button type=\"primary\" html-type=\"submit\" @click=\"check\">下一步</a-button>\r\n      <a-button type=\"primary\"  @click=\"prevStep\">上一步</a-button>\r\n      prevStep(){\r\n      this.$emit('prevStep')\r\n    },\r\n    nextStep(){\r\n      this.$emit('nextStep')\r\n    }\r\n    </a-form-item>\r\n  </a-form>\r\n\r\n\r\n  <a-divider />\r\n  <div class=\"step-form-style-desc\">\r\n    <h3>说明</h3>\r\n    <h4>发起匿名灵活投票事项</h4>\r\n    <p>如果需要，这里可以放一些关于产品的常见问题说明。如果需要，这里可以放一些关于产品的常见问题说明。如果需要，这里可以放一些关于产品的常见问题说明。</p>\r\n  </div>\r\n</div>\r\n</template>\r\n\r\n<script>\r\n// import { message } from 'ant-design-vue';\r\n// import emitter from '@/utils/bus';\r\nimport { defineComponent, reactive} from 'vue';\r\nexport default defineComponent({\r\n  setup() {\r\n    const formState = reactive({\r\n      pattern: '',\r\n      encryption: undefined,\r\n      // choices: [],\r\n    });\r\n\r\n  \r\n    let validatePattern = async (_rule, value) => {\r\n      if (value ==='') {\r\n        return Promise.reject('请选择正确投票类型');\r\n      } \r\n      else if(value.length != value.split(\" \").join(\"\").length){\r\n        return Promise.reject('输入包含空格');\r\n      }\r\n      else {\r\n        return Promise.resolve();\r\n      }\r\n    };\r\n\r\n    let validateEncryption = async (_rule, value) => {\r\n      console.log(value)\r\n      for(var i=0,len=value.length;i<len;i++){\r\n         if (value[i].value ==='') {\r\n        return Promise.reject('所有选项中存在空输入');\r\n      } \r\n      // else if(value[i].value.length != value[i].value.split(\" \").join(\"\").length){\r\n      //   return Promise.reject('选项中存在空格输入');\r\n      // }\r\n      }\r\n      };\r\n\r\n   const rules = {\r\n      pattern: [{\r\n        required: true,\r\n        validator: validatePattern,\r\n        trigger: 'change',\r\n      }],\r\n       encryption: [\r\n        {\r\n          required: true,\r\n          validator: validateEncryption,\r\n        },\r\n      ],\r\n    };\r\n\r\n    return {\r\n      formState,\r\n      rules,\r\n      validateEncryption,\r\n      validatePattern\r\n    };\r\n  },\r\n\r\n  methods:{\r\n    nextStep(){\r\n      this.$emit('nextStep')\r\n    },\r\n    prevStep(){\r\n      this.$emit('prevStep')\r\n    }\r\n\r\n    }\r\n  \r\n\r\n});\r\n</script>\r\n<style lang=\"less\" scoped>\r\n.step-form-style-desc {\r\n  padding: 0 56px;\r\n  color: rgba(0,0,0,.45);\r\n\r\n  h3 {\r\n    margin: 0 0 12px;\r\n    color: rgba(0,0,0,.45);\r\n    font-size: 16px;\r\n    line-height: 32px;\r\n  }\r\n\r\n  h4 {\r\n    margin: 0 0 4px;\r\n    color: rgba(0,0,0,.45);\r\n    font-size: 14px;\r\n    line-height: 22px;\r\n  }\r\n\r\n  p {\r\n    margin-top: 0;\r\n    margin-bottom: 12px;\r\n    line-height: 22px;\r\n  }\r\n}\r\n.dynamic-delete-button {\r\n  cursor: pointer;\r\n  position: relative;\r\n  top: 4px;\r\n  font-size: 24px;\r\n  color: #999;\r\n  transition: all 0.3s;\r\n}\r\n.dynamic-delete-button:hover {\r\n  color: #777;\r\n}\r\n.dynamic-delete-button[disabled] {\r\n  cursor: not-allowed;\r\n  opacity: 0.5;\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module"}