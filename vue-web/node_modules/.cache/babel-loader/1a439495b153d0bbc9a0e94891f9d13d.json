{"ast":null,"code":"import \"core-js/modules/es.error.cause.js\";\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}\n/**\n * Row utils class contains all necessary information about sizes of the rows.\n *\n * @class {RowUtils}\n */\n\n\nvar RowUtils = /*#__PURE__*/function () {\n  /**\n   * @param {TableDao} dataAccessObject The table Data Access Object.\n   * @param {Settings} wtSettings The walkontable settings.\n   */\n  function RowUtils(dataAccessObject, wtSettings) {\n    _classCallCheck(this, RowUtils);\n\n    this.dataAccessObject = dataAccessObject;\n    this.wtSettings = wtSettings;\n  }\n  /**\n   * Returns row height based on passed source index.\n   *\n   * @param {number} sourceIndex Row source index.\n   * @returns {number}\n   */\n\n\n  _createClass(RowUtils, [{\n    key: \"getHeight\",\n    value: function getHeight(sourceIndex) {\n      var height = this.wtSettings.getSetting('rowHeight', sourceIndex);\n      var oversizedHeight = this.dataAccessObject.wtViewport.oversizedRows[sourceIndex];\n\n      if (oversizedHeight !== void 0) {\n        height = height === void 0 ? oversizedHeight : Math.max(height, oversizedHeight);\n      }\n\n      return height;\n    }\n  }]);\n\n  return RowUtils;\n}();\n\nexport { RowUtils as default };","map":{"version":3,"names":["_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_createClass","protoProps","staticProps","prototype","RowUtils","dataAccessObject","wtSettings","value","getHeight","sourceIndex","height","getSetting","oversizedHeight","wtViewport","oversizedRows","Math","max","default"],"sources":["/home/ubuntu/community/vue-web/node_modules/handsontable/3rdparty/walkontable/src/utils/row.mjs"],"sourcesContent":["function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\n/**\n * Row utils class contains all necessary information about sizes of the rows.\n *\n * @class {RowUtils}\n */var RowUtils = /*#__PURE__*/function () {\n  /**\n   * @param {TableDao} dataAccessObject The table Data Access Object.\n   * @param {Settings} wtSettings The walkontable settings.\n   */\n  function RowUtils(dataAccessObject, wtSettings) {\n    _classCallCheck(this, RowUtils);\n    this.dataAccessObject = dataAccessObject;\n    this.wtSettings = wtSettings;\n  }\n\n  /**\n   * Returns row height based on passed source index.\n   *\n   * @param {number} sourceIndex Row source index.\n   * @returns {number}\n   */\n  _createClass(RowUtils, [{\n    key: \"getHeight\",\n    value: function getHeight(sourceIndex) {\n      var height = this.wtSettings.getSetting('rowHeight', sourceIndex);\n      var oversizedHeight = this.dataAccessObject.wtViewport.oversizedRows[sourceIndex];\n      if (oversizedHeight !== void 0) {\n        height = height === void 0 ? oversizedHeight : Math.max(height, oversizedHeight);\n      }\n      return height;\n    }\n  }]);\n  return RowUtils;\n}();\nexport { RowUtils as default };"],"mappings":";;AAAA,SAASA,eAAT,CAAyBC,QAAzB,EAAmCC,WAAnC,EAAgD;EAAE,IAAI,EAAED,QAAQ,YAAYC,WAAtB,CAAJ,EAAwC;IAAE,MAAM,IAAIC,SAAJ,CAAc,mCAAd,CAAN;EAA2D;AAAE;;AACzJ,SAASC,iBAAT,CAA2BC,MAA3B,EAAmCC,KAAnC,EAA0C;EAAE,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,KAAK,CAACE,MAA1B,EAAkCD,CAAC,EAAnC,EAAuC;IAAE,IAAIE,UAAU,GAAGH,KAAK,CAACC,CAAD,CAAtB;IAA2BE,UAAU,CAACC,UAAX,GAAwBD,UAAU,CAACC,UAAX,IAAyB,KAAjD;IAAwDD,UAAU,CAACE,YAAX,GAA0B,IAA1B;IAAgC,IAAI,WAAWF,UAAf,EAA2BA,UAAU,CAACG,QAAX,GAAsB,IAAtB;IAA4BC,MAAM,CAACC,cAAP,CAAsBT,MAAtB,EAA8BI,UAAU,CAACM,GAAzC,EAA8CN,UAA9C;EAA4D;AAAE;;AAC7T,SAASO,YAAT,CAAsBd,WAAtB,EAAmCe,UAAnC,EAA+CC,WAA/C,EAA4D;EAAE,IAAID,UAAJ,EAAgBb,iBAAiB,CAACF,WAAW,CAACiB,SAAb,EAAwBF,UAAxB,CAAjB;EAAsD,IAAIC,WAAJ,EAAiBd,iBAAiB,CAACF,WAAD,EAAcgB,WAAd,CAAjB;EAA6CL,MAAM,CAACC,cAAP,CAAsBZ,WAAtB,EAAmC,WAAnC,EAAgD;IAAEU,QAAQ,EAAE;EAAZ,CAAhD;EAAsE,OAAOV,WAAP;AAAqB;AAC7R;AACA;AACA;AACA;AACA;;;AAAG,IAAIkB,QAAQ,GAAG,aAAa,YAAY;EACzC;AACF;AACA;AACA;EACE,SAASA,QAAT,CAAkBC,gBAAlB,EAAoCC,UAApC,EAAgD;IAC9CtB,eAAe,CAAC,IAAD,EAAOoB,QAAP,CAAf;;IACA,KAAKC,gBAAL,GAAwBA,gBAAxB;IACA,KAAKC,UAAL,GAAkBA,UAAlB;EACD;EAED;AACF;AACA;AACA;AACA;AACA;;;EACEN,YAAY,CAACI,QAAD,EAAW,CAAC;IACtBL,GAAG,EAAE,WADiB;IAEtBQ,KAAK,EAAE,SAASC,SAAT,CAAmBC,WAAnB,EAAgC;MACrC,IAAIC,MAAM,GAAG,KAAKJ,UAAL,CAAgBK,UAAhB,CAA2B,WAA3B,EAAwCF,WAAxC,CAAb;MACA,IAAIG,eAAe,GAAG,KAAKP,gBAAL,CAAsBQ,UAAtB,CAAiCC,aAAjC,CAA+CL,WAA/C,CAAtB;;MACA,IAAIG,eAAe,KAAK,KAAK,CAA7B,EAAgC;QAC9BF,MAAM,GAAGA,MAAM,KAAK,KAAK,CAAhB,GAAoBE,eAApB,GAAsCG,IAAI,CAACC,GAAL,CAASN,MAAT,EAAiBE,eAAjB,CAA/C;MACD;;MACD,OAAOF,MAAP;IACD;EATqB,CAAD,CAAX,CAAZ;;EAWA,OAAON,QAAP;AACD,CA7B8B,EAA5B;;AA8BH,SAASA,QAAQ,IAAIa,OAArB"},"metadata":{},"sourceType":"module"}