{"ast":null,"code":"import emitter from '@/utils/bus';\nimport { message } from 'ant-design-vue';\nimport { defineComponent, reactive, ref, watch, toRaw } from 'vue';\nexport default defineComponent({\n  setup() {\n    const formState = reactive({\n      encryption: [],\n      users: [],\n      n: '',\n      k: '',\n      pattern: ''\n    });\n    var data = [];\n    const conlums = [{\n      title: \"Uid\",\n      dateIndex: \"uid\",\n      key: \"uid\"\n    }, {\n      title: \"Action\",\n      dataIndex: \"action\",\n      key: \"action\"\n    }];\n    const formRef = ref();\n    const modalFormRef = ref();\n    const visible = ref(false);\n    const modalFormState = ref({});\n    watch(visible, () => {\n      modalFormState.value = {};\n    }, {\n      flush: 'post'\n    });\n\n    const onOk = () => {\n      modalFormRef.value.validateFields().then(() => {\n        formState.users.push({ ...modalFormState.value,\n          key: Date.now()\n        });\n        visible.value = false;\n      });\n    };\n\n    const onFinish = () => {\n      console.log('Finish:', toRaw(formState));\n    };\n\n    return {\n      formState,\n      formRef,\n      modalFormRef,\n      visible,\n      modalFormState,\n      onOk,\n      onFinish,\n      conlums,\n      data\n    };\n  },\n\n  methods: {\n    send() {\n      this.$http.post('http://192.168.5.42:9999/get_all_user').then(response => {\n        this.formState.all_user = response.data;\n\n        for (let i = 0; i < this.formState.all_user.length; i++) {\n          this.data.push({\n            key: i.toString(),\n            name: this.formState.all_user[i],\n            action: \"123\"\n          });\n        }\n\n        console.log(this.data);\n      });\n    },\n\n    number() {\n      this.formState.n = this.formState.users.length;\n    },\n\n    getpara() {\n      var para = setup1(256);\n      console.log(para.P);\n      console.log(typeof para);\n      this.formState.encryption = Object.values(para); // console.log(Object.values(para))\n    },\n\n    prevStep() {\n      this.$emit('prevStep');\n    },\n\n    nextStep() {\n      if (this.formState.encryption != '' && this.formState.users != '' && this.formState.k != '') {\n        emitter.emit(\"Res1\", this.formState.encryption);\n        var users = [];\n\n        for (let i = 0; i < this.formState.users.length; i++) {\n          users[i] = this.formState.users[i].id;\n        }\n\n        var res = [];\n        res.push(users.toString(), this.formState.n, this.formState.k, this.formState.pattern, this.formState.users);\n        emitter.emit(\"Res2\", res);\n        this.$emit('nextStep');\n      } else {\n        message.destroy();\n        message.warning(\"请生成定制信息\");\n      }\n    }\n\n  }\n});","map":{"version":3,"mappings":"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","names":["emitter","message","defineComponent","reactive","ref","watch","toRaw","setup","formState","encryption","users","n","k","pattern","data","conlums","title","dateIndex","key","dataIndex","formRef","modalFormRef","visible","modalFormState","value","flush","onOk","validateFields","then","push","Date","now","onFinish","console","log","methods","send","$http","post","response","all_user","i","length","toString","name","action","number","getpara","para","setup1","P","Object","values","prevStep","$emit","nextStep","emit","id","res","destroy","warning"],"sourceRoot":"","sources":["/home/ubuntu/community/vue-web/src/views/InitVote/avec/initAvec/StepTwo.vue"],"sourcesContent":["<template>\r\n  <div style=\"margin: 60px auto 0;\">\r\n    <a-form :model=\"formState\" name=\"custom-validation\" :rules=\"rules\" :labelCol=\"{lg: {span: 7}, sm: {span: 7}}\"\r\n      :wrapperCol=\"{lg: {span: 10}, sm: {span: 20}}\" style=\"margin: 40px auto 0;\" autocomplete=\"off\">\r\n    <!--\r\n      <a-form-item label=\"加密参数\" :rules=\"[{ required: true ,message: '请选择投票选项'}]\">\r\n        <a-button size=\"large\" type=\"dashed\" style=\"width: 80%\" @click=\"getpara\">\r\n          <PlusOutlined />\r\n          获取加密参数\r\n        </a-button>\r\n      </a-form-item>\r\n\r\n      <a-form-item label=\"投票类型\" name=\"pattern\" :rules=\"[{ required: true, message: '请选择投票类型' }]\">\r\n        <a-radio-group v-model:value=\"formState.pattern\">\r\n          <a-radio :value=\"1\">单选</a-radio>\r\n          <a-radio :value=\"2\">多选</a-radio>\r\n          <a-radio :value=\"3\">分数</a-radio>\r\n        </a-radio-group>\r\n      </a-form-item>\r\n      \r\n\r\n      <a-form-item label=\"加密参数\" v-if=\"formState.encryption.length\">\r\n        <a-descriptions bordered :column=\"{ xxl: 1, xl: 1, lg: 1, md: 1, sm: 1, xs: 1 }\">\r\n          <a-descriptions-item label=\"P\">{{formState.encryption[0]}}</a-descriptions-item>\r\n          <a-descriptions-item label=\"G\">{{formState.encryption[1]}}</a-descriptions-item>\r\n          <a-descriptions-item label=\"G\">{{formState.encryption[2]}}</a-descriptions-item>\r\n        </a-descriptions>\r\n      </a-form-item>\r\n      -->\r\n\r\n      <a-form-item label=\"添加投票者\" :rules=\"[{ required: true }]\">\r\n        <template v-if=\"formState.users.length\">\r\n          <ul>\r\n            <template v-for=\"user in formState.users\" :key=\"user.key\">\r\n              <li class=\"user\">\r\n                <a-avatar>\r\n                  <template #icon>\r\n                    <UserOutlined />\r\n                  </template>\r\n                </a-avatar>\r\n                {{ user.id }}\r\n              </li>\r\n            </template>\r\n          </ul>\r\n        </template>\r\n        <template v-else>\r\n          <a-typography-text class=\"ant-form-text\" type=\"secondary\">\r\n            (\r\n            <SmileOutlined />\r\n            请添加合法投票者. )\r\n          </a-typography-text>\r\n        </template>\r\n        <a-button html-type=\"button\" style=\"margin: 0 8px\" @click=\"send\">添加</a-button>\r\n      </a-form-item>\r\n      <a-table :dataSource=\"data\" :columns=\"columns\" />\r\n      <a-modal v-model:visible=\"visible\" title=\"投票者信息\" @ok=\"onOk\">\r\n        <a-form ref=\"modalFormRef\" :model=\"modalFormState\" layout=\"vertical\" name=\"userForm\">\r\n          <a-form-item name=\"id\" label=\"投票者ID\" :rules=\"[{ required: true }]\">\r\n            <a-input v-model:value=\"modalFormState.id\" />\r\n          </a-form-item>\r\n        </a-form>\r\n      </a-modal>\r\n      <!--\r\n      <a-form-item label=\"加密参数\" :rules=\"[{ required: true ,message: '请选择投票选项'}]\">\r\n        <a-input-number id=\"inputNumber\" v-model:value=\"formState.k\" :min=\"1\" :max=\"formState.n\" @click=\"number\" />\r\n      </a-form-item>\r\n      <a-form-item label=\"门限参数\" v-if=\"formState.k\">\r\n        <a-descriptions bordered :column=\"{ xxl: 1, xl: 1, lg: 1, md: 1, sm: 1, xs: 1 }\">\r\n          <a-descriptions-item label=\"投票者人数\">{{formState.n}}</a-descriptions-item>\r\n          <a-descriptions-item label=\"门限人数\">{{formState.k}}</a-descriptions-item>\r\n        </a-descriptions>\r\n      </a-form-item>\r\n      -->\r\n\r\n      <a-form-item :wrapperCol=\"{ span: 24 }\" style=\"text-align: center\">\r\n        <a-button type=\"primary\" @click=\"prevStep\">上一步</a-button>\r\n        <a-button type=\"primary\" html-type=\"submit\" style=\"margin-left: 8px\" @click=\"nextStep\">下一步</a-button>\r\n      </a-form-item>\r\n    </a-form>\r\n\r\n    <a-divider />\r\n    <div class=\"step-form-style-desc\">\r\n      <h3>说明</h3>\r\n      <h4>发起匿名权重投票事项</h4>\r\n      <p>如果需要，这里可以放一些关于产品的常见问题说明。如果需要，这里可以放一些关于产品的常见问题说明。如果需要，这里可以放一些关于产品的常见问题说明。</p>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport emitter from '@/utils/bus';\r\nimport { message } from 'ant-design-vue';\r\nimport { defineComponent, reactive, ref, watch, toRaw } from 'vue';\r\n\r\n\r\nexport default defineComponent({\r\n  setup() {\r\n    const formState = reactive({\r\n      encryption: [],\r\n      users: [],\r\n      n: '',\r\n      k: '',\r\n      pattern: ''\r\n    });\r\n\r\n    var data= []\r\n    const conlums = [{\r\n      title:\"Uid\",\r\n      dateIndex:\"uid\",\r\n      key:\"uid\"\r\n    },\r\n    {\r\n      title:\"Action\",\r\n      dataIndex:\"action\",\r\n      key:\"action\"\r\n    }];\r\n\r\n    const formRef = ref();\r\n    const modalFormRef = ref();\r\n    const visible = ref(false);\r\n    const modalFormState = ref({});\r\n    watch(visible, () => {\r\n      modalFormState.value = {};\r\n    }, {\r\n      flush: 'post',\r\n    });\r\n\r\n    const onOk = () => {\r\n      modalFormRef.value.validateFields().then(() => {\r\n        formState.users.push({\r\n          ...modalFormState.value,\r\n          key: Date.now(),\r\n        });\r\n        visible.value = false;\r\n      });\r\n    };\r\n\r\n    const onFinish = () => {\r\n      console.log('Finish:', toRaw(formState));\r\n    };\r\n\r\n\r\n    return {\r\n      formState,\r\n      formRef,\r\n      modalFormRef,\r\n      visible,\r\n      modalFormState,\r\n      onOk,\r\n      onFinish,\r\n      conlums,\r\n      data,\r\n    };\r\n  },\r\n\r\n  methods: {\r\n    send(){\r\n      this.$http.post('http://192.168.5.42:9999/get_all_user')\r\n      .then((response) => {\r\n        this.formState.all_user = response.data\r\n        for (let i = 0; i<this.formState.all_user.length;i++){\r\n          this.data.push({key:i.toString(),name:this.formState.all_user[i],action:\"123\"})\r\n        }\r\n        console.log(this.data)\r\n      })\r\n    },\r\n\r\n    number() {\r\n      this.formState.n = this.formState.users.length\r\n    },\r\n\r\n    getpara() {\r\n      var para = setup1(256)\r\n      console.log(para.P)\r\n      console.log(typeof (para))\r\n      this.formState.encryption = Object.values(para)\r\n      // console.log(Object.values(para))\r\n    },\r\n    prevStep() {\r\n      this.$emit('prevStep')\r\n    },\r\n    nextStep() {\r\n\r\n      if (this.formState.encryption != '' && this.formState.users != '' && this.formState.k != '') {\r\n        emitter.emit(\"Res1\", this.formState.encryption)\r\n        var users = []\r\n        for (let i = 0; i < this.formState.users.length; i++) {\r\n          users[i] = this.formState.users[i].id\r\n        }\r\n        var res = []\r\n        res.push(users.toString(), this.formState.n, this.formState.k, this.formState.pattern, this.formState.users)\r\n        emitter.emit(\"Res2\", res)\r\n        this.$emit('nextStep')\r\n      }\r\n      else {\r\n        message.destroy()\r\n        message.warning(\"请生成定制信息\")\r\n      }\r\n    }\r\n\r\n  }\r\n\r\n\r\n});\r\n</script>\r\n<style lang=\"less\" scoped>\r\n.step-form-style-desc {\r\n  padding: 0 56px;\r\n  color: rgba(0, 0, 0, .45);\r\n\r\n  h3 {\r\n    margin: 0 0 12px;\r\n    color: rgba(0, 0, 0, .45);\r\n    font-size: 16px;\r\n    line-height: 32px;\r\n  }\r\n\r\n  h4 {\r\n    margin: 0 0 4px;\r\n    color: rgba(0, 0, 0, .45);\r\n    font-size: 14px;\r\n    line-height: 22px;\r\n  }\r\n\r\n  p {\r\n    margin-top: 0;\r\n    margin-bottom: 12px;\r\n    line-height: 22px;\r\n  }\r\n}\r\n\r\n.dynamic-delete-button {\r\n  cursor: pointer;\r\n  position: relative;\r\n  top: 4px;\r\n  font-size: 24px;\r\n  color: #999;\r\n  transition: all 0.3s;\r\n}\r\n\r\n.dynamic-delete-button:hover {\r\n  color: #777;\r\n}\r\n\r\n.dynamic-delete-button[disabled] {\r\n  cursor: not-allowed;\r\n  opacity: 0.5;\r\n}\r\n</style>\r\n"]},"metadata":{},"sourceType":"module"}