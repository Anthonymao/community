{"ast":null,"code":"import \"core-js/modules/es.error.cause.js\";\n\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n}\n\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nfunction _iterableToArrayLimit(arr, i) {\n  var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n\n  if (_i == null) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n\n  var _s, _e;\n\n  try {\n    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nfunction _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, _typeof(obj);\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}\n\nfunction _get() {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get.bind();\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = _superPropBase(target, property);\n\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n\n      if (desc.get) {\n        return desc.get.call(arguments.length < 3 ? target : receiver);\n      }\n\n      return desc.value;\n    };\n  }\n\n  return _get.apply(this, arguments);\n}\n\nfunction _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = _getPrototypeOf(object);\n    if (object === null) break;\n  }\n\n  return object;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  Object.defineProperty(subClass, \"prototype\", {\n    writable: false\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  } else if (call !== void 0) {\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nimport \"core-js/modules/es.array.iterator.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/es.weak-map.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport \"core-js/modules/es.array.join.js\";\nimport \"core-js/modules/es.array.index-of.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.object.set-prototype-of.js\";\nimport \"core-js/modules/es.object.get-prototype-of.js\";\nimport \"core-js/modules/es.reflect.construct.js\";\nimport \"core-js/modules/es.reflect.get.js\";\nimport \"core-js/modules/es.object.get-own-property-descriptor.js\";\nimport \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.symbol.description.js\";\nimport \"core-js/modules/es.symbol.iterator.js\";\nimport \"core-js/modules/es.array.slice.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.array.from.js\";\nimport { BasePlugin } from \"../base/index.mjs\";\nimport Hooks from \"../../pluginHooks.mjs\";\nimport { stringify, parse } from \"../../3rdparty/SheetClip/index.mjs\";\nimport { arrayEach } from \"../../helpers/array.mjs\";\nimport { rangeEach } from \"../../helpers/number.mjs\";\nimport { sanitize } from \"../../helpers/string.mjs\";\nimport { getSelectionText } from \"../../helpers/dom/element.mjs\";\nimport copyItem from \"./contextMenuItem/copy.mjs\";\nimport cutItem from \"./contextMenuItem/cut.mjs\";\nimport PasteEvent from \"./pasteEvent.mjs\";\nimport { createElement, destroyElement } from \"./focusableElement.mjs\";\nimport { _dataToHTML, htmlToGridSettings } from \"../../utils/parseTable.mjs\";\nHooks.getSingleton().register('afterCopyLimit');\nHooks.getSingleton().register('modifyCopyableRange');\nHooks.getSingleton().register('beforeCut');\nHooks.getSingleton().register('afterCut');\nHooks.getSingleton().register('beforePaste');\nHooks.getSingleton().register('afterPaste');\nHooks.getSingleton().register('beforeCopy');\nHooks.getSingleton().register('afterCopy');\nexport var PLUGIN_KEY = 'copyPaste';\nexport var PLUGIN_PRIORITY = 80;\nvar SETTING_KEYS = ['fragmentSelection'];\nvar ROWS_LIMIT = Infinity;\nvar COLUMNS_LIMIT = Infinity;\nvar privatePool = new WeakMap();\nvar META_HEAD = ['<meta name=\"generator\" content=\"Handsontable\"/>', '<style type=\"text/css\">td{white-space:normal}br{mso-data-placement:same-cell}</style>'].join('');\n/* eslint-disable jsdoc/require-description-complete-sentence */\n\n/**\n * @description\n * This plugin enables the copy/paste functionality in the Handsontable. The functionality works for API, Context Menu,\n * using keyboard shortcuts and menu bar from the browser.\n * Possible values:\n * * `true` (to enable default options),\n * * `false` (to disable completely).\n *\n * or an object with values:\n * * `'columnsLimit'` (see {@link CopyPaste#columnsLimit})\n * * `'rowsLimit'` (see {@link CopyPaste#rowsLimit})\n * * `'pasteMode'` (see {@link CopyPaste#pasteMode})\n * * `'uiContainer'` (see {@link CopyPaste#uiContainer}).\n *\n * See [the copy/paste demo](@/guides/cell-features/clipboard.md) for examples.\n *\n * @example\n * ```js\n * // Enables the plugin with default values\n * copyPaste: true,\n * // Enables the plugin with custom values\n * copyPaste: {\n *   columnsLimit: 25,\n *   rowsLimit: 50,\n *   pasteMode: 'shift_down',\n *   uiContainer: document.body,\n * },\n * ```\n * @class CopyPaste\n * @plugin CopyPaste\n */\n\nexport var CopyPaste = /*#__PURE__*/function (_BasePlugin) {\n  _inherits(CopyPaste, _BasePlugin);\n\n  var _super = _createSuper(CopyPaste);\n\n  function CopyPaste(hotInstance) {\n    var _this;\n\n    _classCallCheck(this, CopyPaste);\n\n    _this = _super.call(this, hotInstance);\n    /**\n     * Maximum number of columns than can be copied to clipboard using <kbd>**Ctrl**</kbd>/<kbd>**Cmd**</kbd> + <kbd>**C**</kbd>.\n     *\n     * @type {number}\n     * @default Infinity\n     */\n\n    _this.columnsLimit = COLUMNS_LIMIT;\n    /**\n     * Ranges of the cells coordinates, which should be used to copy/cut/paste actions.\n     *\n     * @private\n     * @type {Array}\n     */\n\n    _this.copyableRanges = [];\n    /**\n     * Provides focusable element to support IME and copy/paste/cut actions.\n     *\n     * @private\n     * @type {FocusableWrapper}\n     */\n\n    _this.focusableElement = void 0;\n    /**\n     * Defines paste (<kbd>**Ctrl**</kbd>/<kbd>**Cmd**</kbd> + <kbd>**V**</kbd>) behavior.\n     * * Default value `\"overwrite\"` will paste clipboard value over current selection.\n     * * When set to `\"shift_down\"`, clipboard data will be pasted in place of current selection, while all selected cells are moved down.\n     * * When set to `\"shift_right\"`, clipboard data will be pasted in place of current selection, while all selected cells are moved right.\n     *\n     * @type {string}\n     * @default 'overwrite'\n     */\n\n    _this.pasteMode = 'overwrite';\n    /**\n     * Maximum number of rows than can be copied to clipboard using <kbd>**Ctrl**</kbd>/<kbd>**Cmd**</kbd> + <kbd>**C**</kbd>.\n     *\n     * @type {number}\n     * @default Infinity\n     */\n\n    _this.rowsLimit = ROWS_LIMIT;\n    /**\n     * UI container for the secondary focusable element.\n     *\n     * @type {HTMLElement}\n     */\n\n    _this.uiContainer = _this.hot.rootDocument.body;\n    privatePool.set(_assertThisInitialized(_this), {\n      isTriggeredByCopy: false,\n      isTriggeredByCut: false,\n      isBeginEditing: false,\n      isFragmentSelectionEnabled: false\n    });\n    return _this;\n  }\n  /**\n   * Checks if the plugin is enabled in the handsontable settings. This method is executed in {@link Hooks#beforeInit}\n   * hook and if it returns `true` then the {@link CopyPaste#enablePlugin} method is called.\n   *\n   * @returns {boolean}\n   */\n\n\n  _createClass(CopyPaste, [{\n    key: \"isEnabled\",\n    value: function isEnabled() {\n      return !!this.hot.getSettings()[PLUGIN_KEY];\n    }\n    /**\n     * Enables the plugin functionality for this Handsontable instance.\n     */\n\n  }, {\n    key: \"enablePlugin\",\n    value: function enablePlugin() {\n      var _this2 = this;\n\n      if (this.enabled) {\n        return;\n      }\n\n      var _this$hot$getSettings = this.hot.getSettings(),\n          settings = _this$hot$getSettings[PLUGIN_KEY],\n          fragmentSelection = _this$hot$getSettings.fragmentSelection;\n\n      var priv = privatePool.get(this);\n      priv.isFragmentSelectionEnabled = !!fragmentSelection;\n\n      if (_typeof(settings) === 'object') {\n        this.pasteMode = settings.pasteMode || this.pasteMode;\n        this.rowsLimit = isNaN(settings.rowsLimit) ? this.rowsLimit : settings.rowsLimit;\n        this.columnsLimit = isNaN(settings.columnsLimit) ? this.columnsLimit : settings.columnsLimit;\n        this.uiContainer = settings.uiContainer || this.uiContainer;\n      }\n\n      this.addHook('afterContextMenuDefaultOptions', function (options) {\n        return _this2.onAfterContextMenuDefaultOptions(options);\n      });\n      this.addHook('afterOnCellMouseUp', function () {\n        return _this2.onAfterOnCellMouseUp();\n      });\n      this.addHook('afterSelectionEnd', function () {\n        return _this2.onAfterSelectionEnd();\n      });\n      this.addHook('beforeKeyDown', function () {\n        return _this2.onBeforeKeyDown();\n      });\n      this.focusableElement = createElement(this.uiContainer);\n      this.focusableElement.addLocalHook('copy', function (event) {\n        return _this2.onCopy(event);\n      }).addLocalHook('cut', function (event) {\n        return _this2.onCut(event);\n      }).addLocalHook('paste', function (event) {\n        return _this2.onPaste(event);\n      });\n\n      _get(_getPrototypeOf(CopyPaste.prototype), \"enablePlugin\", this).call(this);\n    }\n    /**\n     * Updates the plugin's state.\n     *\n     * This method is executed when [`updateSettings()`](@/api/core.md#updatesettings) is invoked with any of the following configuration options:\n     *  - [`copyPaste`](@/api/options.md#copypaste)\n     *  - [`fragmentSelection`](@/api/options.md#fragmentselection)\n     */\n\n  }, {\n    key: \"updatePlugin\",\n    value: function updatePlugin() {\n      this.disablePlugin();\n      this.enablePlugin();\n      this.getOrCreateFocusableElement();\n\n      _get(_getPrototypeOf(CopyPaste.prototype), \"updatePlugin\", this).call(this);\n    }\n    /**\n     * Disables the plugin functionality for this Handsontable instance.\n     */\n\n  }, {\n    key: \"disablePlugin\",\n    value: function disablePlugin() {\n      if (this.focusableElement) {\n        destroyElement(this.focusableElement);\n      }\n\n      _get(_getPrototypeOf(CopyPaste.prototype), \"disablePlugin\", this).call(this);\n    }\n    /**\n     * Copies the selected cell into the clipboard.\n     */\n\n  }, {\n    key: \"copy\",\n    value: function copy() {\n      var priv = privatePool.get(this);\n      priv.isTriggeredByCopy = true;\n      this.getOrCreateFocusableElement();\n      this.focusableElement.focus();\n      this.hot.rootDocument.execCommand('copy');\n    }\n    /**\n     * Cuts the selected cell into the clipboard.\n     */\n\n  }, {\n    key: \"cut\",\n    value: function cut() {\n      var priv = privatePool.get(this);\n      priv.isTriggeredByCut = true;\n      this.getOrCreateFocusableElement();\n      this.focusableElement.focus();\n      this.hot.rootDocument.execCommand('cut');\n    }\n    /**\n     * Creates copyable text releated to range objects.\n     *\n     * @param {object[]} ranges Array of objects with properties `startRow`, `endRow`, `startCol` and `endCol`.\n     * @returns {string} Returns string which will be copied into clipboard.\n     */\n\n  }, {\n    key: \"getRangedCopyableData\",\n    value: function getRangedCopyableData(ranges) {\n      var _this3 = this;\n\n      var dataSet = [];\n      var copyableRows = [];\n      var copyableColumns = []; // Count all copyable rows and columns\n\n      arrayEach(ranges, function (range) {\n        rangeEach(range.startRow, range.endRow, function (row) {\n          if (copyableRows.indexOf(row) === -1) {\n            copyableRows.push(row);\n          }\n        });\n        rangeEach(range.startCol, range.endCol, function (column) {\n          if (copyableColumns.indexOf(column) === -1) {\n            copyableColumns.push(column);\n          }\n        });\n      }); // Concat all rows and columns data defined in ranges into one copyable string\n\n      arrayEach(copyableRows, function (row) {\n        var rowSet = [];\n        arrayEach(copyableColumns, function (column) {\n          rowSet.push(_this3.hot.getCopyableData(row, column));\n        });\n        dataSet.push(rowSet);\n      });\n      return stringify(dataSet);\n    }\n    /**\n     * Creates copyable text releated to range objects.\n     *\n     * @param {object[]} ranges Array of objects with properties `startRow`, `startCol`, `endRow` and `endCol`.\n     * @returns {Array[]} Returns array of arrays which will be copied into clipboard.\n     */\n\n  }, {\n    key: \"getRangedData\",\n    value: function getRangedData(ranges) {\n      var _this4 = this;\n\n      var dataSet = [];\n      var copyableRows = [];\n      var copyableColumns = []; // Count all copyable rows and columns\n\n      arrayEach(ranges, function (range) {\n        rangeEach(range.startRow, range.endRow, function (row) {\n          if (copyableRows.indexOf(row) === -1) {\n            copyableRows.push(row);\n          }\n        });\n        rangeEach(range.startCol, range.endCol, function (column) {\n          if (copyableColumns.indexOf(column) === -1) {\n            copyableColumns.push(column);\n          }\n        });\n      }); // Concat all rows and columns data defined in ranges into one copyable string\n\n      arrayEach(copyableRows, function (row) {\n        var rowSet = [];\n        arrayEach(copyableColumns, function (column) {\n          rowSet.push(_this4.hot.getCopyableData(row, column));\n        });\n        dataSet.push(rowSet);\n      });\n      return dataSet;\n    }\n    /**\n     * Simulates the paste action.\n     *\n     * Due to security reasons, modern browsers disallow reading from the system clipboard.\n     *\n     * @param {string} pastableText Value as raw string to paste.\n     * @param {string} [pastableHtml=''] Value as HTML to paste.\n     */\n\n  }, {\n    key: \"paste\",\n    value: function paste() {\n      var pastableText = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n      var pastableHtml = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : pastableText;\n\n      if (!pastableText && !pastableHtml) {\n        return;\n      }\n\n      var pasteData = new PasteEvent();\n\n      if (pastableText) {\n        pasteData.clipboardData.setData('text/plain', pastableText);\n      }\n\n      if (pastableHtml) {\n        pasteData.clipboardData.setData('text/html', pastableHtml);\n      }\n\n      this.getOrCreateFocusableElement();\n      this.onPaste(pasteData);\n    }\n    /**\n     * Prepares copyable text from the cells selection in the invisible textarea.\n     */\n\n  }, {\n    key: \"setCopyableText\",\n    value: function setCopyableText() {\n      var selRange = this.hot.getSelectedRangeLast();\n\n      if (!selRange) {\n        return;\n      }\n\n      var topStart = selRange.getTopStartCorner();\n      var bottomEnd = selRange.getBottomEndCorner();\n      var startRow = topStart.row;\n      var startCol = topStart.col;\n      var endRow = bottomEnd.row;\n      var endCol = bottomEnd.col;\n      var finalEndRow = Math.min(endRow, startRow + this.rowsLimit - 1);\n      var finalEndCol = Math.min(endCol, startCol + this.columnsLimit - 1);\n      this.copyableRanges.length = 0;\n      this.copyableRanges.push({\n        startRow: startRow,\n        startCol: startCol,\n        endRow: finalEndRow,\n        endCol: finalEndCol\n      });\n      this.copyableRanges = this.hot.runHooks('modifyCopyableRange', this.copyableRanges);\n\n      if (endRow !== finalEndRow || endCol !== finalEndCol) {\n        this.hot.runHooks('afterCopyLimit', endRow - startRow + 1, endCol - startCol + 1, this.rowsLimit, this.columnsLimit);\n      }\n    }\n    /**\n     * Force focus on editable element.\n     *\n     * @private\n     */\n\n  }, {\n    key: \"getOrCreateFocusableElement\",\n    value: function getOrCreateFocusableElement() {\n      var editor = this.hot.getActiveEditor();\n      var editableElement = editor ? editor.TEXTAREA : void 0;\n\n      if (editableElement) {\n        this.focusableElement.setFocusableElement(editableElement);\n      } else {\n        this.focusableElement.useSecondaryElement();\n      }\n    }\n    /**\n     * Verifies if editor exists and is open.\n     *\n     * @private\n     * @returns {boolean}\n     */\n\n  }, {\n    key: \"isEditorOpened\",\n    value: function isEditorOpened() {\n      var editor = this.hot.getActiveEditor();\n      return editor && editor.isOpened();\n    }\n    /**\n     * Prepares new values to populate them into datasource.\n     *\n     * @private\n     * @param {Array} inputArray An array of the data to populate.\n     * @param {Array} [selection] The selection which indicates from what position the data will be populated.\n     * @returns {Array} Range coordinates after populate data.\n     */\n\n  }, {\n    key: \"populateValues\",\n    value: function populateValues(inputArray) {\n      var selection = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.hot.getSelectedRangeLast();\n\n      if (!inputArray.length) {\n        return;\n      }\n\n      var populatedRowsLength = inputArray.length;\n      var populatedColumnsLength = inputArray[0].length;\n      var newRows = [];\n\n      var _selection$getTopStar = selection.getTopStartCorner(),\n          startRow = _selection$getTopStar.row,\n          startColumn = _selection$getTopStar.col;\n\n      var _selection$getBottomE = selection.getBottomEndCorner(),\n          endRowFromSelection = _selection$getBottomE.row,\n          endColumnFromSelection = _selection$getBottomE.col;\n\n      var visualRowForPopulatedData = startRow;\n      var visualColumnForPopulatedData = startColumn;\n      var lastVisualRow = startRow;\n      var lastVisualColumn = startColumn; // We try to populate just all copied data or repeat copied data within a selection. Please keep in mind that we\n      // don't know whether populated data is bigger than selection on start as there are some cells for which values\n      // should be not inserted (it's known right after getting cell meta).\n\n      while (newRows.length < populatedRowsLength || visualRowForPopulatedData <= endRowFromSelection) {\n        var _this$hot$getCellMeta = this.hot.getCellMeta(visualRowForPopulatedData, startColumn),\n            skipRowOnPaste = _this$hot$getCellMeta.skipRowOnPaste,\n            visualRow = _this$hot$getCellMeta.visualRow;\n\n        visualRowForPopulatedData = visualRow + 1;\n\n        if (skipRowOnPaste === true) {\n          /* eslint-disable no-continue */\n          continue;\n        }\n\n        lastVisualRow = visualRow;\n        visualColumnForPopulatedData = startColumn;\n        var newRow = [];\n        var insertedRow = newRows.length % populatedRowsLength;\n\n        while (newRow.length < populatedColumnsLength || visualColumnForPopulatedData <= endColumnFromSelection) {\n          var _this$hot$getCellMeta2 = this.hot.getCellMeta(startRow, visualColumnForPopulatedData),\n              skipColumnOnPaste = _this$hot$getCellMeta2.skipColumnOnPaste,\n              visualCol = _this$hot$getCellMeta2.visualCol;\n\n          visualColumnForPopulatedData = visualCol + 1;\n\n          if (skipColumnOnPaste === true) {\n            /* eslint-disable no-continue */\n            continue;\n          }\n\n          lastVisualColumn = visualCol;\n          var insertedColumn = newRow.length % populatedColumnsLength;\n          newRow.push(inputArray[insertedRow][insertedColumn]);\n        }\n\n        newRows.push(newRow);\n      }\n\n      this.hot.populateFromArray(startRow, startColumn, newRows, void 0, void 0, 'CopyPaste.paste', this.pasteMode);\n      return [startRow, startColumn, lastVisualRow, lastVisualColumn];\n    }\n    /**\n     * `copy` event callback on textarea element.\n     *\n     * @param {Event} event ClipboardEvent.\n     * @private\n     */\n\n  }, {\n    key: \"onCopy\",\n    value: function onCopy(event) {\n      var priv = privatePool.get(this);\n\n      if (!this.hot.isListening() && !priv.isTriggeredByCopy || this.isEditorOpened()) {\n        return;\n      }\n\n      this.setCopyableText();\n      priv.isTriggeredByCopy = false;\n      var rangedData = this.getRangedData(this.copyableRanges);\n      var allowCopying = !!this.hot.runHooks('beforeCopy', rangedData, this.copyableRanges);\n\n      if (allowCopying) {\n        var textPlain = stringify(rangedData);\n\n        if (event && event.clipboardData) {\n          var textHTML = _dataToHTML(rangedData, this.hot.rootDocument);\n\n          event.clipboardData.setData('text/plain', textPlain);\n          event.clipboardData.setData('text/html', [META_HEAD, textHTML].join(''));\n        } else if (typeof ClipboardEvent === 'undefined') {\n          this.hot.rootWindow.clipboardData.setData('Text', textPlain);\n        }\n\n        this.hot.runHooks('afterCopy', rangedData, this.copyableRanges);\n      }\n\n      event.preventDefault();\n    }\n    /**\n     * `cut` event callback on textarea element.\n     *\n     * @param {Event} event ClipboardEvent.\n     * @private\n     */\n\n  }, {\n    key: \"onCut\",\n    value: function onCut(event) {\n      var priv = privatePool.get(this);\n\n      if (!this.hot.isListening() && !priv.isTriggeredByCut || this.isEditorOpened()) {\n        return;\n      }\n\n      this.setCopyableText();\n      priv.isTriggeredByCut = false;\n      var rangedData = this.getRangedData(this.copyableRanges);\n      var allowCuttingOut = !!this.hot.runHooks('beforeCut', rangedData, this.copyableRanges);\n\n      if (allowCuttingOut) {\n        var textPlain = stringify(rangedData);\n\n        if (event && event.clipboardData) {\n          var textHTML = _dataToHTML(rangedData, this.hot.rootDocument);\n\n          event.clipboardData.setData('text/plain', textPlain);\n          event.clipboardData.setData('text/html', [META_HEAD, textHTML].join(''));\n        } else if (typeof ClipboardEvent === 'undefined') {\n          this.hot.rootWindow.clipboardData.setData('Text', textPlain);\n        }\n\n        this.hot.emptySelectedCells('CopyPaste.cut');\n        this.hot.runHooks('afterCut', rangedData, this.copyableRanges);\n      }\n\n      event.preventDefault();\n    }\n    /**\n     * `paste` event callback on textarea element.\n     *\n     * @param {Event} event ClipboardEvent or pseudo ClipboardEvent, if paste was called manually.\n     * @private\n     */\n\n  }, {\n    key: \"onPaste\",\n    value: function onPaste(event) {\n      if (!this.hot.isListening() || this.isEditorOpened()) {\n        return;\n      }\n\n      if (event && event.preventDefault) {\n        event.preventDefault();\n      }\n\n      var pastedData;\n\n      if (event && typeof event.clipboardData !== 'undefined') {\n        var textHTML = sanitize(event.clipboardData.getData('text/html'), {\n          ADD_TAGS: ['meta'],\n          ADD_ATTR: ['content'],\n          FORCE_BODY: true\n        });\n\n        if (textHTML && /(<table)|(<TABLE)/g.test(textHTML)) {\n          var parsedConfig = htmlToGridSettings(textHTML, this.hot.rootDocument);\n          pastedData = parsedConfig.data;\n        } else {\n          pastedData = event.clipboardData.getData('text/plain');\n        }\n      } else if (typeof ClipboardEvent === 'undefined' && typeof this.hot.rootWindow.clipboardData !== 'undefined') {\n        pastedData = this.hot.rootWindow.clipboardData.getData('Text');\n      }\n\n      if (typeof pastedData === 'string') {\n        pastedData = parse(pastedData);\n      }\n\n      if (pastedData && pastedData.length === 0) {\n        return;\n      }\n\n      if (this.hot.runHooks('beforePaste', pastedData, this.copyableRanges) === false) {\n        return;\n      }\n\n      var _this$populateValues = this.populateValues(pastedData),\n          _this$populateValues2 = _slicedToArray(_this$populateValues, 4),\n          startRow = _this$populateValues2[0],\n          startColumn = _this$populateValues2[1],\n          endRow = _this$populateValues2[2],\n          endColumn = _this$populateValues2[3];\n\n      this.hot.selectCell(startRow, startColumn, Math.min(this.hot.countRows() - 1, endRow), Math.min(this.hot.countCols() - 1, endColumn));\n      this.hot.runHooks('afterPaste', pastedData, this.copyableRanges);\n    }\n    /**\n     * Add copy and cut options to the Context Menu.\n     *\n     * @private\n     * @param {object} options Contains default added options of the Context Menu.\n     */\n\n  }, {\n    key: \"onAfterContextMenuDefaultOptions\",\n    value: function onAfterContextMenuDefaultOptions(options) {\n      options.items.push({\n        name: '---------'\n      }, copyItem(this), cutItem(this));\n    }\n    /**\n     * Force focus on focusableElement.\n     *\n     * @private\n     */\n\n  }, {\n    key: \"onAfterOnCellMouseUp\",\n    value: function onAfterOnCellMouseUp() {\n      // Changing focused element will remove current selection. It's unnecessary in case when we give possibility\n      // for fragment selection\n      if (!this.hot.isListening() || this.isEditorOpened() || this.hot.getSettings().fragmentSelection) {\n        return;\n      }\n\n      this.getOrCreateFocusableElement();\n      this.focusableElement.focus();\n    }\n    /**\n     * Force focus on focusableElement after end of the selection.\n     *\n     * @private\n     */\n\n  }, {\n    key: \"onAfterSelectionEnd\",\n    value: function onAfterSelectionEnd() {\n      var _privatePool$get = privatePool.get(this),\n          isFragmentSelectionEnabled = _privatePool$get.isFragmentSelectionEnabled;\n\n      if (this.isEditorOpened()) {\n        return;\n      }\n\n      this.getOrCreateFocusableElement();\n\n      if (isFragmentSelectionEnabled && this.focusableElement.getFocusableElement() !== this.hot.rootDocument.activeElement && getSelectionText()) {\n        return;\n      }\n\n      this.setCopyableText();\n      this.focusableElement.focus();\n    }\n    /**\n     * `beforeKeyDown` listener to force focus of focusableElement.\n     *\n     * @private\n     */\n\n  }, {\n    key: \"onBeforeKeyDown\",\n    value: function onBeforeKeyDown() {\n      if (!this.hot.isListening() || this.isEditorOpened()) {\n        return;\n      }\n\n      var activeElement = this.hot.rootDocument.activeElement;\n      var activeEditor = this.hot.getActiveEditor();\n\n      if (!activeEditor || activeElement !== this.focusableElement.getFocusableElement() && activeElement !== activeEditor.select) {\n        return;\n      }\n\n      this.getOrCreateFocusableElement();\n      this.focusableElement.focus();\n    }\n    /**\n     * Destroys the plugin instance.\n     */\n\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      if (this.focusableElement) {\n        destroyElement(this.focusableElement);\n        this.focusableElement = null;\n      }\n\n      _get(_getPrototypeOf(CopyPaste.prototype), \"destroy\", this).call(this);\n    }\n  }], [{\n    key: \"PLUGIN_KEY\",\n    get: function get() {\n      return PLUGIN_KEY;\n    }\n  }, {\n    key: \"SETTING_KEYS\",\n    get: function get() {\n      return [PLUGIN_KEY].concat(SETTING_KEYS);\n    }\n  }, {\n    key: \"PLUGIN_PRIORITY\",\n    get: function get() {\n      return PLUGIN_PRIORITY;\n    }\n  }]);\n\n  return CopyPaste;\n}(BasePlugin);","map":{"version":3,"names":["_slicedToArray","arr","i","_arrayWithHoles","_iterableToArrayLimit","_unsupportedIterableToArray","_nonIterableRest","TypeError","o","minLen","_arrayLikeToArray","n","Object","prototype","toString","call","slice","constructor","name","Array","from","test","len","length","arr2","_i","Symbol","iterator","_arr","_n","_d","_s","_e","next","done","push","value","err","isArray","_typeof","obj","_classCallCheck","instance","Constructor","_defineProperties","target","props","descriptor","enumerable","configurable","writable","defineProperty","key","_createClass","protoProps","staticProps","_get","Reflect","get","bind","property","receiver","base","_superPropBase","desc","getOwnPropertyDescriptor","arguments","apply","object","hasOwnProperty","_getPrototypeOf","_inherits","subClass","superClass","create","_setPrototypeOf","p","setPrototypeOf","__proto__","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","_createSuperInternal","Super","result","NewTarget","construct","_possibleConstructorReturn","self","_assertThisInitialized","ReferenceError","sham","Proxy","Boolean","valueOf","e","getPrototypeOf","BasePlugin","Hooks","stringify","parse","arrayEach","rangeEach","sanitize","getSelectionText","copyItem","cutItem","PasteEvent","createElement","destroyElement","_dataToHTML","htmlToGridSettings","getSingleton","register","PLUGIN_KEY","PLUGIN_PRIORITY","SETTING_KEYS","ROWS_LIMIT","Infinity","COLUMNS_LIMIT","privatePool","WeakMap","META_HEAD","join","CopyPaste","_BasePlugin","_super","hotInstance","_this","columnsLimit","copyableRanges","focusableElement","pasteMode","rowsLimit","uiContainer","hot","rootDocument","body","set","isTriggeredByCopy","isTriggeredByCut","isBeginEditing","isFragmentSelectionEnabled","isEnabled","getSettings","enablePlugin","_this2","enabled","_this$hot$getSettings","settings","fragmentSelection","priv","isNaN","addHook","options","onAfterContextMenuDefaultOptions","onAfterOnCellMouseUp","onAfterSelectionEnd","onBeforeKeyDown","addLocalHook","event","onCopy","onCut","onPaste","updatePlugin","disablePlugin","getOrCreateFocusableElement","copy","focus","execCommand","cut","getRangedCopyableData","ranges","_this3","dataSet","copyableRows","copyableColumns","range","startRow","endRow","row","indexOf","startCol","endCol","column","rowSet","getCopyableData","getRangedData","_this4","paste","pastableText","undefined","pastableHtml","pasteData","clipboardData","setData","setCopyableText","selRange","getSelectedRangeLast","topStart","getTopStartCorner","bottomEnd","getBottomEndCorner","col","finalEndRow","Math","min","finalEndCol","runHooks","editor","getActiveEditor","editableElement","TEXTAREA","setFocusableElement","useSecondaryElement","isEditorOpened","isOpened","populateValues","inputArray","selection","populatedRowsLength","populatedColumnsLength","newRows","_selection$getTopStar","startColumn","_selection$getBottomE","endRowFromSelection","endColumnFromSelection","visualRowForPopulatedData","visualColumnForPopulatedData","lastVisualRow","lastVisualColumn","_this$hot$getCellMeta","getCellMeta","skipRowOnPaste","visualRow","newRow","insertedRow","_this$hot$getCellMeta2","skipColumnOnPaste","visualCol","insertedColumn","populateFromArray","isListening","rangedData","allowCopying","textPlain","textHTML","ClipboardEvent","rootWindow","preventDefault","allowCuttingOut","emptySelectedCells","pastedData","getData","ADD_TAGS","ADD_ATTR","FORCE_BODY","parsedConfig","data","_this$populateValues","_this$populateValues2","endColumn","selectCell","countRows","countCols","items","_privatePool$get","getFocusableElement","activeElement","activeEditor","select","destroy","concat"],"sources":["/home/ubuntu/community/vue-web/node_modules/handsontable/plugins/copyPaste/copyPaste.mjs"],"sourcesContent":["function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\nfunction _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\nfunction _get() { if (typeof Reflect !== \"undefined\" && Reflect.get) { _get = Reflect.get.bind(); } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(arguments.length < 3 ? target : receiver); } return desc.value; }; } return _get.apply(this, arguments); }\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, \"prototype\", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return _assertThisInitialized(self); }\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\nimport \"core-js/modules/es.array.iterator.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/es.weak-map.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport \"core-js/modules/es.array.join.js\";\nimport \"core-js/modules/es.array.index-of.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.object.set-prototype-of.js\";\nimport \"core-js/modules/es.object.get-prototype-of.js\";\nimport \"core-js/modules/es.reflect.construct.js\";\nimport \"core-js/modules/es.reflect.get.js\";\nimport \"core-js/modules/es.object.get-own-property-descriptor.js\";\nimport \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.symbol.description.js\";\nimport \"core-js/modules/es.symbol.iterator.js\";\nimport \"core-js/modules/es.array.slice.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.array.from.js\";\nimport { BasePlugin } from \"../base/index.mjs\";\nimport Hooks from \"../../pluginHooks.mjs\";\nimport { stringify, parse } from \"../../3rdparty/SheetClip/index.mjs\";\nimport { arrayEach } from \"../../helpers/array.mjs\";\nimport { rangeEach } from \"../../helpers/number.mjs\";\nimport { sanitize } from \"../../helpers/string.mjs\";\nimport { getSelectionText } from \"../../helpers/dom/element.mjs\";\nimport copyItem from \"./contextMenuItem/copy.mjs\";\nimport cutItem from \"./contextMenuItem/cut.mjs\";\nimport PasteEvent from \"./pasteEvent.mjs\";\nimport { createElement, destroyElement } from \"./focusableElement.mjs\";\nimport { _dataToHTML, htmlToGridSettings } from \"../../utils/parseTable.mjs\";\nHooks.getSingleton().register('afterCopyLimit');\nHooks.getSingleton().register('modifyCopyableRange');\nHooks.getSingleton().register('beforeCut');\nHooks.getSingleton().register('afterCut');\nHooks.getSingleton().register('beforePaste');\nHooks.getSingleton().register('afterPaste');\nHooks.getSingleton().register('beforeCopy');\nHooks.getSingleton().register('afterCopy');\nexport var PLUGIN_KEY = 'copyPaste';\nexport var PLUGIN_PRIORITY = 80;\nvar SETTING_KEYS = ['fragmentSelection'];\nvar ROWS_LIMIT = Infinity;\nvar COLUMNS_LIMIT = Infinity;\nvar privatePool = new WeakMap();\nvar META_HEAD = ['<meta name=\"generator\" content=\"Handsontable\"/>', '<style type=\"text/css\">td{white-space:normal}br{mso-data-placement:same-cell}</style>'].join('');\n\n/* eslint-disable jsdoc/require-description-complete-sentence */\n/**\n * @description\n * This plugin enables the copy/paste functionality in the Handsontable. The functionality works for API, Context Menu,\n * using keyboard shortcuts and menu bar from the browser.\n * Possible values:\n * * `true` (to enable default options),\n * * `false` (to disable completely).\n *\n * or an object with values:\n * * `'columnsLimit'` (see {@link CopyPaste#columnsLimit})\n * * `'rowsLimit'` (see {@link CopyPaste#rowsLimit})\n * * `'pasteMode'` (see {@link CopyPaste#pasteMode})\n * * `'uiContainer'` (see {@link CopyPaste#uiContainer}).\n *\n * See [the copy/paste demo](@/guides/cell-features/clipboard.md) for examples.\n *\n * @example\n * ```js\n * // Enables the plugin with default values\n * copyPaste: true,\n * // Enables the plugin with custom values\n * copyPaste: {\n *   columnsLimit: 25,\n *   rowsLimit: 50,\n *   pasteMode: 'shift_down',\n *   uiContainer: document.body,\n * },\n * ```\n * @class CopyPaste\n * @plugin CopyPaste\n */\nexport var CopyPaste = /*#__PURE__*/function (_BasePlugin) {\n  _inherits(CopyPaste, _BasePlugin);\n  var _super = _createSuper(CopyPaste);\n  function CopyPaste(hotInstance) {\n    var _this;\n    _classCallCheck(this, CopyPaste);\n    _this = _super.call(this, hotInstance);\n    /**\n     * Maximum number of columns than can be copied to clipboard using <kbd>**Ctrl**</kbd>/<kbd>**Cmd**</kbd> + <kbd>**C**</kbd>.\n     *\n     * @type {number}\n     * @default Infinity\n     */\n    _this.columnsLimit = COLUMNS_LIMIT;\n    /**\n     * Ranges of the cells coordinates, which should be used to copy/cut/paste actions.\n     *\n     * @private\n     * @type {Array}\n     */\n    _this.copyableRanges = [];\n    /**\n     * Provides focusable element to support IME and copy/paste/cut actions.\n     *\n     * @private\n     * @type {FocusableWrapper}\n     */\n    _this.focusableElement = void 0;\n    /**\n     * Defines paste (<kbd>**Ctrl**</kbd>/<kbd>**Cmd**</kbd> + <kbd>**V**</kbd>) behavior.\n     * * Default value `\"overwrite\"` will paste clipboard value over current selection.\n     * * When set to `\"shift_down\"`, clipboard data will be pasted in place of current selection, while all selected cells are moved down.\n     * * When set to `\"shift_right\"`, clipboard data will be pasted in place of current selection, while all selected cells are moved right.\n     *\n     * @type {string}\n     * @default 'overwrite'\n     */\n    _this.pasteMode = 'overwrite';\n    /**\n     * Maximum number of rows than can be copied to clipboard using <kbd>**Ctrl**</kbd>/<kbd>**Cmd**</kbd> + <kbd>**C**</kbd>.\n     *\n     * @type {number}\n     * @default Infinity\n     */\n    _this.rowsLimit = ROWS_LIMIT;\n\n    /**\n     * UI container for the secondary focusable element.\n     *\n     * @type {HTMLElement}\n     */\n    _this.uiContainer = _this.hot.rootDocument.body;\n    privatePool.set(_assertThisInitialized(_this), {\n      isTriggeredByCopy: false,\n      isTriggeredByCut: false,\n      isBeginEditing: false,\n      isFragmentSelectionEnabled: false\n    });\n    return _this;\n  }\n\n  /**\n   * Checks if the plugin is enabled in the handsontable settings. This method is executed in {@link Hooks#beforeInit}\n   * hook and if it returns `true` then the {@link CopyPaste#enablePlugin} method is called.\n   *\n   * @returns {boolean}\n   */\n  _createClass(CopyPaste, [{\n    key: \"isEnabled\",\n    value: function isEnabled() {\n      return !!this.hot.getSettings()[PLUGIN_KEY];\n    }\n\n    /**\n     * Enables the plugin functionality for this Handsontable instance.\n     */\n  }, {\n    key: \"enablePlugin\",\n    value: function enablePlugin() {\n      var _this2 = this;\n      if (this.enabled) {\n        return;\n      }\n      var _this$hot$getSettings = this.hot.getSettings(),\n        settings = _this$hot$getSettings[PLUGIN_KEY],\n        fragmentSelection = _this$hot$getSettings.fragmentSelection;\n      var priv = privatePool.get(this);\n      priv.isFragmentSelectionEnabled = !!fragmentSelection;\n      if (_typeof(settings) === 'object') {\n        this.pasteMode = settings.pasteMode || this.pasteMode;\n        this.rowsLimit = isNaN(settings.rowsLimit) ? this.rowsLimit : settings.rowsLimit;\n        this.columnsLimit = isNaN(settings.columnsLimit) ? this.columnsLimit : settings.columnsLimit;\n        this.uiContainer = settings.uiContainer || this.uiContainer;\n      }\n      this.addHook('afterContextMenuDefaultOptions', function (options) {\n        return _this2.onAfterContextMenuDefaultOptions(options);\n      });\n      this.addHook('afterOnCellMouseUp', function () {\n        return _this2.onAfterOnCellMouseUp();\n      });\n      this.addHook('afterSelectionEnd', function () {\n        return _this2.onAfterSelectionEnd();\n      });\n      this.addHook('beforeKeyDown', function () {\n        return _this2.onBeforeKeyDown();\n      });\n      this.focusableElement = createElement(this.uiContainer);\n      this.focusableElement.addLocalHook('copy', function (event) {\n        return _this2.onCopy(event);\n      }).addLocalHook('cut', function (event) {\n        return _this2.onCut(event);\n      }).addLocalHook('paste', function (event) {\n        return _this2.onPaste(event);\n      });\n      _get(_getPrototypeOf(CopyPaste.prototype), \"enablePlugin\", this).call(this);\n    }\n\n    /**\n     * Updates the plugin's state.\n     *\n     * This method is executed when [`updateSettings()`](@/api/core.md#updatesettings) is invoked with any of the following configuration options:\n     *  - [`copyPaste`](@/api/options.md#copypaste)\n     *  - [`fragmentSelection`](@/api/options.md#fragmentselection)\n     */\n  }, {\n    key: \"updatePlugin\",\n    value: function updatePlugin() {\n      this.disablePlugin();\n      this.enablePlugin();\n      this.getOrCreateFocusableElement();\n      _get(_getPrototypeOf(CopyPaste.prototype), \"updatePlugin\", this).call(this);\n    }\n\n    /**\n     * Disables the plugin functionality for this Handsontable instance.\n     */\n  }, {\n    key: \"disablePlugin\",\n    value: function disablePlugin() {\n      if (this.focusableElement) {\n        destroyElement(this.focusableElement);\n      }\n      _get(_getPrototypeOf(CopyPaste.prototype), \"disablePlugin\", this).call(this);\n    }\n\n    /**\n     * Copies the selected cell into the clipboard.\n     */\n  }, {\n    key: \"copy\",\n    value: function copy() {\n      var priv = privatePool.get(this);\n      priv.isTriggeredByCopy = true;\n      this.getOrCreateFocusableElement();\n      this.focusableElement.focus();\n      this.hot.rootDocument.execCommand('copy');\n    }\n\n    /**\n     * Cuts the selected cell into the clipboard.\n     */\n  }, {\n    key: \"cut\",\n    value: function cut() {\n      var priv = privatePool.get(this);\n      priv.isTriggeredByCut = true;\n      this.getOrCreateFocusableElement();\n      this.focusableElement.focus();\n      this.hot.rootDocument.execCommand('cut');\n    }\n\n    /**\n     * Creates copyable text releated to range objects.\n     *\n     * @param {object[]} ranges Array of objects with properties `startRow`, `endRow`, `startCol` and `endCol`.\n     * @returns {string} Returns string which will be copied into clipboard.\n     */\n  }, {\n    key: \"getRangedCopyableData\",\n    value: function getRangedCopyableData(ranges) {\n      var _this3 = this;\n      var dataSet = [];\n      var copyableRows = [];\n      var copyableColumns = [];\n\n      // Count all copyable rows and columns\n      arrayEach(ranges, function (range) {\n        rangeEach(range.startRow, range.endRow, function (row) {\n          if (copyableRows.indexOf(row) === -1) {\n            copyableRows.push(row);\n          }\n        });\n        rangeEach(range.startCol, range.endCol, function (column) {\n          if (copyableColumns.indexOf(column) === -1) {\n            copyableColumns.push(column);\n          }\n        });\n      });\n      // Concat all rows and columns data defined in ranges into one copyable string\n      arrayEach(copyableRows, function (row) {\n        var rowSet = [];\n        arrayEach(copyableColumns, function (column) {\n          rowSet.push(_this3.hot.getCopyableData(row, column));\n        });\n        dataSet.push(rowSet);\n      });\n      return stringify(dataSet);\n    }\n\n    /**\n     * Creates copyable text releated to range objects.\n     *\n     * @param {object[]} ranges Array of objects with properties `startRow`, `startCol`, `endRow` and `endCol`.\n     * @returns {Array[]} Returns array of arrays which will be copied into clipboard.\n     */\n  }, {\n    key: \"getRangedData\",\n    value: function getRangedData(ranges) {\n      var _this4 = this;\n      var dataSet = [];\n      var copyableRows = [];\n      var copyableColumns = [];\n\n      // Count all copyable rows and columns\n      arrayEach(ranges, function (range) {\n        rangeEach(range.startRow, range.endRow, function (row) {\n          if (copyableRows.indexOf(row) === -1) {\n            copyableRows.push(row);\n          }\n        });\n        rangeEach(range.startCol, range.endCol, function (column) {\n          if (copyableColumns.indexOf(column) === -1) {\n            copyableColumns.push(column);\n          }\n        });\n      });\n      // Concat all rows and columns data defined in ranges into one copyable string\n      arrayEach(copyableRows, function (row) {\n        var rowSet = [];\n        arrayEach(copyableColumns, function (column) {\n          rowSet.push(_this4.hot.getCopyableData(row, column));\n        });\n        dataSet.push(rowSet);\n      });\n      return dataSet;\n    }\n\n    /**\n     * Simulates the paste action.\n     *\n     * Due to security reasons, modern browsers disallow reading from the system clipboard.\n     *\n     * @param {string} pastableText Value as raw string to paste.\n     * @param {string} [pastableHtml=''] Value as HTML to paste.\n     */\n  }, {\n    key: \"paste\",\n    value: function paste() {\n      var pastableText = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n      var pastableHtml = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : pastableText;\n      if (!pastableText && !pastableHtml) {\n        return;\n      }\n      var pasteData = new PasteEvent();\n      if (pastableText) {\n        pasteData.clipboardData.setData('text/plain', pastableText);\n      }\n      if (pastableHtml) {\n        pasteData.clipboardData.setData('text/html', pastableHtml);\n      }\n      this.getOrCreateFocusableElement();\n      this.onPaste(pasteData);\n    }\n\n    /**\n     * Prepares copyable text from the cells selection in the invisible textarea.\n     */\n  }, {\n    key: \"setCopyableText\",\n    value: function setCopyableText() {\n      var selRange = this.hot.getSelectedRangeLast();\n      if (!selRange) {\n        return;\n      }\n      var topStart = selRange.getTopStartCorner();\n      var bottomEnd = selRange.getBottomEndCorner();\n      var startRow = topStart.row;\n      var startCol = topStart.col;\n      var endRow = bottomEnd.row;\n      var endCol = bottomEnd.col;\n      var finalEndRow = Math.min(endRow, startRow + this.rowsLimit - 1);\n      var finalEndCol = Math.min(endCol, startCol + this.columnsLimit - 1);\n      this.copyableRanges.length = 0;\n      this.copyableRanges.push({\n        startRow: startRow,\n        startCol: startCol,\n        endRow: finalEndRow,\n        endCol: finalEndCol\n      });\n      this.copyableRanges = this.hot.runHooks('modifyCopyableRange', this.copyableRanges);\n      if (endRow !== finalEndRow || endCol !== finalEndCol) {\n        this.hot.runHooks('afterCopyLimit', endRow - startRow + 1, endCol - startCol + 1, this.rowsLimit, this.columnsLimit);\n      }\n    }\n\n    /**\n     * Force focus on editable element.\n     *\n     * @private\n     */\n  }, {\n    key: \"getOrCreateFocusableElement\",\n    value: function getOrCreateFocusableElement() {\n      var editor = this.hot.getActiveEditor();\n      var editableElement = editor ? editor.TEXTAREA : void 0;\n      if (editableElement) {\n        this.focusableElement.setFocusableElement(editableElement);\n      } else {\n        this.focusableElement.useSecondaryElement();\n      }\n    }\n\n    /**\n     * Verifies if editor exists and is open.\n     *\n     * @private\n     * @returns {boolean}\n     */\n  }, {\n    key: \"isEditorOpened\",\n    value: function isEditorOpened() {\n      var editor = this.hot.getActiveEditor();\n      return editor && editor.isOpened();\n    }\n\n    /**\n     * Prepares new values to populate them into datasource.\n     *\n     * @private\n     * @param {Array} inputArray An array of the data to populate.\n     * @param {Array} [selection] The selection which indicates from what position the data will be populated.\n     * @returns {Array} Range coordinates after populate data.\n     */\n  }, {\n    key: \"populateValues\",\n    value: function populateValues(inputArray) {\n      var selection = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.hot.getSelectedRangeLast();\n      if (!inputArray.length) {\n        return;\n      }\n      var populatedRowsLength = inputArray.length;\n      var populatedColumnsLength = inputArray[0].length;\n      var newRows = [];\n      var _selection$getTopStar = selection.getTopStartCorner(),\n        startRow = _selection$getTopStar.row,\n        startColumn = _selection$getTopStar.col;\n      var _selection$getBottomE = selection.getBottomEndCorner(),\n        endRowFromSelection = _selection$getBottomE.row,\n        endColumnFromSelection = _selection$getBottomE.col;\n      var visualRowForPopulatedData = startRow;\n      var visualColumnForPopulatedData = startColumn;\n      var lastVisualRow = startRow;\n      var lastVisualColumn = startColumn;\n\n      // We try to populate just all copied data or repeat copied data within a selection. Please keep in mind that we\n      // don't know whether populated data is bigger than selection on start as there are some cells for which values\n      // should be not inserted (it's known right after getting cell meta).\n      while (newRows.length < populatedRowsLength || visualRowForPopulatedData <= endRowFromSelection) {\n        var _this$hot$getCellMeta = this.hot.getCellMeta(visualRowForPopulatedData, startColumn),\n          skipRowOnPaste = _this$hot$getCellMeta.skipRowOnPaste,\n          visualRow = _this$hot$getCellMeta.visualRow;\n        visualRowForPopulatedData = visualRow + 1;\n        if (skipRowOnPaste === true) {\n          /* eslint-disable no-continue */\n          continue;\n        }\n        lastVisualRow = visualRow;\n        visualColumnForPopulatedData = startColumn;\n        var newRow = [];\n        var insertedRow = newRows.length % populatedRowsLength;\n        while (newRow.length < populatedColumnsLength || visualColumnForPopulatedData <= endColumnFromSelection) {\n          var _this$hot$getCellMeta2 = this.hot.getCellMeta(startRow, visualColumnForPopulatedData),\n            skipColumnOnPaste = _this$hot$getCellMeta2.skipColumnOnPaste,\n            visualCol = _this$hot$getCellMeta2.visualCol;\n          visualColumnForPopulatedData = visualCol + 1;\n          if (skipColumnOnPaste === true) {\n            /* eslint-disable no-continue */\n            continue;\n          }\n          lastVisualColumn = visualCol;\n          var insertedColumn = newRow.length % populatedColumnsLength;\n          newRow.push(inputArray[insertedRow][insertedColumn]);\n        }\n        newRows.push(newRow);\n      }\n      this.hot.populateFromArray(startRow, startColumn, newRows, void 0, void 0, 'CopyPaste.paste', this.pasteMode);\n      return [startRow, startColumn, lastVisualRow, lastVisualColumn];\n    }\n\n    /**\n     * `copy` event callback on textarea element.\n     *\n     * @param {Event} event ClipboardEvent.\n     * @private\n     */\n  }, {\n    key: \"onCopy\",\n    value: function onCopy(event) {\n      var priv = privatePool.get(this);\n      if (!this.hot.isListening() && !priv.isTriggeredByCopy || this.isEditorOpened()) {\n        return;\n      }\n      this.setCopyableText();\n      priv.isTriggeredByCopy = false;\n      var rangedData = this.getRangedData(this.copyableRanges);\n      var allowCopying = !!this.hot.runHooks('beforeCopy', rangedData, this.copyableRanges);\n      if (allowCopying) {\n        var textPlain = stringify(rangedData);\n        if (event && event.clipboardData) {\n          var textHTML = _dataToHTML(rangedData, this.hot.rootDocument);\n          event.clipboardData.setData('text/plain', textPlain);\n          event.clipboardData.setData('text/html', [META_HEAD, textHTML].join(''));\n        } else if (typeof ClipboardEvent === 'undefined') {\n          this.hot.rootWindow.clipboardData.setData('Text', textPlain);\n        }\n        this.hot.runHooks('afterCopy', rangedData, this.copyableRanges);\n      }\n      event.preventDefault();\n    }\n\n    /**\n     * `cut` event callback on textarea element.\n     *\n     * @param {Event} event ClipboardEvent.\n     * @private\n     */\n  }, {\n    key: \"onCut\",\n    value: function onCut(event) {\n      var priv = privatePool.get(this);\n      if (!this.hot.isListening() && !priv.isTriggeredByCut || this.isEditorOpened()) {\n        return;\n      }\n      this.setCopyableText();\n      priv.isTriggeredByCut = false;\n      var rangedData = this.getRangedData(this.copyableRanges);\n      var allowCuttingOut = !!this.hot.runHooks('beforeCut', rangedData, this.copyableRanges);\n      if (allowCuttingOut) {\n        var textPlain = stringify(rangedData);\n        if (event && event.clipboardData) {\n          var textHTML = _dataToHTML(rangedData, this.hot.rootDocument);\n          event.clipboardData.setData('text/plain', textPlain);\n          event.clipboardData.setData('text/html', [META_HEAD, textHTML].join(''));\n        } else if (typeof ClipboardEvent === 'undefined') {\n          this.hot.rootWindow.clipboardData.setData('Text', textPlain);\n        }\n        this.hot.emptySelectedCells('CopyPaste.cut');\n        this.hot.runHooks('afterCut', rangedData, this.copyableRanges);\n      }\n      event.preventDefault();\n    }\n\n    /**\n     * `paste` event callback on textarea element.\n     *\n     * @param {Event} event ClipboardEvent or pseudo ClipboardEvent, if paste was called manually.\n     * @private\n     */\n  }, {\n    key: \"onPaste\",\n    value: function onPaste(event) {\n      if (!this.hot.isListening() || this.isEditorOpened()) {\n        return;\n      }\n      if (event && event.preventDefault) {\n        event.preventDefault();\n      }\n      var pastedData;\n      if (event && typeof event.clipboardData !== 'undefined') {\n        var textHTML = sanitize(event.clipboardData.getData('text/html'), {\n          ADD_TAGS: ['meta'],\n          ADD_ATTR: ['content'],\n          FORCE_BODY: true\n        });\n        if (textHTML && /(<table)|(<TABLE)/g.test(textHTML)) {\n          var parsedConfig = htmlToGridSettings(textHTML, this.hot.rootDocument);\n          pastedData = parsedConfig.data;\n        } else {\n          pastedData = event.clipboardData.getData('text/plain');\n        }\n      } else if (typeof ClipboardEvent === 'undefined' && typeof this.hot.rootWindow.clipboardData !== 'undefined') {\n        pastedData = this.hot.rootWindow.clipboardData.getData('Text');\n      }\n      if (typeof pastedData === 'string') {\n        pastedData = parse(pastedData);\n      }\n      if (pastedData && pastedData.length === 0) {\n        return;\n      }\n      if (this.hot.runHooks('beforePaste', pastedData, this.copyableRanges) === false) {\n        return;\n      }\n      var _this$populateValues = this.populateValues(pastedData),\n        _this$populateValues2 = _slicedToArray(_this$populateValues, 4),\n        startRow = _this$populateValues2[0],\n        startColumn = _this$populateValues2[1],\n        endRow = _this$populateValues2[2],\n        endColumn = _this$populateValues2[3];\n      this.hot.selectCell(startRow, startColumn, Math.min(this.hot.countRows() - 1, endRow), Math.min(this.hot.countCols() - 1, endColumn));\n      this.hot.runHooks('afterPaste', pastedData, this.copyableRanges);\n    }\n\n    /**\n     * Add copy and cut options to the Context Menu.\n     *\n     * @private\n     * @param {object} options Contains default added options of the Context Menu.\n     */\n  }, {\n    key: \"onAfterContextMenuDefaultOptions\",\n    value: function onAfterContextMenuDefaultOptions(options) {\n      options.items.push({\n        name: '---------'\n      }, copyItem(this), cutItem(this));\n    }\n\n    /**\n     * Force focus on focusableElement.\n     *\n     * @private\n     */\n  }, {\n    key: \"onAfterOnCellMouseUp\",\n    value: function onAfterOnCellMouseUp() {\n      // Changing focused element will remove current selection. It's unnecessary in case when we give possibility\n      // for fragment selection\n      if (!this.hot.isListening() || this.isEditorOpened() || this.hot.getSettings().fragmentSelection) {\n        return;\n      }\n      this.getOrCreateFocusableElement();\n      this.focusableElement.focus();\n    }\n\n    /**\n     * Force focus on focusableElement after end of the selection.\n     *\n     * @private\n     */\n  }, {\n    key: \"onAfterSelectionEnd\",\n    value: function onAfterSelectionEnd() {\n      var _privatePool$get = privatePool.get(this),\n        isFragmentSelectionEnabled = _privatePool$get.isFragmentSelectionEnabled;\n      if (this.isEditorOpened()) {\n        return;\n      }\n      this.getOrCreateFocusableElement();\n      if (isFragmentSelectionEnabled && this.focusableElement.getFocusableElement() !== this.hot.rootDocument.activeElement && getSelectionText()) {\n        return;\n      }\n      this.setCopyableText();\n      this.focusableElement.focus();\n    }\n\n    /**\n     * `beforeKeyDown` listener to force focus of focusableElement.\n     *\n     * @private\n     */\n  }, {\n    key: \"onBeforeKeyDown\",\n    value: function onBeforeKeyDown() {\n      if (!this.hot.isListening() || this.isEditorOpened()) {\n        return;\n      }\n      var activeElement = this.hot.rootDocument.activeElement;\n      var activeEditor = this.hot.getActiveEditor();\n      if (!activeEditor || activeElement !== this.focusableElement.getFocusableElement() && activeElement !== activeEditor.select) {\n        return;\n      }\n      this.getOrCreateFocusableElement();\n      this.focusableElement.focus();\n    }\n\n    /**\n     * Destroys the plugin instance.\n     */\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      if (this.focusableElement) {\n        destroyElement(this.focusableElement);\n        this.focusableElement = null;\n      }\n      _get(_getPrototypeOf(CopyPaste.prototype), \"destroy\", this).call(this);\n    }\n  }], [{\n    key: \"PLUGIN_KEY\",\n    get: function get() {\n      return PLUGIN_KEY;\n    }\n  }, {\n    key: \"SETTING_KEYS\",\n    get: function get() {\n      return [PLUGIN_KEY].concat(SETTING_KEYS);\n    }\n  }, {\n    key: \"PLUGIN_PRIORITY\",\n    get: function get() {\n      return PLUGIN_PRIORITY;\n    }\n  }]);\n  return CopyPaste;\n}(BasePlugin);"],"mappings":"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"},"metadata":{},"sourceType":"module"}