{"ast":null,"code":"// import { message } from 'ant-design-vue';\n// import emitter from '@/utils/bus';\nimport { defineComponent, reactive } from 'vue';\nexport default defineComponent({\n  setup() {\n    const formState = reactive({\n      pattern: '',\n      encryption: undefined // choices: [],\n\n    });\n\n    let validatePattern = async (_rule, value) => {\n      if (value === '') {\n        return Promise.reject('请选择正确投票类型');\n      } else if (value.length != value.split(\" \").join(\"\").length) {\n        return Promise.reject('输入包含空格');\n      } else {\n        return Promise.resolve();\n      }\n    };\n\n    let validateEncryption = async (_rule, value) => {\n      console.log(value);\n\n      for (var i = 0, len = value.length; i < len; i++) {\n        if (value[i].value === '') {\n          return Promise.reject('所有选项中存在空输入');\n        } // else if(value[i].value.length != value[i].value.split(\" \").join(\"\").length){\n        //   return Promise.reject('选项中存在空格输入');\n        // }\n\n      }\n    };\n\n    const rules = {\n      pattern: [{\n        required: true,\n        validator: validatePattern,\n        trigger: 'change'\n      }],\n      encryption: [{\n        required: true,\n        validator: validateEncryption\n      }]\n    };\n    return {\n      formState,\n      rules,\n      validateEncryption,\n      validatePattern\n    };\n  },\n\n  methods: {\n    prevStep() {\n      // this.$emit('prevStep')\n      console.log(this.formState);\n    },\n\n    nextStep() {\n      this.$emit('nextStep');\n    }\n\n  }\n});","map":{"version":3,"mappings":"AAmDA;AACA;AACA,SAASA,eAAT,EAA0BC,QAA1B,QAAyC,KAAzC;AACA,eAAeD,eAAe,CAAC;EAC7BE,KAAK,GAAG;IACN,MAAMC,SAAQ,GAAIF,QAAQ,CAAC;MACzBG,OAAO,EAAE,EADgB;MAEzBC,UAAU,EAAEC,SAFa,CAGzB;;IAHyB,CAAD,CAA1B;;IAOA,IAAIC,eAAc,GAAI,OAAOC,KAAP,EAAcC,KAAd,KAAwB;MAC5C,IAAIA,KAAI,KAAK,EAAb,EAAiB;QACf,OAAOC,OAAO,CAACC,MAAR,CAAe,WAAf,CAAP;MACF,CAFA,MAGK,IAAGF,KAAK,CAACG,MAAN,IAAgBH,KAAK,CAACI,KAAN,CAAY,GAAZ,EAAiBC,IAAjB,CAAsB,EAAtB,EAA0BF,MAA7C,EAAoD;QACvD,OAAOF,OAAO,CAACC,MAAR,CAAe,QAAf,CAAP;MACF,CAFK,MAGA;QACH,OAAOD,OAAO,CAACK,OAAR,EAAP;MACF;IACD,CAVD;;IAYA,IAAIC,kBAAiB,GAAI,OAAOR,KAAP,EAAcC,KAAd,KAAwB;MAC/CQ,OAAO,CAACC,GAAR,CAAYT,KAAZ;;MACA,KAAI,IAAIU,CAAC,GAAC,CAAN,EAAQC,GAAG,GAACX,KAAK,CAACG,MAAtB,EAA6BO,CAAC,GAACC,GAA/B,EAAmCD,CAAC,EAApC,EAAuC;QACpC,IAAIV,KAAK,CAACU,CAAD,CAAL,CAASV,KAAT,KAAkB,EAAtB,EAA0B;UAC3B,OAAOC,OAAO,CAACC,MAAR,CAAe,YAAf,CAAP;QACF,CAHuC,CAIvC;QACA;QACA;;MACA;IACC,CAVH;;IAYD,MAAMU,KAAI,GAAI;MACXjB,OAAO,EAAE,CAAC;QACRkB,QAAQ,EAAE,IADF;QAERC,SAAS,EAAEhB,eAFH;QAGRiB,OAAO,EAAE;MAHD,CAAD,CADE;MAMVnB,UAAU,EAAE,CACX;QACEiB,QAAQ,EAAE,IADZ;QAEEC,SAAS,EAAEP;MAFb,CADW;IANF,CAAd;IAcC,OAAO;MACLb,SADK;MAELkB,KAFK;MAGLL,kBAHK;MAILT;IAJK,CAAP;EAMD,CArD4B;;EAuD7BkB,OAAO,EAAC;IACRC,QAAQ,GAAE;MACN;MACAT,OAAO,CAACC,GAAR,CAAY,KAAKf,SAAjB;IACD,CAJK;;IAKNwB,QAAQ,GAAE;MACR,KAAKC,KAAL,CAAW,UAAX;IACF;;EAPM;AAvDqB,CAAD,CAA9B","names":["defineComponent","reactive","setup","formState","pattern","encryption","undefined","validatePattern","_rule","value","Promise","reject","length","split","join","resolve","validateEncryption","console","log","i","len","rules","required","validator","trigger","methods","prevStep","nextStep","$emit"],"sourceRoot":"","sources":["/home/ubuntu/voting/vue-web/src/views/InitVote/avec/initAvec/StepTwo.vue"],"sourcesContent":["<template>\r\n  <div style=\"margin: 40px auto 0;\">\r\n  <a-form\r\n      :model=\"formState\"\r\n       name=\"custom-validation\"\r\n      :rules=\"rules\"\r\n      :labelCol=\"{lg: {span: 7}, sm: {span: 7}}\"\r\n      :wrapperCol=\"{lg: {span: 10}, sm: {span: 20}}\"\r\n      style=\"margin: 40px auto 0;\"\r\n      autocomplete=\"off\" \r\n  >\r\n    <a-form-item has-feedback label=\"投票类型\" name=\"pattern\">\r\n      <a-input size=\"large\" v-model:value=\"formState.pattern\" placeholder=\"选择投票类型\" type=\"text\" autocomplete=\"off\" />\r\n    </a-form-item>\r\n\r\n    <a-form-item has-feedback label=\"加密参数\" name=\"encryption\">\r\n      <a-input  size=\"large\" v-model:value=\"formState.encryption\" placeholder=\"选择投票类型\" type=\"text\" autocomplete=\"off\" />\r\n    </a-form-item>\r\n\r\n  <a-form-item label=\"投票类型\" name=\"pattern\" v-model:value=\"formState.pattern\" \r\n  :rules=\"[{ required: true, message: 'Please pick an item!' }]\">\r\n    <a-radio-group>\r\n      <a-radio :value=\"1\">A</a-radio>\r\n      <a-radio :value=\"2\">B</a-radio>\r\n      <a-radio :value=\"3\">C</a-radio>\r\n      <a-radio :value=\"4\">D</a-radio>\r\n    </a-radio-group>\r\n  </a-form-item>\r\n\r\n\r\n    \r\n\r\n    <a-form-item :wrapperCol=\"{ span: 24 }\"\r\n                 style=\"text-align: center\">\r\n      <a-button type=\"primary\" html-type=\"submit\" @click=\"nextStep\">下一步</a-button>\r\n      <a-button type=\"primary\"  @click=\"prevStep\">上一步</a-button>\r\n      \r\n    </a-form-item>\r\n  </a-form>\r\n\r\n\r\n  <a-divider />\r\n  <div class=\"step-form-style-desc\">\r\n    <h3>说明</h3>\r\n    <h4>发起匿名灵活投票事项</h4>\r\n    <p>如果需要，这里可以放一些关于产品的常见问题说明。如果需要，这里可以放一些关于产品的常见问题说明。如果需要，这里可以放一些关于产品的常见问题说明。</p>\r\n  </div>\r\n</div>\r\n</template>\r\n\r\n<script>\r\n// import { message } from 'ant-design-vue';\r\n// import emitter from '@/utils/bus';\r\nimport { defineComponent, reactive} from 'vue';\r\nexport default defineComponent({\r\n  setup() {\r\n    const formState = reactive({\r\n      pattern: '',\r\n      encryption: undefined,\r\n      // choices: [],\r\n    });\r\n\r\n  \r\n    let validatePattern = async (_rule, value) => {\r\n      if (value ==='') {\r\n        return Promise.reject('请选择正确投票类型');\r\n      } \r\n      else if(value.length != value.split(\" \").join(\"\").length){\r\n        return Promise.reject('输入包含空格');\r\n      }\r\n      else {\r\n        return Promise.resolve();\r\n      }\r\n    };\r\n\r\n    let validateEncryption = async (_rule, value) => {\r\n      console.log(value)\r\n      for(var i=0,len=value.length;i<len;i++){\r\n         if (value[i].value ==='') {\r\n        return Promise.reject('所有选项中存在空输入');\r\n      } \r\n      // else if(value[i].value.length != value[i].value.split(\" \").join(\"\").length){\r\n      //   return Promise.reject('选项中存在空格输入');\r\n      // }\r\n      }\r\n      };\r\n\r\n   const rules = {\r\n      pattern: [{\r\n        required: true,\r\n        validator: validatePattern,\r\n        trigger: 'change',\r\n      }],\r\n       encryption: [\r\n        {\r\n          required: true,\r\n          validator: validateEncryption,\r\n        },\r\n      ],\r\n    };\r\n\r\n    return {\r\n      formState,\r\n      rules,\r\n      validateEncryption,\r\n      validatePattern\r\n    };\r\n  },\r\n\r\n  methods:{\r\n  prevStep(){\r\n      // this.$emit('prevStep')\r\n      console.log(this.formState)\r\n    },\r\n    nextStep(){\r\n      this.$emit('nextStep')\r\n    }\r\n\r\n    }\r\n  \r\n\r\n});\r\n</script>\r\n<style lang=\"less\" scoped>\r\n.step-form-style-desc {\r\n  padding: 0 56px;\r\n  color: rgba(0,0,0,.45);\r\n\r\n  h3 {\r\n    margin: 0 0 12px;\r\n    color: rgba(0,0,0,.45);\r\n    font-size: 16px;\r\n    line-height: 32px;\r\n  }\r\n\r\n  h4 {\r\n    margin: 0 0 4px;\r\n    color: rgba(0,0,0,.45);\r\n    font-size: 14px;\r\n    line-height: 22px;\r\n  }\r\n\r\n  p {\r\n    margin-top: 0;\r\n    margin-bottom: 12px;\r\n    line-height: 22px;\r\n  }\r\n}\r\n.dynamic-delete-button {\r\n  cursor: pointer;\r\n  position: relative;\r\n  top: 4px;\r\n  font-size: 24px;\r\n  color: #999;\r\n  transition: all 0.3s;\r\n}\r\n.dynamic-delete-button:hover {\r\n  color: #777;\r\n}\r\n.dynamic-delete-button[disabled] {\r\n  cursor: not-allowed;\r\n  opacity: 0.5;\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module"}