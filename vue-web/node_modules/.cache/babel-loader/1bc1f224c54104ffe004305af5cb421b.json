{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, normalizeClass as _normalizeClass, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_DashboardSidebar = _resolveComponent(\"DashboardSidebar\");\n\n  const _component_DashboardHeader = _resolveComponent(\"DashboardHeader\");\n\n  const _component_router_view = _resolveComponent(\"router-view\");\n\n  const _component_a_layout_content = _resolveComponent(\"a-layout-content\");\n\n  const _component_DashboardFooter = _resolveComponent(\"DashboardFooter\");\n\n  const _component_a_layout = _resolveComponent(\"a-layout\");\n\n  return _openBlock(), _createElementBlock(\"div\", null, [_createVNode(_component_a_layout, {\n    class: _normalizeClass([\"layout-dashboard\", [$data.navbarFixed ? 'navbar-fixed' : '', !$data.sidebarCollapsed ? 'has-sidebar' : '', $options.layoutClass]]),\n    id: \"layout-dashboard\"\n  }, {\n    default: _withCtx(() => [_createVNode(_component_DashboardSidebar, {\n      sidebarCollapsed: $data.sidebarCollapsed,\n      sidebarColor: $data.sidebarColor,\n      sidebarTheme: $data.sidebarTheme,\n      onToggleSidebar: $options.toggleSidebar\n    }, null, 8, [\"sidebarCollapsed\", \"sidebarColor\", \"sidebarTheme\", \"onToggleSidebar\"]), _createVNode(_component_a_layout, null, {\n      default: _withCtx(() => [_createVNode(_component_DashboardHeader, {\n        sidebarCollapsed: $data.sidebarCollapsed,\n        navbarFixed: $data.navbarFixed,\n        onToggleSettingsDrawer: $options.toggleSettingsDrawer,\n        onToggleSidebar: $options.toggleSidebar\n      }, null, 8, [\"sidebarCollapsed\", \"navbarFixed\", \"onToggleSettingsDrawer\", \"onToggleSidebar\"]), _createVNode(_component_a_layout_content, null, {\n        default: _withCtx(() => [_createVNode(_component_router_view)]),\n        _: 1\n      }), _createVNode(_component_DashboardFooter)]),\n      _: 1\n    })]),\n    _: 1\n  }, 8, [\"class\"])]);\n}","map":{"version":3,"mappings":";;;;;;;;;;;;;;uBACCA,oBA4CM,KA5CN,EA4CM,IA5CN,EA4CM,CAzCLC,aAsCWC,mBAtCX,EAsCW;IAtCDC,KAAK,mBAAC,kBAAD,EAAoB,CAAgCC,oBAAW,cAAX,GAAW,EAA3C,EAA2C,CAA0BA,sBAA1B,GAA0C,aAA1C,GAA0C,EAArF,EAA4GC,oBAA5G,CAApB,EAsCJ;IAtCyBC,EAAE,EAAC;EAsC5B,CAtCX;sBAGC,MAKoB,CALpBL,aAKoBM,2BALpB,EAKoB;MAJlBC,gBAAgB,EAAEJ,sBAIA;MAHlBK,YAAY,EAAEL,kBAGI;MAFlBM,YAAY,EAAEN,kBAEI;MADlBO,eAAa,EAAEN;IACG,CALpB,mFAKoB,EAIpBJ,aAsBWC,mBAtBX,EAsBW,IAtBX,EAsBW;wBAnBV,MAKmB,CALnBD,aAKmBW,0BALnB,EAKmB;QAJjBJ,gBAAgB,EAAEJ,sBAID;QAHjBS,WAAW,EAAET,iBAGI;QAFjBU,sBAAoB,EAAET,6BAEL;QADjBM,eAAa,EAAEN;MACE,CALnB,4FAKmB,EAInBJ,aAEmBc,2BAFnB,EAEmB,IAFnB,EAEmB;0BADlB,MAAe,CAAfd,aAAee,sBAAf,CAAe,EACG;;MAAA,CAFnB,CAJmB,EAUnBf,aAAmCgB,0BAAnC,CAVmB,EAcT;;IAAA,CAtBX,CAJoB;;GARrB,eAyCK,CA5CN","names":["_createElementBlock","_createVNode","_component_a_layout","class","$data","$options","id","_component_DashboardSidebar","sidebarCollapsed","sidebarColor","sidebarTheme","onToggleSidebar","_component_DashboardHeader","navbarFixed","onToggleSettingsDrawer","_component_a_layout_content","_component_router_view","_component_DashboardFooter"],"sourceRoot":"","sources":["/home/ubuntu/voting/vue-web/src/layout/HomeNav.vue"],"sourcesContent":["<template>\r\n\t<div>\r\n\r\n\t\t<!-- Dashboard Layout -->\r\n\t\t<a-layout class=\"layout-dashboard \" id=\"layout-dashboard\" :class=\"[navbarFixed ? 'navbar-fixed' : '', ! sidebarCollapsed ? 'has-sidebar' : '', layoutClass]\">\r\n\t\t\t\r\n\t\t\t<!-- Main Sidebar -->\r\n\t\t\t<DashboardSidebar\r\n\t\t\t\t:sidebarCollapsed=\"sidebarCollapsed\"\r\n\t\t\t\t:sidebarColor=\"sidebarColor\"\r\n\t\t\t\t:sidebarTheme=\"sidebarTheme\"\r\n\t\t\t\t@toggleSidebar=\"toggleSidebar\"\r\n\t\t\t></DashboardSidebar>\r\n\t\t\t<!-- / Main Sidebar -->\r\n\r\n\t\t\t<!-- Layout Content -->\r\n\t\t\t<a-layout>\r\n\r\n\t\t\t\t<!-- Layout Header's Conditionally Fixed Wrapper -->\r\n\t\t\t\t<DashboardHeader\r\n\t\t\t\t\t:sidebarCollapsed=\"sidebarCollapsed\"\r\n\t\t\t\t\t:navbarFixed=\"navbarFixed\"\r\n\t\t\t\t\t@toggleSettingsDrawer=\"toggleSettingsDrawer\"\r\n\t\t\t\t\t@toggleSidebar=\"toggleSidebar\"\r\n\t\t\t\t></DashboardHeader>\r\n\t\t\t\t<!-- / Layout Header's Conditionally Fixed Wrapper -->\r\n\r\n\t\t\t\t<!-- Page Content -->\r\n\t\t\t\t<a-layout-content>\r\n\t\t\t\t\t<router-view />\r\n\t\t\t\t</a-layout-content>\r\n\t\t\t\t<!-- / Page Content -->\r\n\r\n\t\t\t\t<!-- Layout Footer -->\r\n\t\t\t\t<DashboardFooter></DashboardFooter>\r\n\t\t\t\t<!-- / Layout Footer -->\r\n\r\n\r\n\t\t\t</a-layout>\r\n\t\t\t<!-- / Layout Content -->\r\n\r\n\r\n\t\t</a-layout>\r\n\t\t\r\n\r\n\t</div>\r\n</template>\r\n\r\n<script>\r\n\r\n\timport DashboardSidebar from '../components/Sidebars/DashboardSidebar' ;\r\n\timport DashboardHeader from '../components/Headers/DashboardHeader' ;\r\n\timport DashboardFooter from '../components/Footers/DashboardFooter' ;\r\n\r\n\texport default ({\r\n\t\tcomponents: {\r\n\t\t\tDashboardSidebar,\r\n\t\t\tDashboardHeader,\r\n\t\t\tDashboardFooter,\r\n\t\t},\r\n\t\tdata() {\r\n\t\t\treturn {\r\n\t\t\t\t// Sidebar collapsed status.\r\n\t\t\t\tsidebarCollapsed: false,\r\n\t\t\t\t\r\n\t\t\t\t// Main sidebar color.\r\n\t\t\t\tsidebarColor: \"primary\",\r\n\t\t\t\t\r\n\t\t\t\t// Main sidebar theme : light, white, dark.\r\n\t\t\t\tsidebarTheme: \"light\",\r\n\r\n\t\t\t\t// Header fixed status.\r\n\t\t\t\tnavbarFixed: false,\r\n\r\n\t\t\t\t// Settings drawer visiblility status.\r\n\t\t\t\tshowSettingsDrawer: false,\r\n\t\t\t}\r\n\t\t},\r\n\t\tmethods: {\r\n\t\t\ttoggleSidebar( value ) {\r\n\t\t\t\tthis.sidebarCollapsed = value ;\r\n\t\t\t},\r\n\t\t\ttoggleSettingsDrawer( value ) {\r\n\t\t\t\tthis.showSettingsDrawer = value ;\r\n\t\t\t},\r\n\t\t\ttoggleNavbarPosition( value ) {\r\n\t\t\t\tthis.navbarFixed = value ;\r\n\t\t\t},\r\n\t\t\tupdateSidebarTheme( value ) {\r\n\t\t\t\tthis.sidebarTheme = value ;\r\n\t\t\t},\r\n\t\t\tupdateSidebarColor( value ) {\r\n\t\t\t\tthis.sidebarColor = value ;\r\n\t\t\t},\r\n\t\t},\r\n\t\tcomputed: {\r\n\t\t\t// Sets layout's element's class based on route's meta data.\r\n\t\t\tlayoutClass() {\r\n\t\t\t\treturn this.$route.meta.layoutClass ;\r\n\t\t\t}\r\n\t\t},\r\n\t})\r\n\r\n</script>\r\n"]},"metadata":{},"sourceType":"module"}