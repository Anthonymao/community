{"ast":null,"code":"import \"core-js/modules/es.error.cause.js\";\nimport \"core-js/modules/es.array.includes.js\";\n\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();\n}\n\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return _arrayLikeToArray(arr);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nimport \"core-js/modules/es.array.slice.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.string.includes.js\";\nimport \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.symbol.description.js\";\nimport \"core-js/modules/es.symbol.iterator.js\";\nimport \"core-js/modules/es.array.iterator.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport \"core-js/modules/es.array.from.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport { arrayEach, arrayMap } from \"../../../helpers/array.mjs\";\nimport * as C from \"../../../i18n/constants.mjs\";\n/**\n * @param {HiddenColumns} hiddenColumnsPlugin The plugin instance.\n * @returns {object}\n */\n\nexport default function showColumnItem(hiddenColumnsPlugin) {\n  var columns = [];\n  return {\n    key: 'hidden_columns_show',\n    name: function name() {\n      var pluralForm = columns.length > 1 ? 1 : 0;\n      return this.getTranslatedPhrase(C.CONTEXTMENU_ITEMS_SHOW_COLUMN, pluralForm);\n    },\n    callback: function callback() {\n      var _this$columnIndexMapp, _this$columnIndexMapp2;\n\n      if (columns.length === 0) {\n        return;\n      }\n\n      var startVisualColumn = columns[0];\n      var endVisualColumn = columns[columns.length - 1]; // Add to the selection one more visual column on the left.\n\n      startVisualColumn = (_this$columnIndexMapp = this.columnIndexMapper.getNearestNotHiddenIndex(startVisualColumn - 1, -1)) !== null && _this$columnIndexMapp !== void 0 ? _this$columnIndexMapp : 0; // Add to the selection one more visual column on the right.\n\n      endVisualColumn = (_this$columnIndexMapp2 = this.columnIndexMapper.getNearestNotHiddenIndex(endVisualColumn + 1, 1)) !== null && _this$columnIndexMapp2 !== void 0 ? _this$columnIndexMapp2 : this.countCols() - 1;\n      hiddenColumnsPlugin.showColumns(columns); // We render columns at first. It was needed for getting fixed columns.\n      // Please take a look at #6864 for broader description.\n\n      this.render();\n      this.view.adjustElementsSize(true);\n      var allColumnsSelected = endVisualColumn - startVisualColumn + 1 === this.countCols(); // When all headers needs to be selected then do nothing. The header selection is\n      // automatically handled by corner click.\n\n      if (!allColumnsSelected) {\n        this.selectColumns(startVisualColumn, endVisualColumn);\n      }\n    },\n    disabled: false,\n    hidden: function hidden() {\n      var _this = this;\n\n      var hiddenPhysicalColumns = arrayMap(hiddenColumnsPlugin.getHiddenColumns(), function (visualColumnIndex) {\n        return _this.toPhysicalColumn(visualColumnIndex);\n      });\n\n      if (!(this.selection.isSelectedByColumnHeader() || this.selection.isSelectedByCorner()) || hiddenPhysicalColumns.length < 1) {\n        return true;\n      }\n\n      columns.length = 0;\n      var selectedRangeLast = this.getSelectedRangeLast();\n      var visualStartColumn = selectedRangeLast.getTopStartCorner().col;\n      var visualEndColumn = selectedRangeLast.getBottomEndCorner().col;\n      var columnIndexMapper = this.columnIndexMapper;\n      var renderableStartColumn = columnIndexMapper.getRenderableFromVisualIndex(visualStartColumn);\n      var renderableEndColumn = columnIndexMapper.getRenderableFromVisualIndex(visualEndColumn);\n      var notTrimmedColumnIndexes = columnIndexMapper.getNotTrimmedIndexes();\n      var physicalColumnIndexes = [];\n\n      if (visualStartColumn !== visualEndColumn) {\n        var visualColumnsInRange = visualEndColumn - visualStartColumn + 1;\n        var renderedColumnsInRange = renderableEndColumn - renderableStartColumn + 1; // Collect not trimmed columns if there are some hidden columns in the selection range.\n\n        if (visualColumnsInRange > renderedColumnsInRange) {\n          var physicalIndexesInRange = notTrimmedColumnIndexes.slice(visualStartColumn, visualEndColumn + 1);\n          physicalColumnIndexes.push.apply(physicalColumnIndexes, _toConsumableArray(physicalIndexesInRange.filter(function (physicalIndex) {\n            return hiddenPhysicalColumns.includes(physicalIndex);\n          })));\n        } // Handled column is the first rendered index and there are some visual indexes before it.\n\n      } else if (renderableStartColumn === 0 && renderableStartColumn < visualStartColumn) {\n        // not trimmed indexes -> array of mappings from visual (native array's index) to physical indexes (value).\n        physicalColumnIndexes.push.apply(physicalColumnIndexes, _toConsumableArray(notTrimmedColumnIndexes.slice(0, visualStartColumn))); // physical indexes\n        // When all columns are hidden and the context menu is triggered using top-left corner.\n      } else if (renderableStartColumn === null) {\n        // Show all hidden columns.\n        physicalColumnIndexes.push.apply(physicalColumnIndexes, _toConsumableArray(notTrimmedColumnIndexes.slice(0, this.countCols())));\n      } else {\n        var lastVisualIndex = this.countCols() - 1;\n        var lastRenderableIndex = columnIndexMapper.getRenderableFromVisualIndex(columnIndexMapper.getNearestNotHiddenIndex(lastVisualIndex, -1)); // Handled column is the last rendered index and there are some visual indexes after it.\n\n        if (renderableEndColumn === lastRenderableIndex && lastVisualIndex > visualEndColumn) {\n          physicalColumnIndexes.push.apply(physicalColumnIndexes, _toConsumableArray(notTrimmedColumnIndexes.slice(visualEndColumn + 1)));\n        }\n      }\n\n      arrayEach(physicalColumnIndexes, function (physicalColumnIndex) {\n        columns.push(_this.toVisualColumn(physicalColumnIndex));\n      });\n      return columns.length === 0;\n    }\n  };\n}","map":{"version":3,"names":["_toConsumableArray","arr","_arrayWithoutHoles","_iterableToArray","_unsupportedIterableToArray","_nonIterableSpread","TypeError","o","minLen","_arrayLikeToArray","n","Object","prototype","toString","call","slice","constructor","name","Array","from","test","iter","Symbol","iterator","isArray","len","length","i","arr2","arrayEach","arrayMap","C","showColumnItem","hiddenColumnsPlugin","columns","key","pluralForm","getTranslatedPhrase","CONTEXTMENU_ITEMS_SHOW_COLUMN","callback","_this$columnIndexMapp","_this$columnIndexMapp2","startVisualColumn","endVisualColumn","columnIndexMapper","getNearestNotHiddenIndex","countCols","showColumns","render","view","adjustElementsSize","allColumnsSelected","selectColumns","disabled","hidden","_this","hiddenPhysicalColumns","getHiddenColumns","visualColumnIndex","toPhysicalColumn","selection","isSelectedByColumnHeader","isSelectedByCorner","selectedRangeLast","getSelectedRangeLast","visualStartColumn","getTopStartCorner","col","visualEndColumn","getBottomEndCorner","renderableStartColumn","getRenderableFromVisualIndex","renderableEndColumn","notTrimmedColumnIndexes","getNotTrimmedIndexes","physicalColumnIndexes","visualColumnsInRange","renderedColumnsInRange","physicalIndexesInRange","push","apply","filter","physicalIndex","includes","lastVisualIndex","lastRenderableIndex","physicalColumnIndex","toVisualColumn"],"sources":["/home/ubuntu/community/vue-web/node_modules/handsontable/plugins/hiddenColumns/contextMenuItem/showColumn.mjs"],"sourcesContent":["function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\nimport \"core-js/modules/es.array.slice.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.string.includes.js\";\nimport \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.symbol.description.js\";\nimport \"core-js/modules/es.symbol.iterator.js\";\nimport \"core-js/modules/es.array.iterator.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport \"core-js/modules/es.array.from.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport { arrayEach, arrayMap } from \"../../../helpers/array.mjs\";\nimport * as C from \"../../../i18n/constants.mjs\"; /**\n                                                   * @param {HiddenColumns} hiddenColumnsPlugin The plugin instance.\n                                                   * @returns {object}\n                                                   */\nexport default function showColumnItem(hiddenColumnsPlugin) {\n  var columns = [];\n  return {\n    key: 'hidden_columns_show',\n    name: function name() {\n      var pluralForm = columns.length > 1 ? 1 : 0;\n      return this.getTranslatedPhrase(C.CONTEXTMENU_ITEMS_SHOW_COLUMN, pluralForm);\n    },\n    callback: function callback() {\n      var _this$columnIndexMapp, _this$columnIndexMapp2;\n      if (columns.length === 0) {\n        return;\n      }\n      var startVisualColumn = columns[0];\n      var endVisualColumn = columns[columns.length - 1];\n\n      // Add to the selection one more visual column on the left.\n      startVisualColumn = (_this$columnIndexMapp = this.columnIndexMapper.getNearestNotHiddenIndex(startVisualColumn - 1, -1)) !== null && _this$columnIndexMapp !== void 0 ? _this$columnIndexMapp : 0;\n      // Add to the selection one more visual column on the right.\n      endVisualColumn = (_this$columnIndexMapp2 = this.columnIndexMapper.getNearestNotHiddenIndex(endVisualColumn + 1, 1)) !== null && _this$columnIndexMapp2 !== void 0 ? _this$columnIndexMapp2 : this.countCols() - 1;\n      hiddenColumnsPlugin.showColumns(columns);\n\n      // We render columns at first. It was needed for getting fixed columns.\n      // Please take a look at #6864 for broader description.\n      this.render();\n      this.view.adjustElementsSize(true);\n      var allColumnsSelected = endVisualColumn - startVisualColumn + 1 === this.countCols();\n\n      // When all headers needs to be selected then do nothing. The header selection is\n      // automatically handled by corner click.\n      if (!allColumnsSelected) {\n        this.selectColumns(startVisualColumn, endVisualColumn);\n      }\n    },\n    disabled: false,\n    hidden: function hidden() {\n      var _this = this;\n      var hiddenPhysicalColumns = arrayMap(hiddenColumnsPlugin.getHiddenColumns(), function (visualColumnIndex) {\n        return _this.toPhysicalColumn(visualColumnIndex);\n      });\n      if (!(this.selection.isSelectedByColumnHeader() || this.selection.isSelectedByCorner()) || hiddenPhysicalColumns.length < 1) {\n        return true;\n      }\n      columns.length = 0;\n      var selectedRangeLast = this.getSelectedRangeLast();\n      var visualStartColumn = selectedRangeLast.getTopStartCorner().col;\n      var visualEndColumn = selectedRangeLast.getBottomEndCorner().col;\n      var columnIndexMapper = this.columnIndexMapper;\n      var renderableStartColumn = columnIndexMapper.getRenderableFromVisualIndex(visualStartColumn);\n      var renderableEndColumn = columnIndexMapper.getRenderableFromVisualIndex(visualEndColumn);\n      var notTrimmedColumnIndexes = columnIndexMapper.getNotTrimmedIndexes();\n      var physicalColumnIndexes = [];\n      if (visualStartColumn !== visualEndColumn) {\n        var visualColumnsInRange = visualEndColumn - visualStartColumn + 1;\n        var renderedColumnsInRange = renderableEndColumn - renderableStartColumn + 1;\n\n        // Collect not trimmed columns if there are some hidden columns in the selection range.\n        if (visualColumnsInRange > renderedColumnsInRange) {\n          var physicalIndexesInRange = notTrimmedColumnIndexes.slice(visualStartColumn, visualEndColumn + 1);\n          physicalColumnIndexes.push.apply(physicalColumnIndexes, _toConsumableArray(physicalIndexesInRange.filter(function (physicalIndex) {\n            return hiddenPhysicalColumns.includes(physicalIndex);\n          })));\n        }\n\n        // Handled column is the first rendered index and there are some visual indexes before it.\n      } else if (renderableStartColumn === 0 && renderableStartColumn < visualStartColumn) {\n        // not trimmed indexes -> array of mappings from visual (native array's index) to physical indexes (value).\n        physicalColumnIndexes.push.apply(physicalColumnIndexes, _toConsumableArray(notTrimmedColumnIndexes.slice(0, visualStartColumn))); // physical indexes\n\n        // When all columns are hidden and the context menu is triggered using top-left corner.\n      } else if (renderableStartColumn === null) {\n        // Show all hidden columns.\n        physicalColumnIndexes.push.apply(physicalColumnIndexes, _toConsumableArray(notTrimmedColumnIndexes.slice(0, this.countCols())));\n      } else {\n        var lastVisualIndex = this.countCols() - 1;\n        var lastRenderableIndex = columnIndexMapper.getRenderableFromVisualIndex(columnIndexMapper.getNearestNotHiddenIndex(lastVisualIndex, -1));\n\n        // Handled column is the last rendered index and there are some visual indexes after it.\n        if (renderableEndColumn === lastRenderableIndex && lastVisualIndex > visualEndColumn) {\n          physicalColumnIndexes.push.apply(physicalColumnIndexes, _toConsumableArray(notTrimmedColumnIndexes.slice(visualEndColumn + 1)));\n        }\n      }\n      arrayEach(physicalColumnIndexes, function (physicalColumnIndex) {\n        columns.push(_this.toVisualColumn(physicalColumnIndex));\n      });\n      return columns.length === 0;\n    }\n  };\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}