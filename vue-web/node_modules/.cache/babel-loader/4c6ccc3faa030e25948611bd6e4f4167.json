{"ast":null,"code":"import { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, createTextVNode as _createTextVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-64e137e7\"), n = n(), _popScopeId(), n);\n\nconst _hoisted_1 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"sign-up-header\",\n  style: {\n    \"background-color\": \"#3EA1EC\"\n  }\n}, [/*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"content\"\n}, [/*#__PURE__*/_createElementVNode(\"h2\", {\n  class: \"mb-5\",\n  style: {\n    \"font-size\": \"42px\"\n  }\n}, \"区块链投票\"), /*#__PURE__*/_createElementVNode(\"p\", {\n  class: \"text-lg\"\n}, \"基于区块链的在线安全电子投票系统.\")])], -1));\n\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h5\", {\n  class: \"font-semibold text-center\"\n}, \"账户登录\", -1));\n\nconst _hoisted_3 = /*#__PURE__*/_createTextVNode(\"记住密码\");\n\nconst _hoisted_4 = /*#__PURE__*/_createTextVNode(\"注册账户\");\n\nconst _hoisted_5 = /*#__PURE__*/_createTextVNode(\"登录\");\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_user_outlined = _resolveComponent(\"user-outlined\");\n\n  const _component_info_circle_outlined = _resolveComponent(\"info-circle-outlined\");\n\n  const _component_a_tooltip = _resolveComponent(\"a-tooltip\");\n\n  const _component_a_input = _resolveComponent(\"a-input\");\n\n  const _component_a_form_item = _resolveComponent(\"a-form-item\");\n\n  const _component_a_input_password = _resolveComponent(\"a-input-password\");\n\n  const _component_a_checkbox = _resolveComponent(\"a-checkbox\");\n\n  const _component_router_link = _resolveComponent(\"router-link\");\n\n  const _component_a_button = _resolveComponent(\"a-button\");\n\n  const _component_a_form = _resolveComponent(\"a-form\");\n\n  const _component_a_card = _resolveComponent(\"a-card\");\n\n  return _openBlock(), _createElementBlock(\"div\", null, [_hoisted_1, _createVNode(_component_a_card, {\n    bordered: false,\n    class: \"card-signup header-solid h-full\",\n    bodyStyle: {\n      paddingTop: 0\n    }\n  }, {\n    title: _withCtx(() => [_hoisted_2]),\n    default: _withCtx(() => [_createVNode(_component_a_form, {\n      id: \"components-form-demo-normal-login\",\n      rules: _ctx.rules,\n      model: _ctx.formState,\n      name: \"basic\",\n      class: \"login-form\",\n      autocomplete: \"off\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_a_form_item, {\n        \"has-feedback\": \"\",\n        name: \"username\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_a_input, {\n          type: \"text\",\n          placeholder: \"账户\",\n          value: _ctx.formState.username,\n          \"onUpdate:value\": _cache[0] || (_cache[0] = $event => _ctx.formState.username = $event),\n          autocomplete: \"off\"\n        }, {\n          prefix: _withCtx(() => [_createVNode(_component_user_outlined, {\n            style: {\n              \"color\": \"rgba(0, 0, 0, 0.45)\"\n            },\n            type: \"user\"\n          })]),\n          suffix: _withCtx(() => [_createVNode(_component_a_tooltip, {\n            title: \"这是必要信息\"\n          }, {\n            default: _withCtx(() => [_createVNode(_component_info_circle_outlined, {\n              style: {\n                \"color\": \"rgba(0, 0, 0, 0.45)\"\n              }\n            })]),\n            _: 1\n          })]),\n          _: 1\n        }, 8, [\"value\"])]),\n        _: 1\n      }), _createVNode(_component_a_form_item, {\n        \"has-feedback\": \"\",\n        name: \"password\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_a_input_password, {\n          type: \"text\",\n          placeholder: \"密码\",\n          value: _ctx.formState.password,\n          \"onUpdate:value\": _cache[1] || (_cache[1] = $event => _ctx.formState.password = $event),\n          autocomplete: \"off\"\n        }, null, 8, [\"value\"])]),\n        _: 1\n      }), _createVNode(_component_a_form_item, null, {\n        default: _withCtx(() => [_createVNode(_component_a_checkbox, {\n          style: {\n            \"color\": \"rgba(0, 0, 0, 0.45)\"\n          },\n          checked: _ctx.formState.remember,\n          \"onUpdate:checked\": _cache[2] || (_cache[2] = $event => _ctx.formState.remember = $event)\n        }, {\n          default: _withCtx(() => [_hoisted_3]),\n          _: 1\n        }, 8, [\"checked\"]), _createVNode(_component_router_link, {\n          class: \"register\",\n          to: \"/register\",\n          style: {\n            \"float\": \"right\"\n          }\n        }, {\n          default: _withCtx(() => [_hoisted_4]),\n          _: 1\n        })]),\n        _: 1\n      }), _createVNode(_component_a_form_item, null, {\n        default: _withCtx(() => [_createVNode(_component_a_button, {\n          style: {\n            \"width\": \"100%\",\n            \"font-size\": \"15px\"\n          },\n          type: \"primary\",\n          \"html-type\": \"submit\",\n          onClick: _ctx.login\n        }, {\n          default: _withCtx(() => [_hoisted_5]),\n          _: 1\n        }, 8, [\"onClick\"])]),\n        _: 1\n      })]),\n      _: 1\n    }, 8, [\"rules\", \"model\"])]),\n    _: 1\n  })]);\n}","map":{"version":3,"mappings":"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","names":["_createElementVNode","class","style","_createElementBlock","_hoisted_1","_createVNode","_component_a_card","bordered","bodyStyle","paddingTop","title","_hoisted_2","_component_a_form","id","rules","_ctx","model","name","autocomplete","_component_a_form_item","_component_a_input","type","placeholder","value","username","$event","prefix","_component_user_outlined","suffix","_component_a_tooltip","_component_info_circle_outlined","_component_a_input_password","password","_component_a_checkbox","checked","remember","_component_router_link","to","_component_a_button","onClick"],"sourceRoot":"","sources":["/home/ubuntu/voting/vue-web/src/views/user/LoginUser.vue"],"sourcesContent":["<template>\r\n\r\n  <div>\r\n\r\n    <!--\t\t Sign Up Image And Headings-->\r\n    <div class=\"sign-up-header\" style=\"background-color: #3EA1EC\">\r\n      <div class=\"content\">\r\n        <h2 class=\"mb-5\" style=\"font-size: 42px\">区块链投票</h2>\r\n        <p class=\"text-lg\">基于区块链的在线安全电子投票系统.</p>\r\n      </div>\r\n    </div>\r\n    <!--\t\t / Sign Up Image And Headings-->\r\n\r\n    <!-- Sign Up Form -->\r\n    <a-card :bordered=\"false\" class=\"card-signup header-solid h-full\" :bodyStyle=\"{paddingTop: 0}\">\r\n      <template #title>\r\n        <h5 class=\"font-semibold text-center\">账户登录</h5>\r\n      </template>\r\n\r\n      <a-form id=\"components-form-demo-normal-login\" :rules=\"rules\" :model=\"formState\" name=\"basic\" class=\"login-form\"\r\n        autocomplete=\"off\">\r\n\r\n        <a-form-item has-feedback name=\"username\">\r\n          <a-input type=\"text\" placeholder=\"账户\" v-model:value=\"formState.username\" autocomplete=\"off\">\r\n            <template #prefix>\r\n              <user-outlined style=\"color: rgba(0, 0, 0, 0.45)\" type=\"user\" />\r\n            </template>\r\n            <template #suffix>\r\n              <a-tooltip title=\"这是必要信息\">\r\n                <info-circle-outlined style=\"color: rgba(0, 0, 0, 0.45)\" />\r\n              </a-tooltip>\r\n            </template>\r\n          </a-input>\r\n        </a-form-item>\r\n\r\n        <a-form-item has-feedback name=\"password\">\r\n          <a-input-password type=\"text\" placeholder=\"密码\" v-model:value=\"formState.password\" autocomplete=\"off\" />\r\n        </a-form-item>\r\n\r\n        <a-form-item>\r\n          <a-checkbox style=\"color: rgba(0, 0, 0, 0.45)\" v-model:checked=\"formState.remember\">记住密码</a-checkbox>\r\n          <router-link class=\"register\" to='/register' style=\"float: right;\">注册账户</router-link>\r\n        </a-form-item>\r\n\r\n        <a-form-item>\r\n\r\n          <a-button style=\"width:100%;font-size: 15px;\" type=\"primary\" html-type=\"submit\" @click=\"login\">登录</a-button>\r\n        </a-form-item>\r\n      </a-form>\r\n\r\n      <!-- <p class=\"font-semibold text-muted text-center\">已有账户 <router-link to=\"/login\" class=\"font-bold text-dark\">登录</router-link></p> -->\r\n    </a-card>\r\n\r\n  </div>\r\n</template>\r\n<script>\r\n\r\nimport { message } from 'ant-design-vue';\r\nimport md5 from 'js-md5';\r\nimport { defineComponent, reactive } from 'vue';\r\nexport default defineComponent({\r\n  setup() {\r\n    const formState = reactive({\r\n      username: '',\r\n      password: '',\r\n      remember: false\r\n    });\r\n\r\n    let validateName = async (_rule, value) => {\r\n      if (value === '') {\r\n        return Promise.reject('请输入正确格式账户名');\r\n      }\r\n      else if (value.length != value.split(\" \").join(\"\").length) {\r\n        return Promise.reject('输入包含空格');\r\n      }\r\n      else {\r\n        return Promise.resolve();\r\n      }\r\n    };\r\n\r\n    let validatePass = async (_rule, value) => {\r\n      if (value === '') {\r\n        return Promise.reject('请输入初始密码');\r\n      }\r\n      else if (value.length != value.split(\" \").join(\"\").length) {\r\n        return Promise.reject('输入包含空格');\r\n      }\r\n      else {\r\n        return Promise.resolve();\r\n      }\r\n    };\r\n\r\n    const rules = {\r\n      password: [{\r\n        required: true,\r\n        validator: validatePass,\r\n        trigger: 'change',\r\n      }],\r\n      username: [{\r\n        validator: validateName,\r\n        trigger: 'change',\r\n      }],\r\n    };\r\n\r\n    const onFinish = values => {\r\n      console.log('Success:', values);\r\n    };\r\n\r\n    const onFinishFailed = errorInfo => {\r\n      console.log('Failed:', errorInfo);\r\n    };\r\n\r\n    return {\r\n      rules,\r\n      formState,\r\n      onFinish,\r\n      onFinishFailed,\r\n    };\r\n  },\r\n  mounted() {\r\n    let Base64 = require('js-base64').Base64\r\n    let username = localStorage.getItem(\"user\");\r\n    if (username) {\r\n      this.formState.username = localStorage.getItem(\"user\");\r\n      this.formState.password = Base64.decode(localStorage.getItem(\"password\"));// base64解密\r\n      this.formState.remember = true;\r\n    }\r\n  },\r\n  created() {\r\n    console.log(this.$route.params);\r\n  },\r\n\r\n  methods: {\r\n    // str2hex(str) {\r\n    //   if (str === \"\") {\r\n    //     return \"\";\r\n    //   }\r\n    //   else {\r\n    //     var arr = [];\r\n    //     //arr.push(\"0x\");\r\n    //     for (var i = 0; i < str.length; i++) {\r\n    //       arr.push(str.charCodeAt(i).toString(16));\r\n    //     }\r\n    //     return arr.join('');\r\n    //   }\r\n    // },\r\n\r\n    login() {\r\n      // console.log(\"dddddd\",this.str2hex(\"ddd\"))\r\n      if (this.formState.username === '' || this.formState.password == '' || this.formState.username.length !== this.formState.username.split(\" \").join(\"\").length\r\n        || this.formState.password.length !== this.formState.password.split(\" \").join(\"\").length) {\r\n        message.destroy()\r\n        message.error('登录错误，请检查输入格式', 3)\r\n      }\r\n      else {\r\n        var pass_word = md5(this.formState.password)\r\n        this.$http.post('http://192.168.5.42:8888/login', {\r\n          name: this.formState.username,\r\n          password: pass_word\r\n        }).then((response) => {\r\n          if (response.data.result === 'success') {\r\n            sessionStorage.setItem('user', this.formState.username)\r\n            sessionStorage.setItem('pass', pass_word)\r\n            sessionStorage.setItem('token', response.data.token)\r\n            sessionStorage.setItem('uid', response.data.uid)\r\n            // sessionStorage.setItem('uid', 'aa')\r\n\r\n            if (this.formState.remember) {\r\n              let Base64 = require('js-base64').Base64\r\n              let password = Base64.encode(this.formState.password); // base64加密\r\n              localStorage.setItem(\"user\", this.formState.username);\r\n              localStorage.setItem(\"password\", password);\r\n            }\r\n            else {\r\n              localStorage.removeItem(\"user\");\r\n              localStorage.removeItem(\"password\");\r\n            }\r\n\r\n            message.destroy()\r\n            message.success('登录成功', 3)\r\n            this.$router.push('/overview')\r\n          }\r\n\r\n          if (response.data.result === 'none') {\r\n            message.destroy()\r\n            message.warning('用户名不存在，请注册', 3)\r\n          }\r\n          if (response.data.result === 'fail') {\r\n            message.destroy()\r\n            message.error('登录失败，密码错误', 3)\r\n          }\r\n          if (response.data.result === 'error') {\r\n            message.destroy()\r\n            message.warning('登录出错', 3)\r\n          }\r\n\r\n        }).catch(function (error) { // 请求失败处理\r\n          console.log(error)\r\n        })\r\n      }\r\n    },\r\n  }\r\n\r\n});\r\n</script>\r\n<style lang=\"less\" scoped>\r\n.user-layout-login {\r\n  label {\r\n    font-size: 14px;\r\n  }\r\n\r\n  .getCaptcha {\r\n    display: block;\r\n    width: 100%;\r\n    height: 40px;\r\n  }\r\n\r\n  .forge-password {\r\n    font-size: 14px;\r\n  }\r\n\r\n  button.login-button {\r\n    padding: 0 15px;\r\n    font-size: 16px;\r\n    height: 40px;\r\n    width: 100%;\r\n  }\r\n\r\n  .user-login-other {\r\n    text-align: left;\r\n    margin-top: 24px;\r\n    line-height: 22px;\r\n\r\n    .item-icon {\r\n      font-size: 24px;\r\n      color: rgba(0, 0, 0, 0.2);\r\n      margin-left: 16px;\r\n      vertical-align: middle;\r\n      cursor: pointer;\r\n      transition: color 0.3s;\r\n\r\n      &:hover {\r\n        color: #1890ff;\r\n      }\r\n    }\r\n\r\n    .register {\r\n      float: right;\r\n    }\r\n  }\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module"}