{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, createTextVNode as _createTextVNode, openBlock as _openBlock, createBlock as _createBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-16bbc3ec\"), n = n(), _popScopeId(), n);\n\nconst _hoisted_1 = /*#__PURE__*/_createTextVNode(\"自动登录\");\n\nconst _hoisted_2 = /*#__PURE__*/_createTextVNode(\"注册账户\");\n\nconst _hoisted_3 = /*#__PURE__*/_createTextVNode(\"登录\");\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_user_outlined = _resolveComponent(\"user-outlined\");\n\n  const _component_info_circle_outlined = _resolveComponent(\"info-circle-outlined\");\n\n  const _component_a_tooltip = _resolveComponent(\"a-tooltip\");\n\n  const _component_a_input = _resolveComponent(\"a-input\");\n\n  const _component_a_form_item = _resolveComponent(\"a-form-item\");\n\n  const _component_a_input_password = _resolveComponent(\"a-input-password\");\n\n  const _component_a_tab_pane = _resolveComponent(\"a-tab-pane\");\n\n  const _component_a_tabs = _resolveComponent(\"a-tabs\");\n\n  const _component_a_checkbox = _resolveComponent(\"a-checkbox\");\n\n  const _component_router_link = _resolveComponent(\"router-link\");\n\n  const _component_a_button = _resolveComponent(\"a-button\");\n\n  const _component_a_form = _resolveComponent(\"a-form\");\n\n  return _openBlock(), _createBlock(_component_a_form, {\n    rules: _ctx.rules,\n    model: _ctx.formState,\n    name: \"basic\",\n    class: \"user-layout-login\",\n    autocomplete: \"off\"\n  }, {\n    default: _withCtx(() => [_createVNode(_component_a_tabs, {\n      tabBarStyle: {\n        textAlign: 'center',\n        borderBottom: 'unset'\n      },\n      centered: \"\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_a_tab_pane, {\n        key: \"tab1\",\n        tab: \"账户密码登录\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_a_form_item, {\n          \"has-feedback\": \"\",\n          name: \"username\"\n        }, {\n          default: _withCtx(() => [_createVNode(_component_a_input, {\n            size: \"large\",\n            type: \"text\",\n            placeholder: \"账户\",\n            value: _ctx.formState.username,\n            \"onUpdate:value\": _cache[0] || (_cache[0] = $event => _ctx.formState.username = $event),\n            autocomplete: \"off\"\n          }, {\n            prefix: _withCtx(() => [_createVNode(_component_user_outlined, {\n              style: {\n                \"color\": \"rgba(0, 0, 0, 0.45)\"\n              },\n              type: \"user\"\n            })]),\n            suffix: _withCtx(() => [_createVNode(_component_a_tooltip, {\n              title: \"这是必要信息\"\n            }, {\n              default: _withCtx(() => [_createVNode(_component_info_circle_outlined, {\n                style: {\n                  \"color\": \"rgba(0, 0, 0, 0.45)\"\n                }\n              })]),\n              _: 1\n              /* STABLE */\n\n            })]),\n            _: 1\n            /* STABLE */\n\n          }, 8\n          /* PROPS */\n          , [\"value\"])]),\n          _: 1\n          /* STABLE */\n\n        }), _createVNode(_component_a_form_item, {\n          \"has-feedback\": \"\",\n          name: \"password\"\n        }, {\n          default: _withCtx(() => [_createVNode(_component_a_input_password, {\n            size: \"large\",\n            type: \"text\",\n            placeholder: \"密码\",\n            value: _ctx.formState.password,\n            \"onUpdate:value\": _cache[1] || (_cache[1] = $event => _ctx.formState.password = $event),\n            autocomplete: \"off\"\n          }, null, 8\n          /* PROPS */\n          , [\"value\"])]),\n          _: 1\n          /* STABLE */\n\n        })]),\n        _: 1\n        /* STABLE */\n\n      })]),\n      _: 1\n      /* STABLE */\n\n    }), _createVNode(_component_a_form_item, null, {\n      default: _withCtx(() => [_createVNode(_component_a_checkbox, {\n        style: {\n          \"color\": \"rgba(0, 0, 0, 0.45)\"\n        },\n        checked: _ctx.formState.remember,\n        \"onUpdate:checked\": _cache[2] || (_cache[2] = $event => _ctx.formState.remember = $event)\n      }, {\n        default: _withCtx(() => [_hoisted_1]),\n        _: 1\n        /* STABLE */\n\n      }, 8\n      /* PROPS */\n      , [\"checked\"]), _createVNode(_component_router_link, {\n        class: \"register\",\n        to: \"/register\",\n        style: {\n          \"float\": \"right\"\n        }\n      }, {\n        default: _withCtx(() => [_hoisted_2]),\n        _: 1\n        /* STABLE */\n\n      })]),\n      _: 1\n      /* STABLE */\n\n    }), _createVNode(_component_a_form_item, {\n      style: {\n        \"margin-top\": \"24px\"\n      }\n    }, {\n      default: _withCtx(() => [_createVNode(_component_a_button, {\n        size: \"large\",\n        type: \"primary\",\n        class: \"login-button\",\n        \"html-type\": \"submit\",\n        onClick: _ctx.login\n      }, {\n        default: _withCtx(() => [_hoisted_3]),\n        _: 1\n        /* STABLE */\n\n      }, 8\n      /* PROPS */\n      , [\"onClick\"])]),\n      _: 1\n      /* STABLE */\n\n    })]),\n    _: 1\n    /* STABLE */\n\n  }, 8\n  /* PROPS */\n  , [\"rules\", \"model\"]);\n}","map":{"version":3,"mappings":"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","names":["_createBlock","_component_a_form","rules","_ctx","model","name","class","autocomplete","_createVNode","_component_a_tabs","tabBarStyle","textAlign","borderBottom","centered","_component_a_tab_pane","key","tab","_component_a_form_item","_component_a_input","size","type","placeholder","value","username","$event","prefix","_component_user_outlined","style","suffix","_component_a_tooltip","title","_component_info_circle_outlined","_component_a_input_password","password","_component_a_checkbox","checked","remember","_component_router_link","to","_component_a_button","onClick"],"sourceRoot":"","sources":["/home/ubuntu/voting/vue-web/src/views/user/LoginUser.vue"],"sourcesContent":["<template>\r\n  <a-form\r\n    :rules=\"rules\"\r\n    :model=\"formState\"\r\n    name=\"basic\"\r\n    class=\"user-layout-login\"\r\n    autocomplete=\"off\"\r\n \r\n  >\r\n   <a-tabs\r\n          :tabBarStyle=\"{ textAlign: 'center', borderBottom: 'unset' }\" centered>\r\n        <a-tab-pane key=\"tab1\" tab=\"账户密码登录\" >\r\n            <a-form-item\r\n            has-feedback\r\n      name=\"username\"\r\n    >\r\n      <a-input size=\"large\"\r\n                type=\"text\"\r\n                placeholder=\"账户\" v-model:value=\"formState.username\" autocomplete=\"off\">\r\n      <template #prefix><user-outlined style=\"color: rgba(0, 0, 0, 0.45)\" type=\"user\" /></template>\r\n              <template #suffix><a-tooltip title=\"这是必要信息\">\r\n                <info-circle-outlined style=\"color: rgba(0, 0, 0, 0.45)\" />\r\n              </a-tooltip></template></a-input>\r\n    </a-form-item>\r\n\r\n    <a-form-item\r\n    has-feedback\r\n      name=\"password\"\r\n    >\r\n      <a-input-password size=\"large\"\r\n                type=\"text\"\r\n                placeholder=\"密码\" v-model:value=\"formState.password\" autocomplete=\"off\"/>\r\n    </a-form-item>\r\n        </a-tab-pane>\r\n      </a-tabs>\r\n     <a-form-item>\r\n        <a-checkbox style=\"color: rgba(0, 0, 0, 0.45)\" v-model:checked=\"formState.remember\">自动登录</a-checkbox>\r\n        <router-link class=\"register\" to='/register' style=\"float: right;\">注册账户</router-link>\r\n      </a-form-item>\r\n\r\n    <a-form-item style=\"margin-top:24px\">\r\n        <a-button\r\n            size=\"large\"\r\n            type=\"primary\"\r\n            class=\"login-button\"\r\n            html-type=\"submit\"\r\n            @click=\"login\"\r\n        >登录</a-button>\r\n      </a-form-item>\r\n  </a-form>\r\n</template>\r\n<script>\r\n\r\nimport { message } from 'ant-design-vue';\r\nimport { defineComponent, reactive} from 'vue';\r\nexport default defineComponent({\r\n  setup() {\r\n    const formState = reactive({\r\n      username: '',\r\n      password: '',\r\n      remember: false\r\n    });\r\n\r\n    let validateName = async (_rule, value) => {\r\n      if (value ==='') {\r\n        return Promise.reject('请输入正确格式账户名');\r\n      } \r\n      else if(value.length != value.split(\" \").join(\"\").length){\r\n        return Promise.reject('输入包含空格');\r\n      }\r\n      else {\r\n        return Promise.resolve();\r\n      }\r\n    };\r\n\r\n    let validatePass = async (_rule, value) => {\r\n      if (value === '') {\r\n        return Promise.reject('请输入初始密码');\r\n      }\r\n      else if(value.length != value.split(\" \").join(\"\").length){\r\n        return Promise.reject('输入包含空格');\r\n      } \r\n      else {\r\n        return Promise.resolve();\r\n      }\r\n    };\r\n\r\n     const rules = {\r\n      password: [{\r\n        required: true,\r\n        validator: validatePass,\r\n        trigger: 'change',\r\n      }],\r\n      username: [{\r\n        validator: validateName,\r\n        trigger: 'change',\r\n      }],\r\n    };\r\n\r\n    const onFinish = values => {\r\n      console.log('Success:', values);\r\n    };\r\n\r\n    const onFinishFailed = errorInfo => {\r\n      console.log('Failed:', errorInfo);\r\n    };\r\n\r\n    return {\r\n      rules,\r\n      formState,\r\n      onFinish,\r\n      onFinishFailed,\r\n    };\r\n  },\r\n  //  mounted() {\r\n  //   if(this.formState.remember){\r\n  //     if (sessionStorage.getItem('user')) {\r\n  //     this.formState.username = sessionStorage.getItem('user')\r\n  //     this.formState.password = sessionStorage.getItem('pass')\r\n  //   }\r\n  //   }\r\n  // },\r\n  watch:{\r\n    'formState.remember'(newVal){\r\n      if(newVal){\r\n        this.check()\r\n        console.log(newVal)\r\n      }\r\n    }\r\n  },\r\n\r\n  methods:{\r\n    login() {\r\n      // console.log(sessionStorage.getItem('user'))s\r\n      // console.log(this.formState.remember)\r\n      if(this.formState.username ==='' || this.formState.password ==''||this.formState.username.length !== this.formState.username.split(\" \").join(\"\").length\r\n      || this.formState.password.length !== this.formState.password.split(\" \").join(\"\").length){\r\n        message.destroy()\r\n        message.error('登录错误，请检查输入格式', 3)\r\n      }\r\n      else{\r\n        this.$http.post('http://192.168.5.42:8888/login', {\r\n        name:this.formState.username,\r\n        password:this.formState.password\r\n      }).then((response) => {\r\n        if(response.data.result === 'success'){\r\n          sessionStorage.setItem('user',this.formState.username)\r\n          sessionStorage.setItem('pass',this.formState.password)\r\n          message.destroy()\r\n          message.success('登录成功', 3)\r\n          this.$router.push('/avec')\r\n        }\r\n        if(response.data.result === 'none'){\r\n          message.destroy()\r\n          message.warning('用户名不存在，请注册', 3)\r\n        }\r\n        if(response.data.result === 'fail'){\r\n          message.destroy()\r\n          message.error('登录失败，密码错误', 3)\r\n        }\r\n        if(response.data.result === 'error'){\r\n          message.destroy()\r\n          message.warning('登录出错', 3)\r\n        }\r\n      }).catch(function (error) { // 请求失败处理\r\n        console.log(error)\r\n      }) \r\n      }\r\n    },\r\n    async check(){\r\n      if(sessionStorage.getItem('user')){\r\n        this.formState.username = sessionStorage.getItem('user')\r\n        this.formState.password = sessionStorage.getItem('pass')\r\n      }\r\n      // this.login()\r\n    }\r\n  }\r\n\r\n});\r\n</script>\r\n<style lang=\"less\" scoped>\r\n.user-layout-login {\r\n  label {\r\n    font-size: 14px;\r\n  }\r\n\r\n  .getCaptcha {\r\n    display: block;\r\n    width: 100%;\r\n    height: 40px;\r\n  }\r\n\r\n  .forge-password {\r\n    font-size: 14px;\r\n  }\r\n\r\n  button.login-button {\r\n    padding: 0 15px;\r\n    font-size: 16px;\r\n    height: 40px;\r\n    width: 100%;\r\n  }\r\n\r\n  .user-login-other {\r\n    text-align: left;\r\n    margin-top: 24px;\r\n    line-height: 22px;\r\n\r\n    .item-icon {\r\n      font-size: 24px;\r\n      color: rgba(0, 0, 0, 0.2);\r\n      margin-left: 16px;\r\n      vertical-align: middle;\r\n      cursor: pointer;\r\n      transition: color 0.3s;\r\n\r\n      &:hover {\r\n        color: #1890ff;\r\n      }\r\n    }\r\n\r\n    .register {\r\n      float: right;\r\n    }\r\n  }\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module"}