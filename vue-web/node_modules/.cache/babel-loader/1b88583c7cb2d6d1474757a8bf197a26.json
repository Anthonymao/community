{"ast":null,"code":"import \"core-js/modules/es.error.cause.js\";\n\nfunction _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, _typeof(obj);\n}\n\nimport \"core-js/modules/es.object.set-prototype-of.js\";\nimport \"core-js/modules/es.object.get-prototype-of.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.reflect.construct.js\";\nimport \"core-js/modules/es.reflect.get.js\";\nimport \"core-js/modules/es.object.get-own-property-descriptor.js\";\nimport \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.symbol.description.js\";\nimport \"core-js/modules/es.symbol.iterator.js\";\nimport \"core-js/modules/es.array.iterator.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}\n\nfunction _get() {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get.bind();\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = _superPropBase(target, property);\n\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n\n      if (desc.get) {\n        return desc.get.call(arguments.length < 3 ? target : receiver);\n      }\n\n      return desc.value;\n    };\n  }\n\n  return _get.apply(this, arguments);\n}\n\nfunction _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = _getPrototypeOf(object);\n    if (object === null) break;\n  }\n\n  return object;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  Object.defineProperty(subClass, \"prototype\", {\n    writable: false\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  } else if (call !== void 0) {\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nimport { Selection } from \"./../../3rdparty/walkontable/src/index.mjs\";\n\nvar VisualSelection = /*#__PURE__*/function (_Selection) {\n  _inherits(VisualSelection, _Selection);\n\n  var _super = _createSuper(VisualSelection);\n  /**\n   * Range of selection visually. Visual representation may have representation in a rendered selection.\n   *\n   * @type {null|CellRange}\n   */\n\n\n  function VisualSelection(settings, visualCellRange) {\n    var _this;\n\n    _classCallCheck(this, VisualSelection);\n\n    _this = _super.call(this, settings, null);\n\n    _defineProperty(_assertThisInitialized(_this), \"visualCellRange\", null);\n\n    _this.visualCellRange = visualCellRange || null;\n\n    _this.commit();\n\n    return _this;\n  }\n  /**\n   * Adds a cell coords to the selection.\n   *\n   * @param {CellCoords} coords Visual coordinates of a cell.\n   * @returns {VisualSelection}\n   */\n\n\n  _createClass(VisualSelection, [{\n    key: \"add\",\n    value: function add(coords) {\n      if (this.visualCellRange === null) {\n        this.visualCellRange = this.settings.createCellRange(coords);\n      } else {\n        this.visualCellRange.expand(coords);\n      }\n\n      return this;\n    }\n    /**\n     * Clears visual and renderable selection.\n     *\n     * @returns {VisualSelection}\n     */\n\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      this.visualCellRange = null;\n      return _get(_getPrototypeOf(VisualSelection.prototype), \"clear\", this).call(this);\n    }\n    /**\n     * Trims the passed cell range object by removing all coordinates that points to the hidden rows\n     * or columns. The result is a new cell range object that points only to the visible indexes or `null`.\n     *\n     * @private\n     * @param {CellRange} cellRange Cells range object to be trimmed.\n     * @returns {CellRange} Visual non-hidden cells range coordinates.\n     */\n\n  }, {\n    key: \"trimToVisibleCellsRangeOnly\",\n    value: function trimToVisibleCellsRangeOnly(_ref) {\n      var from = _ref.from,\n          to = _ref.to;\n      var visibleFromCoords = this.getNearestNotHiddenCoords(from, 1);\n      var visibleToCoords = this.getNearestNotHiddenCoords(to, -1);\n\n      if (visibleFromCoords === null || visibleToCoords === null) {\n        return null;\n      }\n\n      if (visibleFromCoords.row > visibleToCoords.row || visibleFromCoords.col > visibleToCoords.col) {\n        var isHeaderTypeSelection = this.settings.type === 'header' || this.settings.type === 'active-header';\n\n        if (!isHeaderTypeSelection) {\n          return null;\n        }\n\n        visibleFromCoords = from;\n        visibleToCoords = to;\n      }\n\n      return this.settings.createCellRange(visibleFromCoords, visibleFromCoords, visibleToCoords);\n    }\n    /**\n     * Gets nearest coordinates that points to the visible row and column indexes. If there are no visible\n     * rows and/or columns the `null` value is returned.\n     *\n     * @private\n     * @param {CellCoords} coords The coords object as starting point for finding the nearest visible coordinates.\n     * @param {1|-1} rowSearchDirection The search direction. For value 1, it means searching from top to bottom for\n     *                                  rows and from left to right for columns. For -1, it is the other way around.\n     * @param {1|-1} columnSearchDirection The same as above but for rows.\n     * @returns {CellCoords|null} Visual cell coordinates.\n     */\n\n  }, {\n    key: \"getNearestNotHiddenCoords\",\n    value: function getNearestNotHiddenCoords(coords, rowSearchDirection) {\n      var columnSearchDirection = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : rowSearchDirection;\n      var nextVisibleRow = this.getNearestNotHiddenIndex(this.settings.rowIndexMapper(), coords.row, rowSearchDirection); // There are no more visual rows in the range.\n\n      if (nextVisibleRow === null) {\n        return null;\n      }\n\n      var nextVisibleColumn = this.getNearestNotHiddenIndex(this.settings.columnIndexMapper(), coords.col, columnSearchDirection); // There are no more visual columns in the range.\n\n      if (nextVisibleColumn === null) {\n        return null;\n      }\n\n      return this.settings.createCellCoords(nextVisibleRow, nextVisibleColumn);\n    }\n    /**\n     * Gets nearest visual index. If there are no visible rows or columns the `null` value is returned.\n     *\n     * @private\n     * @param {IndexMapper} indexMapper The IndexMapper instance for specific axis.\n     * @param {number} visualIndex The index as starting point for finding the nearest visible index.\n     * @param {1|-1} searchDirection The search direction. For value 1, it means searching from top to bottom for\n     *                               rows and from left to right for columns. For -1, it is the other way around.\n     * @returns {number|null} Visual row/column index.\n     */\n\n  }, {\n    key: \"getNearestNotHiddenIndex\",\n    value: function getNearestNotHiddenIndex(indexMapper, visualIndex, searchDirection) {\n      if (visualIndex < 0) {\n        return visualIndex;\n      }\n\n      var nearestVisualIndex = indexMapper.getNearestNotHiddenIndex(visualIndex, searchDirection);\n      var isHeaderSelectionType = this.settings.type === 'header' || this.settings.type === 'active-header';\n\n      if (isHeaderSelectionType && nearestVisualIndex === null) {\n        return -1;\n      }\n\n      return nearestVisualIndex;\n    }\n    /**\n     * Override internally stored visual indexes added by the Selection's `add` function. It should be executed\n     * at the end of process of adding visual selection coordinates.\n     *\n     * @returns {VisualSelection}\n     */\n\n  }, {\n    key: \"commit\",\n    value: function commit() {\n      // There is no information about visual ranges, thus no selection may be displayed.\n      if (this.visualCellRange === null) {\n        return this;\n      }\n\n      var trimmedCellRange = this.trimToVisibleCellsRangeOnly(this.visualCellRange); // There is no visual start point (and also visual end point) in the range.\n\n      if (trimmedCellRange === null) {\n        this.cellRange = null;\n      } else {\n        this.cellRange = this.createRenderableCellRange(trimmedCellRange.from, trimmedCellRange.to);\n      }\n\n      return this;\n    }\n    /**\n     * Some selection may be a part of broader cell range. This function sync coordinates of current selection\n     * and the broader cell range when needed (current selection can't be presented visually).\n     *\n     * @param {CellRange} broaderCellRange Visual range. Actual cell range may be contained in the broader cell range.\n     * When there is no way to represent some cell range visually we try to find range containing just the first visible cell.\n     *\n     * Warn: Please keep in mind that this function may change coordinates of the handled broader range.\n     *\n     * @returns {VisualSelection}\n     */\n\n  }, {\n    key: \"syncWith\",\n    value: function syncWith(broaderCellRange) {\n      var rowDirection = broaderCellRange.getVerticalDirection() === 'N-S' ? 1 : -1;\n      var columnDirection = broaderCellRange.getHorizontalDirection() === 'W-E' ? 1 : -1;\n      var singleCellRangeVisual = this.getNearestNotHiddenCoords(broaderCellRange.from.clone().normalize(), rowDirection, columnDirection);\n\n      if (singleCellRangeVisual !== null && broaderCellRange.overlaps(singleCellRangeVisual)) {\n        // We can't show selection visually now, but we found fist visible range in the broader cell range.\n        if (this.cellRange === null) {\n          var singleCellRangeRenderable = this.settings.visualToRenderableCoords(singleCellRangeVisual);\n          this.cellRange = this.settings.createCellRange(singleCellRangeRenderable);\n        } // We set new highlight as it might change (for example, when showing/hiding some cells from the broader selection range)\n        // TODO: It is also handled by the `MergeCells` plugin while adjusting already modified coordinates. Should it?\n\n\n        broaderCellRange.setHighlight(singleCellRangeVisual);\n        return this;\n      } // Fallback to the start of the range. It resets the previous highlight (for example, when all columns have been hidden).\n\n\n      broaderCellRange.setHighlight(broaderCellRange.from);\n      return this;\n    }\n    /**\n     * Returns the top left (TL) and bottom right (BR) selection coordinates (renderable indexes).\n     * The method overwrites the original method to support header selection for hidden cells.\n     * To make the header selection working, the CellCoords and CellRange have to support not\n     * complete coordinates (`null` values for example, `row: null`, `col: 2`).\n     *\n     * @returns {Array} Returns array of coordinates for example `[1, 1, 5, 5]`.\n     */\n\n  }, {\n    key: \"getCorners\",\n    value: function getCorners() {\n      var _this$cellRange = this.cellRange,\n          from = _this$cellRange.from,\n          to = _this$cellRange.to;\n      var isRowUndefined = from.row === null || to.row === null;\n      var isColumnUndefined = from.col === null || to.col === null;\n      var topLeftCorner = this.settings.createCellCoords(isRowUndefined ? null : Math.min(from.row, to.row), isColumnUndefined ? null : Math.min(from.col, to.col));\n      var bottomRightCorner = this.settings.createCellCoords(isRowUndefined ? null : Math.max(from.row, to.row), isColumnUndefined ? null : Math.max(from.col, to.col));\n      return [topLeftCorner.row, topLeftCorner.col, bottomRightCorner.row, bottomRightCorner.col];\n    }\n    /**\n     * Returns the top left (or top right in RTL) and bottom right (or bottom left in RTL) selection\n     * coordinates (visual indexes).\n     *\n     * @returns {Array} Returns array of coordinates for example `[1, 1, 5, 5]`.\n     */\n\n  }, {\n    key: \"getVisualCorners\",\n    value: function getVisualCorners() {\n      var topStart = this.settings.renderableToVisualCoords(this.cellRange.getTopStartCorner());\n      var bottomEnd = this.settings.renderableToVisualCoords(this.cellRange.getBottomEndCorner());\n      return [topStart.row, topStart.col, bottomEnd.row, bottomEnd.col];\n    }\n    /**\n     * Creates a new CellRange object based on visual coordinates which before object creation are\n     * translated to renderable indexes.\n     *\n     * @param {CellCoords} visualFromCoords The CellCoords object which contains coordinates that\n     *                                      points to the beginning of the selection.\n     * @param {CellCoords} visualToCoords The CellCoords object which contains coordinates that\n     *                                    points to the end of the selection.\n     * @returns {CellRange}\n     */\n\n  }, {\n    key: \"createRenderableCellRange\",\n    value: function createRenderableCellRange(visualFromCoords, visualToCoords) {\n      var renderableFromCoords = this.settings.visualToRenderableCoords(visualFromCoords);\n      var renderableToCoords = this.settings.visualToRenderableCoords(visualToCoords);\n      return this.settings.createCellRange(renderableFromCoords, renderableFromCoords, renderableToCoords);\n    }\n  }]);\n\n  return VisualSelection;\n}(Selection);\n\nexport default VisualSelection;","map":{"version":3,"names":["_typeof","obj","Symbol","iterator","constructor","prototype","_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_createClass","protoProps","staticProps","_get","Reflect","get","bind","property","receiver","base","_superPropBase","desc","getOwnPropertyDescriptor","call","arguments","value","apply","object","hasOwnProperty","_getPrototypeOf","_inherits","subClass","superClass","create","_setPrototypeOf","o","p","setPrototypeOf","__proto__","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","_createSuperInternal","Super","result","NewTarget","construct","_possibleConstructorReturn","self","_assertThisInitialized","ReferenceError","sham","Proxy","Boolean","valueOf","e","getPrototypeOf","_defineProperty","Selection","VisualSelection","_Selection","_super","settings","visualCellRange","_this","commit","add","coords","createCellRange","expand","clear","trimToVisibleCellsRangeOnly","_ref","from","to","visibleFromCoords","getNearestNotHiddenCoords","visibleToCoords","row","col","isHeaderTypeSelection","type","rowSearchDirection","columnSearchDirection","undefined","nextVisibleRow","getNearestNotHiddenIndex","rowIndexMapper","nextVisibleColumn","columnIndexMapper","createCellCoords","indexMapper","visualIndex","searchDirection","nearestVisualIndex","isHeaderSelectionType","trimmedCellRange","cellRange","createRenderableCellRange","syncWith","broaderCellRange","rowDirection","getVerticalDirection","columnDirection","getHorizontalDirection","singleCellRangeVisual","clone","normalize","overlaps","singleCellRangeRenderable","visualToRenderableCoords","setHighlight","getCorners","_this$cellRange","isRowUndefined","isColumnUndefined","topLeftCorner","Math","min","bottomRightCorner","max","getVisualCorners","topStart","renderableToVisualCoords","getTopStartCorner","bottomEnd","getBottomEndCorner","visualFromCoords","visualToCoords","renderableFromCoords","renderableToCoords"],"sources":["/home/ubuntu/community/vue-web/node_modules/handsontable/selection/highlight/visualSelection.mjs"],"sourcesContent":["function _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\nimport \"core-js/modules/es.object.set-prototype-of.js\";\nimport \"core-js/modules/es.object.get-prototype-of.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.reflect.construct.js\";\nimport \"core-js/modules/es.reflect.get.js\";\nimport \"core-js/modules/es.object.get-own-property-descriptor.js\";\nimport \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.symbol.description.js\";\nimport \"core-js/modules/es.symbol.iterator.js\";\nimport \"core-js/modules/es.array.iterator.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\nfunction _get() { if (typeof Reflect !== \"undefined\" && Reflect.get) { _get = Reflect.get.bind(); } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(arguments.length < 3 ? target : receiver); } return desc.value; }; } return _get.apply(this, arguments); }\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, \"prototype\", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return _assertThisInitialized(self); }\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nimport { Selection } from \"./../../3rdparty/walkontable/src/index.mjs\";\nvar VisualSelection = /*#__PURE__*/function (_Selection) {\n  _inherits(VisualSelection, _Selection);\n  var _super = _createSuper(VisualSelection);\n  /**\n   * Range of selection visually. Visual representation may have representation in a rendered selection.\n   *\n   * @type {null|CellRange}\n   */\n\n  function VisualSelection(settings, visualCellRange) {\n    var _this;\n    _classCallCheck(this, VisualSelection);\n    _this = _super.call(this, settings, null);\n    _defineProperty(_assertThisInitialized(_this), \"visualCellRange\", null);\n    _this.visualCellRange = visualCellRange || null;\n    _this.commit();\n    return _this;\n  }\n  /**\n   * Adds a cell coords to the selection.\n   *\n   * @param {CellCoords} coords Visual coordinates of a cell.\n   * @returns {VisualSelection}\n   */\n  _createClass(VisualSelection, [{\n    key: \"add\",\n    value: function add(coords) {\n      if (this.visualCellRange === null) {\n        this.visualCellRange = this.settings.createCellRange(coords);\n      } else {\n        this.visualCellRange.expand(coords);\n      }\n      return this;\n    }\n\n    /**\n     * Clears visual and renderable selection.\n     *\n     * @returns {VisualSelection}\n     */\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      this.visualCellRange = null;\n      return _get(_getPrototypeOf(VisualSelection.prototype), \"clear\", this).call(this);\n    }\n\n    /**\n     * Trims the passed cell range object by removing all coordinates that points to the hidden rows\n     * or columns. The result is a new cell range object that points only to the visible indexes or `null`.\n     *\n     * @private\n     * @param {CellRange} cellRange Cells range object to be trimmed.\n     * @returns {CellRange} Visual non-hidden cells range coordinates.\n     */\n  }, {\n    key: \"trimToVisibleCellsRangeOnly\",\n    value: function trimToVisibleCellsRangeOnly(_ref) {\n      var from = _ref.from,\n        to = _ref.to;\n      var visibleFromCoords = this.getNearestNotHiddenCoords(from, 1);\n      var visibleToCoords = this.getNearestNotHiddenCoords(to, -1);\n      if (visibleFromCoords === null || visibleToCoords === null) {\n        return null;\n      }\n      if (visibleFromCoords.row > visibleToCoords.row || visibleFromCoords.col > visibleToCoords.col) {\n        var isHeaderTypeSelection = this.settings.type === 'header' || this.settings.type === 'active-header';\n        if (!isHeaderTypeSelection) {\n          return null;\n        }\n        visibleFromCoords = from;\n        visibleToCoords = to;\n      }\n      return this.settings.createCellRange(visibleFromCoords, visibleFromCoords, visibleToCoords);\n    }\n\n    /**\n     * Gets nearest coordinates that points to the visible row and column indexes. If there are no visible\n     * rows and/or columns the `null` value is returned.\n     *\n     * @private\n     * @param {CellCoords} coords The coords object as starting point for finding the nearest visible coordinates.\n     * @param {1|-1} rowSearchDirection The search direction. For value 1, it means searching from top to bottom for\n     *                                  rows and from left to right for columns. For -1, it is the other way around.\n     * @param {1|-1} columnSearchDirection The same as above but for rows.\n     * @returns {CellCoords|null} Visual cell coordinates.\n     */\n  }, {\n    key: \"getNearestNotHiddenCoords\",\n    value: function getNearestNotHiddenCoords(coords, rowSearchDirection) {\n      var columnSearchDirection = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : rowSearchDirection;\n      var nextVisibleRow = this.getNearestNotHiddenIndex(this.settings.rowIndexMapper(), coords.row, rowSearchDirection);\n\n      // There are no more visual rows in the range.\n      if (nextVisibleRow === null) {\n        return null;\n      }\n      var nextVisibleColumn = this.getNearestNotHiddenIndex(this.settings.columnIndexMapper(), coords.col, columnSearchDirection);\n\n      // There are no more visual columns in the range.\n      if (nextVisibleColumn === null) {\n        return null;\n      }\n      return this.settings.createCellCoords(nextVisibleRow, nextVisibleColumn);\n    }\n\n    /**\n     * Gets nearest visual index. If there are no visible rows or columns the `null` value is returned.\n     *\n     * @private\n     * @param {IndexMapper} indexMapper The IndexMapper instance for specific axis.\n     * @param {number} visualIndex The index as starting point for finding the nearest visible index.\n     * @param {1|-1} searchDirection The search direction. For value 1, it means searching from top to bottom for\n     *                               rows and from left to right for columns. For -1, it is the other way around.\n     * @returns {number|null} Visual row/column index.\n     */\n  }, {\n    key: \"getNearestNotHiddenIndex\",\n    value: function getNearestNotHiddenIndex(indexMapper, visualIndex, searchDirection) {\n      if (visualIndex < 0) {\n        return visualIndex;\n      }\n      var nearestVisualIndex = indexMapper.getNearestNotHiddenIndex(visualIndex, searchDirection);\n      var isHeaderSelectionType = this.settings.type === 'header' || this.settings.type === 'active-header';\n      if (isHeaderSelectionType && nearestVisualIndex === null) {\n        return -1;\n      }\n      return nearestVisualIndex;\n    }\n\n    /**\n     * Override internally stored visual indexes added by the Selection's `add` function. It should be executed\n     * at the end of process of adding visual selection coordinates.\n     *\n     * @returns {VisualSelection}\n     */\n  }, {\n    key: \"commit\",\n    value: function commit() {\n      // There is no information about visual ranges, thus no selection may be displayed.\n      if (this.visualCellRange === null) {\n        return this;\n      }\n      var trimmedCellRange = this.trimToVisibleCellsRangeOnly(this.visualCellRange);\n\n      // There is no visual start point (and also visual end point) in the range.\n      if (trimmedCellRange === null) {\n        this.cellRange = null;\n      } else {\n        this.cellRange = this.createRenderableCellRange(trimmedCellRange.from, trimmedCellRange.to);\n      }\n      return this;\n    }\n\n    /**\n     * Some selection may be a part of broader cell range. This function sync coordinates of current selection\n     * and the broader cell range when needed (current selection can't be presented visually).\n     *\n     * @param {CellRange} broaderCellRange Visual range. Actual cell range may be contained in the broader cell range.\n     * When there is no way to represent some cell range visually we try to find range containing just the first visible cell.\n     *\n     * Warn: Please keep in mind that this function may change coordinates of the handled broader range.\n     *\n     * @returns {VisualSelection}\n     */\n  }, {\n    key: \"syncWith\",\n    value: function syncWith(broaderCellRange) {\n      var rowDirection = broaderCellRange.getVerticalDirection() === 'N-S' ? 1 : -1;\n      var columnDirection = broaderCellRange.getHorizontalDirection() === 'W-E' ? 1 : -1;\n      var singleCellRangeVisual = this.getNearestNotHiddenCoords(broaderCellRange.from.clone().normalize(), rowDirection, columnDirection);\n      if (singleCellRangeVisual !== null && broaderCellRange.overlaps(singleCellRangeVisual)) {\n        // We can't show selection visually now, but we found fist visible range in the broader cell range.\n        if (this.cellRange === null) {\n          var singleCellRangeRenderable = this.settings.visualToRenderableCoords(singleCellRangeVisual);\n          this.cellRange = this.settings.createCellRange(singleCellRangeRenderable);\n        }\n\n        // We set new highlight as it might change (for example, when showing/hiding some cells from the broader selection range)\n        // TODO: It is also handled by the `MergeCells` plugin while adjusting already modified coordinates. Should it?\n        broaderCellRange.setHighlight(singleCellRangeVisual);\n        return this;\n      }\n\n      // Fallback to the start of the range. It resets the previous highlight (for example, when all columns have been hidden).\n      broaderCellRange.setHighlight(broaderCellRange.from);\n      return this;\n    }\n\n    /**\n     * Returns the top left (TL) and bottom right (BR) selection coordinates (renderable indexes).\n     * The method overwrites the original method to support header selection for hidden cells.\n     * To make the header selection working, the CellCoords and CellRange have to support not\n     * complete coordinates (`null` values for example, `row: null`, `col: 2`).\n     *\n     * @returns {Array} Returns array of coordinates for example `[1, 1, 5, 5]`.\n     */\n  }, {\n    key: \"getCorners\",\n    value: function getCorners() {\n      var _this$cellRange = this.cellRange,\n        from = _this$cellRange.from,\n        to = _this$cellRange.to;\n      var isRowUndefined = from.row === null || to.row === null;\n      var isColumnUndefined = from.col === null || to.col === null;\n      var topLeftCorner = this.settings.createCellCoords(isRowUndefined ? null : Math.min(from.row, to.row), isColumnUndefined ? null : Math.min(from.col, to.col));\n      var bottomRightCorner = this.settings.createCellCoords(isRowUndefined ? null : Math.max(from.row, to.row), isColumnUndefined ? null : Math.max(from.col, to.col));\n      return [topLeftCorner.row, topLeftCorner.col, bottomRightCorner.row, bottomRightCorner.col];\n    }\n\n    /**\n     * Returns the top left (or top right in RTL) and bottom right (or bottom left in RTL) selection\n     * coordinates (visual indexes).\n     *\n     * @returns {Array} Returns array of coordinates for example `[1, 1, 5, 5]`.\n     */\n  }, {\n    key: \"getVisualCorners\",\n    value: function getVisualCorners() {\n      var topStart = this.settings.renderableToVisualCoords(this.cellRange.getTopStartCorner());\n      var bottomEnd = this.settings.renderableToVisualCoords(this.cellRange.getBottomEndCorner());\n      return [topStart.row, topStart.col, bottomEnd.row, bottomEnd.col];\n    }\n\n    /**\n     * Creates a new CellRange object based on visual coordinates which before object creation are\n     * translated to renderable indexes.\n     *\n     * @param {CellCoords} visualFromCoords The CellCoords object which contains coordinates that\n     *                                      points to the beginning of the selection.\n     * @param {CellCoords} visualToCoords The CellCoords object which contains coordinates that\n     *                                    points to the end of the selection.\n     * @returns {CellRange}\n     */\n  }, {\n    key: \"createRenderableCellRange\",\n    value: function createRenderableCellRange(visualFromCoords, visualToCoords) {\n      var renderableFromCoords = this.settings.visualToRenderableCoords(visualFromCoords);\n      var renderableToCoords = this.settings.visualToRenderableCoords(visualToCoords);\n      return this.settings.createCellRange(renderableFromCoords, renderableFromCoords, renderableToCoords);\n    }\n  }]);\n  return VisualSelection;\n}(Selection);\nexport default VisualSelection;"],"mappings":"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"},"metadata":{},"sourceType":"module"}