{"ast":null,"code":"import { message } from 'ant-design-vue';\nimport { defineComponent, reactive, ref } from 'vue';\nexport default defineComponent({\n  setup() {\n    const formRef = ref();\n    const formState = reactive({\n      name: '',\n      pass: '',\n      checkPass: ''\n    });\n\n    let validateName = async (_rule, value) => {\n      if (value === '') {\n        return Promise.reject('请输入正确格式账户名');\n      } else if (value.length != value.split(\" \").join(\"\").length) {\n        return Promise.reject('输入包含空格');\n      } else {\n        return Promise.resolve();\n      }\n    };\n\n    let validatePass = async (_rule, value) => {\n      if (value === '') {\n        return Promise.reject('请输入初始密码');\n      } else if (value.length != value.split(\" \").join(\"\").length) {\n        return Promise.reject('输入包含空格');\n      } else {\n        if (formState.checkPass !== '') {\n          formRef.value.validateFields('checkPass');\n        }\n\n        return Promise.resolve();\n      }\n    };\n\n    let validatePass2 = async (_rule, value) => {\n      if (value === '') {\n        return Promise.reject('请再次输入初始密码');\n      }\n\n      if (value !== formState.pass) {\n        return Promise.reject(\"两次密码不一样！\");\n      }\n\n      if (value.length != value.split(\" \").join(\"\").length) {\n        return Promise.reject('输入包含空格');\n      } else {\n        return Promise.resolve();\n      }\n    };\n\n    const rules = {\n      pass: [{\n        required: true,\n        validator: validatePass,\n        trigger: 'change'\n      }],\n      checkPass: [{\n        validator: validatePass2,\n        trigger: 'change'\n      }],\n      name: [{\n        validator: validateName,\n        trigger: 'change'\n      }]\n    };\n\n    const handleFinish = values => {\n      console.log(values, formState);\n    };\n\n    const handleFinishFailed = errors => {\n      console.log(errors);\n    };\n\n    const resetForm = () => {\n      formRef.value.resetFields();\n    };\n\n    const handleValidate = (...args) => {\n      console.log(args);\n    };\n\n    return {\n      formState,\n      formRef,\n      rules,\n      handleFinishFailed,\n      handleFinish,\n      resetForm,\n      handleValidate\n    };\n  },\n\n  methods: {\n    register() {\n      console.log(sessionStorage.getItem('user'));\n\n      if (this.formState.name.length !== this.formState.name.split(\" \").join(\"\").length || this.formState.pass.length !== this.formState.pass.split(\" \").join(\"\").length || this.formState.checkPass.length !== this.formState.checkPass.split(\" \").join(\"\").length || this.formState.name == '' || this.formState.pass == '' || this.formState.checkPass == '' || this.formState.pass !== this.formState.checkPass) {\n        message.destroy();\n        message.error('注册失败，请检查输入格式', 5);\n      } else {\n        this.$http.post('http://192.168.5.42:8888/register', {\n          name: this.formState.name,\n          password: this.formState.pass\n        }).then(response => {\n          if (response.data.result === 'success') {\n            message.destroy();\n            message.success('注册成功，请登录！', 2);\n            this.$router.push('/login');\n          }\n\n          if (response.data.result === 'exis') {\n            message.destroy();\n            message.warning('该用户名已注册', 3);\n          } // else{\n          //   message.destroy()\n          //   message.success('登录错误', 2)\n          // }\n\n        }).catch(function (error) {\n          // 请求失败处理\n          console.log(error);\n        });\n      }\n    }\n\n  }\n});","map":{"version":3,"mappings":"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","names":["message","defineComponent","reactive","ref","setup","formRef","formState","name","pass","checkPass","validateName","_rule","value","Promise","reject","length","split","join","resolve","validatePass","validateFields","validatePass2","rules","required","validator","trigger","handleFinish","values","console","log","handleFinishFailed","errors","resetForm","resetFields","handleValidate","args","methods","register","sessionStorage","getItem","destroy","error","$http","post","password","then","response","data","result","success","$router","push","warning","catch"],"sourceRoot":"","sources":["/home/ubuntu/voting/vue-web/src/views/user/RegisterUser.vue"],"sourcesContent":["<template>\r\n  <a-form\r\n    ref=\"formRef\"\r\n    name=\"custom-validation\"\r\n    :model=\"formState\"\r\n    :rules=\"rules\"\r\n    class=\"user-layout-login\"\r\n    @finish=\"handleFinish\"\r\n    @validate=\"handleValidate\"\r\n    @finishFailed=\"handleFinishFailed\"\r\n  >\r\n    <a-tabs\r\n          :tabBarStyle=\"{ textAlign: 'center', borderBottom: 'unset' }\" centered>\r\n        <a-tab-pane key=\"tab1\" tab=\"账户注册\">\r\n             <a-form-item has-feedback name=\"name\">\r\n      <a-input  size=\"large\" placeholder=\"账户名\" v-model:value=\"formState.name\" type=\"text\" autocomplete=\"off\" />\r\n    </a-form-item>\r\n\r\n\r\n   <a-form-item has-feedback name=\"pass\">\r\n      <a-input-password size=\"large\"\r\n                placeholder=\"输入密码\" v-model:value=\"formState.pass\" type=\"password\" autocomplete=\"off\" />\r\n    </a-form-item>\r\n             <a-form-item has-feedback name=\"checkPass\">\r\n      <a-input-password size=\"large\"\r\n                placeholder=\"再次输入密码\" v-model:value=\"formState.checkPass\" type=\"password\" autocomplete=\"off\" />\r\n    </a-form-item>\r\n        </a-tab-pane>\r\n      </a-tabs>\r\n   \r\n <a-form-item >\r\n      <a-button size=\"large\" style=\"width:77%\" type=\"primary\" html-type=\"submit\" @click=\"register\">注册</a-button>\r\n      <a-button size=\"large\" style=\"margin-left: 10px;width: 20%;\" @click=\"resetForm\">重置</a-button>\r\n    </a-form-item> \r\n\r\n      <a-form-item>\r\n        <router-link class=\"register\" to='/login' style=\"float: right;\">已有账户登录</router-link>\r\n      </a-form-item>\r\n  </a-form>\r\n</template>\r\n<script>\r\n\r\nimport { message } from 'ant-design-vue';\r\nimport { defineComponent, reactive, ref } from 'vue';\r\nexport default defineComponent({\r\n  setup() {\r\n    const formRef = ref();\r\n    const formState = reactive({\r\n      name:'',\r\n      pass: '',\r\n      checkPass: ''\r\n    });\r\n\r\n     let validateName = async (_rule, value) => {\r\n      if (value ==='') {\r\n        return Promise.reject('请输入正确格式账户名');\r\n      } \r\n      else if(value.length != value.split(\" \").join(\"\").length){\r\n        return Promise.reject('输入包含空格');\r\n      }\r\n      else {\r\n        return Promise.resolve();\r\n      }\r\n    };\r\n    let validatePass = async (_rule, value) => {\r\n      if (value === '') {\r\n        return Promise.reject('请输入初始密码');\r\n      }\r\n      else if(value.length != value.split(\" \").join(\"\").length){\r\n        return Promise.reject('输入包含空格');\r\n      } \r\n      else {\r\n        if (formState.checkPass !== '') {\r\n          formRef.value.validateFields('checkPass');\r\n        }\r\n        return Promise.resolve();\r\n      }\r\n    };\r\n\r\n    let validatePass2 = async (_rule, value) => {\r\n      if (value === '') {\r\n        return Promise.reject('请再次输入初始密码');\r\n      } \r\n      if (value !== formState.pass) {\r\n        return Promise.reject(\"两次密码不一样！\");\r\n      } \r\n      if(value.length != value.split(\" \").join(\"\").length){\r\n        return Promise.reject('输入包含空格');\r\n      }\r\n      else {\r\n        return Promise.resolve();\r\n      }\r\n    };\r\n\r\n    const rules = {\r\n      pass: [{\r\n        required: true,\r\n        validator: validatePass,\r\n        trigger: 'change',\r\n      }],\r\n      checkPass: [{\r\n        validator: validatePass2,\r\n        trigger: 'change',\r\n      }],\r\n      name: [{\r\n        validator: validateName,\r\n        trigger: 'change',\r\n      }],\r\n    };\r\n\r\n    const handleFinish = values => {\r\n      console.log(values, formState);\r\n    };\r\n\r\n    const handleFinishFailed = errors => {\r\n      console.log(errors);\r\n    };\r\n\r\n    const resetForm = () => {\r\n      formRef.value.resetFields();\r\n    };\r\n\r\n    const handleValidate = (...args) => {\r\n      console.log(args);\r\n    };\r\n\r\n    return {\r\n      formState,\r\n      formRef,\r\n      rules,\r\n      handleFinishFailed,\r\n      handleFinish,\r\n      resetForm,\r\n      handleValidate,\r\n    };\r\n  },\r\n\r\n    methods:{\r\n    register() {\r\n\r\n      console.log(sessionStorage.getItem('user'))\r\n      if(this.formState.name.length !== this.formState.name.split(\" \").join(\"\").length||this.formState.pass.length !== this.formState.pass.split(\" \").join(\"\").length\r\n      ||this.formState.checkPass.length !== this.formState.checkPass.split(\" \").join(\"\").length || this.formState.name =='' \r\n    ||this.formState.pass =='' || this.formState.checkPass =='' || this.formState.pass !== this.formState.checkPass){\r\n      message.destroy()\r\n        message.error('注册失败，请检查输入格式', 5)\r\n      }\r\n\r\n      else{\r\n        this.$http.post('http://192.168.5.42:8888/register', {\r\n        name:this.formState.name,\r\n        password:this.formState.pass\r\n      }).then((response) => {\r\n        if(response.data.result === 'success'){\r\n          message.destroy()\r\n          message.success('注册成功，请登录！', 2)\r\n          this.$router.push('/login');\r\n        }\r\n        if(response.data.result === 'exis'){\r\n          message.destroy()\r\n          message.warning('该用户名已注册', 3)\r\n        }\r\n        // else{\r\n        //   message.destroy()\r\n        //   message.success('登录错误', 2)\r\n        // }\r\n      }).catch(function (error) { // 请求失败处理\r\n        console.log(error)\r\n      }) \r\n      }\r\n    }\r\n  }\r\n\r\n});\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n.user-layout-login {\r\n  label {\r\n    font-size: 14px;\r\n  }\r\n\r\n  .getCaptcha {\r\n    display: block;\r\n    width: 100%;\r\n    height: 40px;\r\n  }\r\n\r\n  .forge-password {\r\n    font-size: 14px;\r\n  }\r\n\r\n  button.login-button {\r\n    padding: 0 15px;\r\n    font-size: 16px;\r\n    height: 40px;\r\n    width: 50%;\r\n  }\r\n\r\n  .user-login-other {\r\n    text-align: left;\r\n    margin-top: 24px;\r\n    line-height: 22px;\r\n\r\n    .item-icon {\r\n      font-size: 24px;\r\n      color: rgba(0, 0, 0, 0.2);\r\n      margin-left: 16px;\r\n      vertical-align: middle;\r\n      cursor: pointer;\r\n      transition: color 0.3s;\r\n\r\n      &:hover {\r\n        color: #1890ff;\r\n      }\r\n    }\r\n\r\n    .register {\r\n      float: right;\r\n    }\r\n  }\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module"}