{"ast":null,"code":"import \"core-js/modules/es.error.cause.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/web.timers.js\";\nimport \"core-js/modules/es.object.set-prototype-of.js\";\nimport \"core-js/modules/es.reflect.construct.js\";\n\nfunction _construct(Parent, args, Class) {\n  if (_isNativeReflectConstruct()) {\n    _construct = Reflect.construct.bind();\n  } else {\n    _construct = function _construct(Parent, args, Class) {\n      var a = [null];\n      a.push.apply(a, args);\n      var Constructor = Function.bind.apply(Parent, a);\n      var instance = new Constructor();\n      if (Class) _setPrototypeOf(instance, Class.prototype);\n      return instance;\n    };\n  }\n\n  return _construct.apply(null, arguments);\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nimport { getScrollableElement, getScrollbarWidth } from \"../../../helpers/dom/element.mjs\";\nimport { arrayEach } from \"../../../helpers/array.mjs\";\nimport { isKey } from \"../../../helpers/unicode.mjs\";\nimport { isChrome } from \"../../../helpers/browser.mjs\";\nimport { InlineStartOverlay, TopOverlay, TopInlineStartCornerOverlay, BottomOverlay, BottomInlineStartCornerOverlay } from \"./overlay/index.mjs\";\n/**\n * @class Overlays\n */\n\nvar Overlays = /*#__PURE__*/function () {\n  /**\n   * Walkontable instance's reference.\n   *\n   * @protected\n   * @type {Walkontable}\n   */\n\n  /**\n   * Refer to the TopOverlay instance.\n   *\n   * @protected\n   * @type {TopOverlay}\n   */\n\n  /**\n   * Refer to the BottomOverlay instance.\n   *\n   * @protected\n   * @type {BottomOverlay}\n   */\n\n  /**\n   * Refer to the InlineStartOverlay or instance.\n   *\n   * @protected\n   * @type {InlineStartOverlay}\n   */\n\n  /**\n   * Refer to the TopInlineStartCornerOverlay instance.\n   *\n   * @protected\n   * @type {TopInlineStartCornerOverlay}\n   */\n\n  /**\n   * Refer to the BottomInlineStartCornerOverlay instance.\n   *\n   * @protected\n   * @type {BottomInlineStartCornerOverlay}\n   */\n\n  /**\n   * Browser line height for purposes of translating mouse wheel.\n   *\n   * @private\n   * @type {number}\n   */\n\n  /**\n   * The walkontable settings.\n   *\n   * @protected\n   * @type {Settings}\n   */\n\n  /**\n   * @param {Walkontable} wotInstance The Walkontable instance. @todo refactoring remove.\n   * @param {FacadeGetter} facadeGetter Function which return proper facade.\n   * @param {DomBindings} domBindings Bindings into DOM.\n   * @param {Settings} wtSettings The Walkontable settings.\n   * @param {EventManager} eventManager The walkontable event manager.\n   * @param {MasterTable} wtTable The master table.\n   */\n  function Overlays(wotInstance, facadeGetter, domBindings, wtSettings, eventManager, wtTable) {\n    _classCallCheck(this, Overlays);\n\n    _defineProperty(this, \"wot\", null);\n\n    _defineProperty(this, \"topOverlay\", null);\n\n    _defineProperty(this, \"bottomOverlay\", null);\n\n    _defineProperty(this, \"inlineStartOverlay\", null);\n\n    _defineProperty(this, \"topInlineStartCornerOverlay\", null);\n\n    _defineProperty(this, \"bottomInlineStartCornerOverlay\", null);\n\n    _defineProperty(this, \"browserLineHeight\", undefined);\n\n    _defineProperty(this, \"wtSettings\", null);\n\n    this.wot = wotInstance;\n    this.wtSettings = wtSettings;\n    this.domBindings = domBindings;\n    this.facadeGetter = facadeGetter;\n    this.wtTable = wtTable;\n    var _this$domBindings = this.domBindings,\n        rootDocument = _this$domBindings.rootDocument,\n        rootWindow = _this$domBindings.rootWindow; // legacy support\n\n    this.instance = this.wot; // todo refactoring: move to facade\n\n    this.eventManager = eventManager; // TODO refactoring: probably invalid place to this logic\n\n    this.scrollbarSize = getScrollbarWidth(rootDocument);\n    var isOverflowHidden = rootWindow.getComputedStyle(wtTable.wtRootElement.parentNode).getPropertyValue('overflow') === 'hidden';\n    this.scrollableElement = isOverflowHidden ? wtTable.holder : getScrollableElement(wtTable.TABLE);\n    this.initOverlays();\n    this.hasScrollbarBottom = false;\n    this.hasScrollbarRight = false;\n    this.destroyed = false;\n    this.keyPressed = false;\n    this.spreaderLastSize = {\n      width: null,\n      height: null\n    };\n    this.verticalScrolling = false;\n    this.horizontalScrolling = false;\n    this.initBrowserLineHeight();\n    this.registerListeners();\n    this.lastScrollX = rootWindow.scrollX;\n    this.lastScrollY = rootWindow.scrollY;\n  }\n  /**\n   * Retrieve browser line height and apply its value to `browserLineHeight`.\n   *\n   * @private\n   */\n\n\n  _createClass(Overlays, [{\n    key: \"initBrowserLineHeight\",\n    value: function initBrowserLineHeight() {\n      var _this$domBindings2 = this.domBindings,\n          rootWindow = _this$domBindings2.rootWindow,\n          rootDocument = _this$domBindings2.rootDocument;\n      var computedStyle = rootWindow.getComputedStyle(rootDocument.body);\n      /**\n       * Sometimes `line-height` might be set to 'normal'. In that case, a default `font-size` should be multiplied by roughly 1.2.\n       * Https://developer.mozilla.org/pl/docs/Web/CSS/line-height#Values.\n       */\n\n      var lineHeight = parseInt(computedStyle.lineHeight, 10);\n      var lineHeightFalback = parseInt(computedStyle.fontSize, 10) * 1.2;\n      this.browserLineHeight = lineHeight || lineHeightFalback;\n    }\n    /**\n     * Prepare overlays based on user settings.\n     *\n     * @private\n     */\n\n  }, {\n    key: \"initOverlays\",\n    value: function initOverlays() {\n      var args = [this.wot, this.facadeGetter, this.wtSettings, this.domBindings]; // todo refactoring: IOC, collection or factories.\n      // TODO refactoring, conceive about using generic collection of overlays.\n\n      this.topOverlay = _construct(TopOverlay, args);\n      this.bottomOverlay = _construct(BottomOverlay, args);\n      this.inlineStartOverlay = _construct(InlineStartOverlay, args); // TODO discuss, the controversial here would be removing the lazy creation mechanism for corners.\n      // TODO cond. Has no any visual impact. They're initially hidden in same way like left, top, and bottom overlays.\n\n      this.topInlineStartCornerOverlay = _construct(TopInlineStartCornerOverlay, args.concat([this.topOverlay, this.inlineStartOverlay]));\n      this.bottomInlineStartCornerOverlay = _construct(BottomInlineStartCornerOverlay, args.concat([this.bottomOverlay, this.inlineStartOverlay]));\n    }\n    /**\n     * Update state of rendering, check if changed.\n     *\n     * @package\n     * @returns {boolean} Returns `true` if changes applied to overlay needs scroll synchronization.\n     */\n\n  }, {\n    key: \"updateStateOfRendering\",\n    value: function updateStateOfRendering() {\n      var syncScroll = this.topOverlay.updateStateOfRendering();\n      syncScroll = this.bottomOverlay.updateStateOfRendering() || syncScroll;\n      syncScroll = this.inlineStartOverlay.updateStateOfRendering() || syncScroll; // todo refactoring: move conditions into updateStateOfRendering(),\n\n      if (this.inlineStartOverlay.needFullRender) {\n        if (this.topOverlay.needFullRender) {\n          syncScroll = this.topInlineStartCornerOverlay.updateStateOfRendering() || syncScroll;\n        }\n\n        if (this.bottomOverlay.needFullRender) {\n          syncScroll = this.bottomInlineStartCornerOverlay.updateStateOfRendering() || syncScroll;\n        }\n      }\n\n      return syncScroll;\n    }\n    /**\n     * Refresh and redraw table.\n     */\n\n  }, {\n    key: \"refreshAll\",\n    value: function refreshAll() {\n      if (!this.wot.drawn) {\n        return;\n      }\n\n      if (!this.wtTable.holder.parentNode) {\n        // Walkontable was detached from DOM, but this handler was not removed\n        this.destroy();\n        return;\n      }\n\n      this.wot.draw(true);\n\n      if (this.verticalScrolling) {\n        this.inlineStartOverlay.onScroll(); // todo the inlineStartOverlay.onScroll() fires hook. Why is it needed there, not in any another place?\n      }\n\n      if (this.horizontalScrolling) {\n        this.topOverlay.onScroll();\n      }\n\n      this.verticalScrolling = false;\n      this.horizontalScrolling = false;\n    }\n    /**\n     * Register all necessary event listeners.\n     */\n\n  }, {\n    key: \"registerListeners\",\n    value: function registerListeners() {\n      var _this = this;\n\n      var _this$domBindings3 = this.domBindings,\n          rootDocument = _this$domBindings3.rootDocument,\n          rootWindow = _this$domBindings3.rootWindow;\n      var topOverlayScrollableElement = this.topOverlay.mainTableScrollableElement;\n      var inlineStartOverlayScrollableElement = this.inlineStartOverlay.mainTableScrollableElement;\n      this.eventManager.addEventListener(rootDocument.documentElement, 'keydown', function (event) {\n        return _this.onKeyDown(event);\n      });\n      this.eventManager.addEventListener(rootDocument.documentElement, 'keyup', function () {\n        return _this.onKeyUp();\n      });\n      this.eventManager.addEventListener(rootDocument, 'visibilitychange', function () {\n        return _this.onKeyUp();\n      });\n      this.eventManager.addEventListener(topOverlayScrollableElement, 'scroll', function (event) {\n        return _this.onTableScroll(event);\n      }, {\n        passive: true\n      });\n\n      if (topOverlayScrollableElement !== inlineStartOverlayScrollableElement) {\n        this.eventManager.addEventListener(inlineStartOverlayScrollableElement, 'scroll', function (event) {\n          return _this.onTableScroll(event);\n        }, {\n          passive: true\n        });\n      }\n\n      var isHighPixelRatio = rootWindow.devicePixelRatio && rootWindow.devicePixelRatio > 1;\n      var isScrollOnWindow = this.scrollableElement === rootWindow;\n      var preventWheel = this.wtSettings.getSetting('preventWheel');\n      var wheelEventOptions = {\n        passive: isScrollOnWindow\n      };\n\n      if (preventWheel || isHighPixelRatio || !isChrome()) {\n        this.eventManager.addEventListener(this.wtTable.wtRootElement, 'wheel', function (event) {\n          return _this.onCloneWheel(event, preventWheel);\n        }, wheelEventOptions);\n      }\n\n      var overlays = [this.topOverlay, this.bottomOverlay, this.inlineStartOverlay, this.topInlineStartCornerOverlay, this.bottomInlineStartCornerOverlay];\n      overlays.forEach(function (overlay) {\n        if (overlay && overlay.needFullRender) {\n          var holder = overlay.clone.wtTable.holder; // todo rethink, maybe: overlay.getHolder()\n\n          _this.eventManager.addEventListener(holder, 'wheel', function (event) {\n            return _this.onCloneWheel(event, preventWheel);\n          }, wheelEventOptions);\n        }\n      });\n      var resizeTimeout;\n      this.eventManager.addEventListener(rootWindow, 'resize', function () {\n        clearTimeout(resizeTimeout);\n        resizeTimeout = setTimeout(function () {\n          _this.wtSettings.getSetting('onWindowResize');\n        }, 200);\n      });\n    }\n    /**\n     * Deregister all previously registered listeners.\n     */\n\n  }, {\n    key: \"deregisterListeners\",\n    value: function deregisterListeners() {\n      this.eventManager.clearEvents(true);\n    }\n    /**\n     * Scroll listener.\n     *\n     * @param {Event} event The mouse event object.\n     */\n\n  }, {\n    key: \"onTableScroll\",\n    value: function onTableScroll(event) {\n      // There was if statement which controlled flow of this function. It avoided the execution of the next lines\n      // on mobile devices. It was changed. Broader description of this case is included within issue #4856.\n      var rootWindow = this.domBindings.rootWindow;\n      var masterHorizontal = this.inlineStartOverlay.mainTableScrollableElement;\n      var masterVertical = this.topOverlay.mainTableScrollableElement;\n      var target = event.target; // For key press, sync only master -> overlay position because while pressing Walkontable.render is triggered\n      // by hot.refreshBorder\n\n      if (this.keyPressed) {\n        if (masterVertical !== rootWindow && target !== rootWindow && !event.target.contains(masterVertical) || masterHorizontal !== rootWindow && target !== rootWindow && !event.target.contains(masterHorizontal)) {\n          return;\n        }\n      }\n\n      this.syncScrollPositions(event);\n    }\n    /**\n     * Wheel listener for cloned overlays.\n     *\n     * @param {Event} event The mouse event object.\n     * @param {boolean} preventDefault If `true`, the `preventDefault` will be called on event object.\n     */\n\n  }, {\n    key: \"onCloneWheel\",\n    value: function onCloneWheel(event, preventDefault) {\n      var rootWindow = this.domBindings.rootWindow; // There was if statement which controlled flow of this function. It avoided the execution of the next lines\n      // on mobile devices. It was changed. Broader description of this case is included within issue #4856.\n\n      var masterHorizontal = this.inlineStartOverlay.mainTableScrollableElement;\n      var masterVertical = this.topOverlay.mainTableScrollableElement;\n      var target = event.target; // For key press, sync only master -> overlay position because while pressing Walkontable.render is triggered\n      // by hot.refreshBorder\n\n      var shouldNotWheelVertically = masterVertical !== rootWindow && target !== rootWindow && !target.contains(masterVertical);\n      var shouldNotWheelHorizontally = masterHorizontal !== rootWindow && target !== rootWindow && !target.contains(masterHorizontal);\n\n      if (this.keyPressed && (shouldNotWheelVertically || shouldNotWheelHorizontally)) {\n        return;\n      }\n\n      var isScrollPossible = this.translateMouseWheelToScroll(event);\n\n      if (preventDefault || this.scrollableElement !== rootWindow && isScrollPossible) {\n        event.preventDefault();\n      }\n    }\n    /**\n     * Key down listener.\n     *\n     * @param {Event} event The keyboard event object.\n     */\n\n  }, {\n    key: \"onKeyDown\",\n    value: function onKeyDown(event) {\n      this.keyPressed = isKey(event.keyCode, 'ARROW_UP|ARROW_RIGHT|ARROW_DOWN|ARROW_LEFT');\n    }\n    /**\n     * Key up listener.\n     */\n\n  }, {\n    key: \"onKeyUp\",\n    value: function onKeyUp() {\n      this.keyPressed = false;\n    }\n    /**\n     * Translate wheel event into scroll event and sync scroll overlays position.\n     *\n     * @private\n     * @param {Event} event The mouse event object.\n     * @returns {boolean}\n     */\n\n  }, {\n    key: \"translateMouseWheelToScroll\",\n    value: function translateMouseWheelToScroll(event) {\n      var deltaY = isNaN(event.deltaY) ? -1 * event.wheelDeltaY : event.deltaY;\n      var deltaX = isNaN(event.deltaX) ? -1 * event.wheelDeltaX : event.deltaX;\n\n      if (event.deltaMode === 1) {\n        deltaX += deltaX * this.browserLineHeight;\n        deltaY += deltaY * this.browserLineHeight;\n      }\n\n      var isScrollVerticallyPossible = this.scrollVertically(deltaY);\n      var isScrollHorizontallyPossible = this.scrollHorizontally(deltaX);\n      return isScrollVerticallyPossible || isScrollHorizontallyPossible;\n    }\n    /**\n     * Scrolls main scrollable element horizontally.\n     *\n     * @param {number} delta Relative value to scroll.\n     * @returns {boolean}\n     */\n\n  }, {\n    key: \"scrollVertically\",\n    value: function scrollVertically(delta) {\n      var previousScroll = this.scrollableElement.scrollTop;\n      this.scrollableElement.scrollTop += delta;\n      return previousScroll !== this.scrollableElement.scrollTop;\n    }\n    /**\n     * Scrolls main scrollable element horizontally.\n     *\n     * @param {number} delta Relative value to scroll.\n     * @returns {boolean}\n     */\n\n  }, {\n    key: \"scrollHorizontally\",\n    value: function scrollHorizontally(delta) {\n      var previousScroll = this.scrollableElement.scrollLeft;\n      this.scrollableElement.scrollLeft += delta;\n      return previousScroll !== this.scrollableElement.scrollLeft;\n    }\n    /**\n     * Synchronize scroll position between master table and overlay table.\n     *\n     * @private\n     */\n\n  }, {\n    key: \"syncScrollPositions\",\n    value: function syncScrollPositions() {\n      if (this.destroyed) {\n        return;\n      }\n\n      var rootWindow = this.domBindings.rootWindow;\n      var topHolder = this.topOverlay.clone.wtTable.holder; // todo rethink\n\n      var leftHolder = this.inlineStartOverlay.clone.wtTable.holder; // todo rethink\n\n      var _ref = [this.scrollableElement.scrollLeft, this.scrollableElement.scrollTop],\n          scrollLeft = _ref[0],\n          scrollTop = _ref[1];\n      this.horizontalScrolling = topHolder.scrollLeft !== scrollLeft || this.lastScrollX !== rootWindow.scrollX;\n      this.verticalScrolling = leftHolder.scrollTop !== scrollTop || this.lastScrollY !== rootWindow.scrollY;\n      this.lastScrollX = rootWindow.scrollX;\n      this.lastScrollY = rootWindow.scrollY;\n\n      if (this.horizontalScrolling) {\n        topHolder.scrollLeft = scrollLeft;\n        var bottomHolder = this.bottomOverlay.needFullRender ? this.bottomOverlay.clone.wtTable.holder : null; // todo rethink\n\n        if (bottomHolder) {\n          bottomHolder.scrollLeft = scrollLeft;\n        }\n      }\n\n      if (this.verticalScrolling) {\n        leftHolder.scrollTop = scrollTop;\n      }\n\n      this.refreshAll();\n    }\n    /**\n     * Synchronize overlay scrollbars with the master scrollbar.\n     */\n\n  }, {\n    key: \"syncScrollWithMaster\",\n    value: function syncScrollWithMaster() {\n      var master = this.topOverlay.mainTableScrollableElement;\n      var scrollLeft = master.scrollLeft,\n          scrollTop = master.scrollTop;\n\n      if (this.topOverlay.needFullRender) {\n        this.topOverlay.clone.wtTable.holder.scrollLeft = scrollLeft; // todo rethink, *overlay.setScroll*()\n      }\n\n      if (this.bottomOverlay.needFullRender) {\n        this.bottomOverlay.clone.wtTable.holder.scrollLeft = scrollLeft; // todo rethink, *overlay.setScroll*()\n      }\n\n      if (this.inlineStartOverlay.needFullRender) {\n        this.inlineStartOverlay.clone.wtTable.holder.scrollTop = scrollTop; // todo rethink, *overlay.setScroll*()\n      }\n    }\n    /**\n     * Update the main scrollable elements for all the overlays.\n     */\n\n  }, {\n    key: \"updateMainScrollableElements\",\n    value: function updateMainScrollableElements() {\n      this.deregisterListeners();\n      this.inlineStartOverlay.updateMainScrollableElement();\n      this.topOverlay.updateMainScrollableElement();\n\n      if (this.bottomOverlay.needFullRender) {\n        this.bottomOverlay.updateMainScrollableElement();\n      }\n\n      var wtTable = this.wtTable;\n      var rootWindow = this.domBindings.rootWindow;\n\n      if (rootWindow.getComputedStyle(wtTable.wtRootElement.parentNode).getPropertyValue('overflow') === 'hidden') {\n        this.scrollableElement = wtTable.holder;\n      } else {\n        this.scrollableElement = getScrollableElement(wtTable.TABLE);\n      }\n\n      this.registerListeners();\n    }\n    /**\n     *\n     */\n\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      this.eventManager.destroy(); // todo, probably all below `destory` calls has no sense. To analyze\n\n      this.topOverlay.destroy();\n\n      if (this.bottomOverlay.clone) {\n        this.bottomOverlay.destroy();\n      }\n\n      this.inlineStartOverlay.destroy();\n\n      if (this.topInlineStartCornerOverlay) {\n        this.topInlineStartCornerOverlay.destroy();\n      }\n\n      if (this.bottomInlineStartCornerOverlay && this.bottomInlineStartCornerOverlay.clone) {\n        this.bottomInlineStartCornerOverlay.destroy();\n      }\n\n      this.destroyed = true;\n    }\n    /**\n     * @param {boolean} [fastDraw=false] When `true`, try to refresh only the positions of borders without rerendering\n     *                                   the data. It will only work if Table.draw() does not force\n     *                                   rendering anyway.\n     */\n\n  }, {\n    key: \"refresh\",\n    value: function refresh() {\n      var fastDraw = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n      var spreader = this.wtTable.spreader;\n      var width = spreader.clientWidth;\n      var height = spreader.clientHeight;\n\n      if (width !== this.spreaderLastSize.width || height !== this.spreaderLastSize.height) {\n        this.spreaderLastSize.width = width;\n        this.spreaderLastSize.height = height;\n        this.adjustElementsSize();\n      }\n\n      if (this.bottomOverlay.clone) {\n        this.bottomOverlay.refresh(fastDraw);\n      }\n\n      this.inlineStartOverlay.refresh(fastDraw);\n      this.topOverlay.refresh(fastDraw);\n\n      if (this.topInlineStartCornerOverlay) {\n        this.topInlineStartCornerOverlay.refresh(fastDraw);\n      }\n\n      if (this.bottomInlineStartCornerOverlay && this.bottomInlineStartCornerOverlay.clone) {\n        this.bottomInlineStartCornerOverlay.refresh(fastDraw);\n      }\n    }\n    /**\n     * Adjust overlays elements size and master table size.\n     *\n     * @param {boolean} [force=false] When `true`, it adjust the DOM nodes sizes for all overlays.\n     */\n\n  }, {\n    key: \"adjustElementsSize\",\n    value: function adjustElementsSize() {\n      var force = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n      var wtViewport = this.wot.wtViewport;\n      var wtTable = this.wtTable;\n      var totalColumns = this.wtSettings.getSetting('totalColumns');\n      var totalRows = this.wtSettings.getSetting('totalRows');\n      var headerRowSize = wtViewport.getRowHeaderWidth();\n      var headerColumnSize = wtViewport.getColumnHeaderHeight();\n      var hiderStyle = wtTable.hider.style;\n      hiderStyle.width = \"\".concat(headerRowSize + this.inlineStartOverlay.sumCellSizes(0, totalColumns), \"px\");\n      hiderStyle.height = \"\".concat(headerColumnSize + this.topOverlay.sumCellSizes(0, totalRows) + 1, \"px\");\n\n      if (this.scrollbarSize > 0) {\n        // todo refactoring, looking as a part of logic which should be moved outside the class\n        var _wtTable$wtRootElemen = wtTable.wtRootElement,\n            rootElemScrollHeight = _wtTable$wtRootElemen.scrollHeight,\n            rootElemScrollWidth = _wtTable$wtRootElemen.scrollWidth;\n        var _wtTable$holder = wtTable.holder,\n            holderScrollHeight = _wtTable$holder.scrollHeight,\n            holderScrollWidth = _wtTable$holder.scrollWidth;\n        this.hasScrollbarRight = rootElemScrollHeight < holderScrollHeight;\n        this.hasScrollbarBottom = rootElemScrollWidth < holderScrollWidth;\n\n        if (this.hasScrollbarRight && wtTable.hider.scrollWidth + this.scrollbarSize > rootElemScrollWidth) {\n          this.hasScrollbarBottom = true;\n        } else if (this.hasScrollbarBottom && wtTable.hider.scrollHeight + this.scrollbarSize > rootElemScrollHeight) {\n          this.hasScrollbarRight = true;\n        }\n      }\n\n      this.topOverlay.adjustElementsSize(force);\n      this.inlineStartOverlay.adjustElementsSize(force);\n      this.bottomOverlay.adjustElementsSize(force);\n    }\n    /**\n     *\n     */\n\n  }, {\n    key: \"applyToDOM\",\n    value: function applyToDOM() {\n      if (!this.wtTable.isVisible()) {\n        return;\n      }\n\n      this.topOverlay.applyToDOM();\n\n      if (this.bottomOverlay.clone) {\n        this.bottomOverlay.applyToDOM();\n      }\n\n      this.inlineStartOverlay.applyToDOM();\n    }\n    /**\n     * Get the parent overlay of the provided element.\n     *\n     * @param {HTMLElement} element An element to process.\n     * @returns {object|null}\n     */\n\n  }, {\n    key: \"getParentOverlay\",\n    value: function getParentOverlay(element) {\n      if (!element) {\n        return null;\n      }\n\n      var overlays = [this.topOverlay, this.inlineStartOverlay, this.bottomOverlay, this.topInlineStartCornerOverlay, this.bottomInlineStartCornerOverlay];\n      var result = null;\n      arrayEach(overlays, function (overlay) {\n        if (!overlay) {\n          return;\n        }\n\n        if (overlay.clone && overlay.clone.wtTable.TABLE.contains(element)) {\n          // todo demeter\n          result = overlay.clone;\n        }\n      });\n      return result;\n    }\n    /**\n     * Synchronize the class names between the main overlay table and the tables on the other overlays.\n     *\n     */\n\n  }, {\n    key: \"syncOverlayTableClassNames\",\n    value: function syncOverlayTableClassNames() {\n      var masterTable = this.wtTable.TABLE;\n      var overlays = [this.topOverlay, this.inlineStartOverlay, this.bottomOverlay, this.topInlineStartCornerOverlay, this.bottomInlineStartCornerOverlay];\n      arrayEach(overlays, function (elem) {\n        if (!elem) {\n          return;\n        }\n\n        elem.clone.wtTable.TABLE.className = masterTable.className; // todo demeter\n      });\n    }\n  }]);\n\n  return Overlays;\n}();\n\nexport default Overlays;","map":{"version":3,"names":["_construct","Parent","args","Class","_isNativeReflectConstruct","Reflect","construct","bind","a","push","apply","Constructor","Function","instance","_setPrototypeOf","prototype","arguments","sham","Proxy","Boolean","valueOf","call","e","o","p","Object","setPrototypeOf","__proto__","_classCallCheck","TypeError","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","defineProperty","key","_createClass","protoProps","staticProps","_defineProperty","obj","value","getScrollableElement","getScrollbarWidth","arrayEach","isKey","isChrome","InlineStartOverlay","TopOverlay","TopInlineStartCornerOverlay","BottomOverlay","BottomInlineStartCornerOverlay","Overlays","wotInstance","facadeGetter","domBindings","wtSettings","eventManager","wtTable","undefined","wot","_this$domBindings","rootDocument","rootWindow","scrollbarSize","isOverflowHidden","getComputedStyle","wtRootElement","parentNode","getPropertyValue","scrollableElement","holder","TABLE","initOverlays","hasScrollbarBottom","hasScrollbarRight","destroyed","keyPressed","spreaderLastSize","width","height","verticalScrolling","horizontalScrolling","initBrowserLineHeight","registerListeners","lastScrollX","scrollX","lastScrollY","scrollY","_this$domBindings2","computedStyle","body","lineHeight","parseInt","lineHeightFalback","fontSize","browserLineHeight","topOverlay","bottomOverlay","inlineStartOverlay","topInlineStartCornerOverlay","concat","bottomInlineStartCornerOverlay","updateStateOfRendering","syncScroll","needFullRender","refreshAll","drawn","destroy","draw","onScroll","_this","_this$domBindings3","topOverlayScrollableElement","mainTableScrollableElement","inlineStartOverlayScrollableElement","addEventListener","documentElement","event","onKeyDown","onKeyUp","onTableScroll","passive","isHighPixelRatio","devicePixelRatio","isScrollOnWindow","preventWheel","getSetting","wheelEventOptions","onCloneWheel","overlays","forEach","overlay","clone","resizeTimeout","clearTimeout","setTimeout","deregisterListeners","clearEvents","masterHorizontal","masterVertical","contains","syncScrollPositions","preventDefault","shouldNotWheelVertically","shouldNotWheelHorizontally","isScrollPossible","translateMouseWheelToScroll","keyCode","deltaY","isNaN","wheelDeltaY","deltaX","wheelDeltaX","deltaMode","isScrollVerticallyPossible","scrollVertically","isScrollHorizontallyPossible","scrollHorizontally","delta","previousScroll","scrollTop","scrollLeft","topHolder","leftHolder","_ref","bottomHolder","syncScrollWithMaster","master","updateMainScrollableElements","updateMainScrollableElement","refresh","fastDraw","spreader","clientWidth","clientHeight","adjustElementsSize","force","wtViewport","totalColumns","totalRows","headerRowSize","getRowHeaderWidth","headerColumnSize","getColumnHeaderHeight","hiderStyle","hider","style","sumCellSizes","_wtTable$wtRootElemen","rootElemScrollHeight","scrollHeight","rootElemScrollWidth","scrollWidth","_wtTable$holder","holderScrollHeight","holderScrollWidth","applyToDOM","isVisible","getParentOverlay","element","result","syncOverlayTableClassNames","masterTable","elem","className"],"sources":["/home/ubuntu/community/vue-web/node_modules/handsontable/3rdparty/walkontable/src/overlays.mjs"],"sourcesContent":["import \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/web.timers.js\";\nimport \"core-js/modules/es.object.set-prototype-of.js\";\nimport \"core-js/modules/es.reflect.construct.js\";\nfunction _construct(Parent, args, Class) { if (_isNativeReflectConstruct()) { _construct = Reflect.construct.bind(); } else { _construct = function _construct(Parent, args, Class) { var a = [null]; a.push.apply(a, args); var Constructor = Function.bind.apply(Parent, a); var instance = new Constructor(); if (Class) _setPrototypeOf(instance, Class.prototype); return instance; }; } return _construct.apply(null, arguments); }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nimport { getScrollableElement, getScrollbarWidth } from \"../../../helpers/dom/element.mjs\";\nimport { arrayEach } from \"../../../helpers/array.mjs\";\nimport { isKey } from \"../../../helpers/unicode.mjs\";\nimport { isChrome } from \"../../../helpers/browser.mjs\";\nimport { InlineStartOverlay, TopOverlay, TopInlineStartCornerOverlay, BottomOverlay, BottomInlineStartCornerOverlay } from \"./overlay/index.mjs\"; /**\n                                                                                                                                                   * @class Overlays\n                                                                                                                                                   */\nvar Overlays = /*#__PURE__*/function () {\n  /**\n   * Walkontable instance's reference.\n   *\n   * @protected\n   * @type {Walkontable}\n   */\n\n  /**\n   * Refer to the TopOverlay instance.\n   *\n   * @protected\n   * @type {TopOverlay}\n   */\n\n  /**\n   * Refer to the BottomOverlay instance.\n   *\n   * @protected\n   * @type {BottomOverlay}\n   */\n\n  /**\n   * Refer to the InlineStartOverlay or instance.\n   *\n   * @protected\n   * @type {InlineStartOverlay}\n   */\n\n  /**\n   * Refer to the TopInlineStartCornerOverlay instance.\n   *\n   * @protected\n   * @type {TopInlineStartCornerOverlay}\n   */\n\n  /**\n   * Refer to the BottomInlineStartCornerOverlay instance.\n   *\n   * @protected\n   * @type {BottomInlineStartCornerOverlay}\n   */\n\n  /**\n   * Browser line height for purposes of translating mouse wheel.\n   *\n   * @private\n   * @type {number}\n   */\n\n  /**\n   * The walkontable settings.\n   *\n   * @protected\n   * @type {Settings}\n   */\n\n  /**\n   * @param {Walkontable} wotInstance The Walkontable instance. @todo refactoring remove.\n   * @param {FacadeGetter} facadeGetter Function which return proper facade.\n   * @param {DomBindings} domBindings Bindings into DOM.\n   * @param {Settings} wtSettings The Walkontable settings.\n   * @param {EventManager} eventManager The walkontable event manager.\n   * @param {MasterTable} wtTable The master table.\n   */\n  function Overlays(wotInstance, facadeGetter, domBindings, wtSettings, eventManager, wtTable) {\n    _classCallCheck(this, Overlays);\n    _defineProperty(this, \"wot\", null);\n    _defineProperty(this, \"topOverlay\", null);\n    _defineProperty(this, \"bottomOverlay\", null);\n    _defineProperty(this, \"inlineStartOverlay\", null);\n    _defineProperty(this, \"topInlineStartCornerOverlay\", null);\n    _defineProperty(this, \"bottomInlineStartCornerOverlay\", null);\n    _defineProperty(this, \"browserLineHeight\", undefined);\n    _defineProperty(this, \"wtSettings\", null);\n    this.wot = wotInstance;\n    this.wtSettings = wtSettings;\n    this.domBindings = domBindings;\n    this.facadeGetter = facadeGetter;\n    this.wtTable = wtTable;\n    var _this$domBindings = this.domBindings,\n      rootDocument = _this$domBindings.rootDocument,\n      rootWindow = _this$domBindings.rootWindow;\n\n    // legacy support\n    this.instance = this.wot; // todo refactoring: move to facade\n    this.eventManager = eventManager;\n\n    // TODO refactoring: probably invalid place to this logic\n    this.scrollbarSize = getScrollbarWidth(rootDocument);\n    var isOverflowHidden = rootWindow.getComputedStyle(wtTable.wtRootElement.parentNode).getPropertyValue('overflow') === 'hidden';\n    this.scrollableElement = isOverflowHidden ? wtTable.holder : getScrollableElement(wtTable.TABLE);\n    this.initOverlays();\n    this.hasScrollbarBottom = false;\n    this.hasScrollbarRight = false;\n    this.destroyed = false;\n    this.keyPressed = false;\n    this.spreaderLastSize = {\n      width: null,\n      height: null\n    };\n    this.verticalScrolling = false;\n    this.horizontalScrolling = false;\n    this.initBrowserLineHeight();\n    this.registerListeners();\n    this.lastScrollX = rootWindow.scrollX;\n    this.lastScrollY = rootWindow.scrollY;\n  }\n\n  /**\n   * Retrieve browser line height and apply its value to `browserLineHeight`.\n   *\n   * @private\n   */\n  _createClass(Overlays, [{\n    key: \"initBrowserLineHeight\",\n    value: function initBrowserLineHeight() {\n      var _this$domBindings2 = this.domBindings,\n        rootWindow = _this$domBindings2.rootWindow,\n        rootDocument = _this$domBindings2.rootDocument;\n      var computedStyle = rootWindow.getComputedStyle(rootDocument.body);\n      /**\n       * Sometimes `line-height` might be set to 'normal'. In that case, a default `font-size` should be multiplied by roughly 1.2.\n       * Https://developer.mozilla.org/pl/docs/Web/CSS/line-height#Values.\n       */\n      var lineHeight = parseInt(computedStyle.lineHeight, 10);\n      var lineHeightFalback = parseInt(computedStyle.fontSize, 10) * 1.2;\n      this.browserLineHeight = lineHeight || lineHeightFalback;\n    }\n\n    /**\n     * Prepare overlays based on user settings.\n     *\n     * @private\n     */\n  }, {\n    key: \"initOverlays\",\n    value: function initOverlays() {\n      var args = [this.wot, this.facadeGetter, this.wtSettings, this.domBindings];\n\n      // todo refactoring: IOC, collection or factories.\n      // TODO refactoring, conceive about using generic collection of overlays.\n      this.topOverlay = _construct(TopOverlay, args);\n      this.bottomOverlay = _construct(BottomOverlay, args);\n      this.inlineStartOverlay = _construct(InlineStartOverlay, args);\n\n      // TODO discuss, the controversial here would be removing the lazy creation mechanism for corners.\n      // TODO cond. Has no any visual impact. They're initially hidden in same way like left, top, and bottom overlays.\n      this.topInlineStartCornerOverlay = _construct(TopInlineStartCornerOverlay, args.concat([this.topOverlay, this.inlineStartOverlay]));\n      this.bottomInlineStartCornerOverlay = _construct(BottomInlineStartCornerOverlay, args.concat([this.bottomOverlay, this.inlineStartOverlay]));\n    }\n\n    /**\n     * Update state of rendering, check if changed.\n     *\n     * @package\n     * @returns {boolean} Returns `true` if changes applied to overlay needs scroll synchronization.\n     */\n  }, {\n    key: \"updateStateOfRendering\",\n    value: function updateStateOfRendering() {\n      var syncScroll = this.topOverlay.updateStateOfRendering();\n      syncScroll = this.bottomOverlay.updateStateOfRendering() || syncScroll;\n      syncScroll = this.inlineStartOverlay.updateStateOfRendering() || syncScroll;\n\n      // todo refactoring: move conditions into updateStateOfRendering(),\n      if (this.inlineStartOverlay.needFullRender) {\n        if (this.topOverlay.needFullRender) {\n          syncScroll = this.topInlineStartCornerOverlay.updateStateOfRendering() || syncScroll;\n        }\n        if (this.bottomOverlay.needFullRender) {\n          syncScroll = this.bottomInlineStartCornerOverlay.updateStateOfRendering() || syncScroll;\n        }\n      }\n      return syncScroll;\n    }\n\n    /**\n     * Refresh and redraw table.\n     */\n  }, {\n    key: \"refreshAll\",\n    value: function refreshAll() {\n      if (!this.wot.drawn) {\n        return;\n      }\n      if (!this.wtTable.holder.parentNode) {\n        // Walkontable was detached from DOM, but this handler was not removed\n        this.destroy();\n        return;\n      }\n      this.wot.draw(true);\n      if (this.verticalScrolling) {\n        this.inlineStartOverlay.onScroll(); // todo the inlineStartOverlay.onScroll() fires hook. Why is it needed there, not in any another place?\n      }\n\n      if (this.horizontalScrolling) {\n        this.topOverlay.onScroll();\n      }\n      this.verticalScrolling = false;\n      this.horizontalScrolling = false;\n    }\n\n    /**\n     * Register all necessary event listeners.\n     */\n  }, {\n    key: \"registerListeners\",\n    value: function registerListeners() {\n      var _this = this;\n      var _this$domBindings3 = this.domBindings,\n        rootDocument = _this$domBindings3.rootDocument,\n        rootWindow = _this$domBindings3.rootWindow;\n      var topOverlayScrollableElement = this.topOverlay.mainTableScrollableElement;\n      var inlineStartOverlayScrollableElement = this.inlineStartOverlay.mainTableScrollableElement;\n      this.eventManager.addEventListener(rootDocument.documentElement, 'keydown', function (event) {\n        return _this.onKeyDown(event);\n      });\n      this.eventManager.addEventListener(rootDocument.documentElement, 'keyup', function () {\n        return _this.onKeyUp();\n      });\n      this.eventManager.addEventListener(rootDocument, 'visibilitychange', function () {\n        return _this.onKeyUp();\n      });\n      this.eventManager.addEventListener(topOverlayScrollableElement, 'scroll', function (event) {\n        return _this.onTableScroll(event);\n      }, {\n        passive: true\n      });\n      if (topOverlayScrollableElement !== inlineStartOverlayScrollableElement) {\n        this.eventManager.addEventListener(inlineStartOverlayScrollableElement, 'scroll', function (event) {\n          return _this.onTableScroll(event);\n        }, {\n          passive: true\n        });\n      }\n      var isHighPixelRatio = rootWindow.devicePixelRatio && rootWindow.devicePixelRatio > 1;\n      var isScrollOnWindow = this.scrollableElement === rootWindow;\n      var preventWheel = this.wtSettings.getSetting('preventWheel');\n      var wheelEventOptions = {\n        passive: isScrollOnWindow\n      };\n      if (preventWheel || isHighPixelRatio || !isChrome()) {\n        this.eventManager.addEventListener(this.wtTable.wtRootElement, 'wheel', function (event) {\n          return _this.onCloneWheel(event, preventWheel);\n        }, wheelEventOptions);\n      }\n      var overlays = [this.topOverlay, this.bottomOverlay, this.inlineStartOverlay, this.topInlineStartCornerOverlay, this.bottomInlineStartCornerOverlay];\n      overlays.forEach(function (overlay) {\n        if (overlay && overlay.needFullRender) {\n          var holder = overlay.clone.wtTable.holder; // todo rethink, maybe: overlay.getHolder()\n\n          _this.eventManager.addEventListener(holder, 'wheel', function (event) {\n            return _this.onCloneWheel(event, preventWheel);\n          }, wheelEventOptions);\n        }\n      });\n      var resizeTimeout;\n      this.eventManager.addEventListener(rootWindow, 'resize', function () {\n        clearTimeout(resizeTimeout);\n        resizeTimeout = setTimeout(function () {\n          _this.wtSettings.getSetting('onWindowResize');\n        }, 200);\n      });\n    }\n\n    /**\n     * Deregister all previously registered listeners.\n     */\n  }, {\n    key: \"deregisterListeners\",\n    value: function deregisterListeners() {\n      this.eventManager.clearEvents(true);\n    }\n\n    /**\n     * Scroll listener.\n     *\n     * @param {Event} event The mouse event object.\n     */\n  }, {\n    key: \"onTableScroll\",\n    value: function onTableScroll(event) {\n      // There was if statement which controlled flow of this function. It avoided the execution of the next lines\n      // on mobile devices. It was changed. Broader description of this case is included within issue #4856.\n      var rootWindow = this.domBindings.rootWindow;\n      var masterHorizontal = this.inlineStartOverlay.mainTableScrollableElement;\n      var masterVertical = this.topOverlay.mainTableScrollableElement;\n      var target = event.target;\n\n      // For key press, sync only master -> overlay position because while pressing Walkontable.render is triggered\n      // by hot.refreshBorder\n      if (this.keyPressed) {\n        if (masterVertical !== rootWindow && target !== rootWindow && !event.target.contains(masterVertical) || masterHorizontal !== rootWindow && target !== rootWindow && !event.target.contains(masterHorizontal)) {\n          return;\n        }\n      }\n      this.syncScrollPositions(event);\n    }\n\n    /**\n     * Wheel listener for cloned overlays.\n     *\n     * @param {Event} event The mouse event object.\n     * @param {boolean} preventDefault If `true`, the `preventDefault` will be called on event object.\n     */\n  }, {\n    key: \"onCloneWheel\",\n    value: function onCloneWheel(event, preventDefault) {\n      var rootWindow = this.domBindings.rootWindow;\n\n      // There was if statement which controlled flow of this function. It avoided the execution of the next lines\n      // on mobile devices. It was changed. Broader description of this case is included within issue #4856.\n\n      var masterHorizontal = this.inlineStartOverlay.mainTableScrollableElement;\n      var masterVertical = this.topOverlay.mainTableScrollableElement;\n      var target = event.target;\n\n      // For key press, sync only master -> overlay position because while pressing Walkontable.render is triggered\n      // by hot.refreshBorder\n      var shouldNotWheelVertically = masterVertical !== rootWindow && target !== rootWindow && !target.contains(masterVertical);\n      var shouldNotWheelHorizontally = masterHorizontal !== rootWindow && target !== rootWindow && !target.contains(masterHorizontal);\n      if (this.keyPressed && (shouldNotWheelVertically || shouldNotWheelHorizontally)) {\n        return;\n      }\n      var isScrollPossible = this.translateMouseWheelToScroll(event);\n      if (preventDefault || this.scrollableElement !== rootWindow && isScrollPossible) {\n        event.preventDefault();\n      }\n    }\n\n    /**\n     * Key down listener.\n     *\n     * @param {Event} event The keyboard event object.\n     */\n  }, {\n    key: \"onKeyDown\",\n    value: function onKeyDown(event) {\n      this.keyPressed = isKey(event.keyCode, 'ARROW_UP|ARROW_RIGHT|ARROW_DOWN|ARROW_LEFT');\n    }\n\n    /**\n     * Key up listener.\n     */\n  }, {\n    key: \"onKeyUp\",\n    value: function onKeyUp() {\n      this.keyPressed = false;\n    }\n\n    /**\n     * Translate wheel event into scroll event and sync scroll overlays position.\n     *\n     * @private\n     * @param {Event} event The mouse event object.\n     * @returns {boolean}\n     */\n  }, {\n    key: \"translateMouseWheelToScroll\",\n    value: function translateMouseWheelToScroll(event) {\n      var deltaY = isNaN(event.deltaY) ? -1 * event.wheelDeltaY : event.deltaY;\n      var deltaX = isNaN(event.deltaX) ? -1 * event.wheelDeltaX : event.deltaX;\n      if (event.deltaMode === 1) {\n        deltaX += deltaX * this.browserLineHeight;\n        deltaY += deltaY * this.browserLineHeight;\n      }\n      var isScrollVerticallyPossible = this.scrollVertically(deltaY);\n      var isScrollHorizontallyPossible = this.scrollHorizontally(deltaX);\n      return isScrollVerticallyPossible || isScrollHorizontallyPossible;\n    }\n\n    /**\n     * Scrolls main scrollable element horizontally.\n     *\n     * @param {number} delta Relative value to scroll.\n     * @returns {boolean}\n     */\n  }, {\n    key: \"scrollVertically\",\n    value: function scrollVertically(delta) {\n      var previousScroll = this.scrollableElement.scrollTop;\n      this.scrollableElement.scrollTop += delta;\n      return previousScroll !== this.scrollableElement.scrollTop;\n    }\n\n    /**\n     * Scrolls main scrollable element horizontally.\n     *\n     * @param {number} delta Relative value to scroll.\n     * @returns {boolean}\n     */\n  }, {\n    key: \"scrollHorizontally\",\n    value: function scrollHorizontally(delta) {\n      var previousScroll = this.scrollableElement.scrollLeft;\n      this.scrollableElement.scrollLeft += delta;\n      return previousScroll !== this.scrollableElement.scrollLeft;\n    }\n\n    /**\n     * Synchronize scroll position between master table and overlay table.\n     *\n     * @private\n     */\n  }, {\n    key: \"syncScrollPositions\",\n    value: function syncScrollPositions() {\n      if (this.destroyed) {\n        return;\n      }\n      var rootWindow = this.domBindings.rootWindow;\n      var topHolder = this.topOverlay.clone.wtTable.holder; // todo rethink\n      var leftHolder = this.inlineStartOverlay.clone.wtTable.holder; // todo rethink\n\n      var _ref = [this.scrollableElement.scrollLeft, this.scrollableElement.scrollTop],\n        scrollLeft = _ref[0],\n        scrollTop = _ref[1];\n      this.horizontalScrolling = topHolder.scrollLeft !== scrollLeft || this.lastScrollX !== rootWindow.scrollX;\n      this.verticalScrolling = leftHolder.scrollTop !== scrollTop || this.lastScrollY !== rootWindow.scrollY;\n      this.lastScrollX = rootWindow.scrollX;\n      this.lastScrollY = rootWindow.scrollY;\n      if (this.horizontalScrolling) {\n        topHolder.scrollLeft = scrollLeft;\n        var bottomHolder = this.bottomOverlay.needFullRender ? this.bottomOverlay.clone.wtTable.holder : null; // todo rethink\n\n        if (bottomHolder) {\n          bottomHolder.scrollLeft = scrollLeft;\n        }\n      }\n      if (this.verticalScrolling) {\n        leftHolder.scrollTop = scrollTop;\n      }\n      this.refreshAll();\n    }\n\n    /**\n     * Synchronize overlay scrollbars with the master scrollbar.\n     */\n  }, {\n    key: \"syncScrollWithMaster\",\n    value: function syncScrollWithMaster() {\n      var master = this.topOverlay.mainTableScrollableElement;\n      var scrollLeft = master.scrollLeft,\n        scrollTop = master.scrollTop;\n      if (this.topOverlay.needFullRender) {\n        this.topOverlay.clone.wtTable.holder.scrollLeft = scrollLeft; // todo rethink, *overlay.setScroll*()\n      }\n\n      if (this.bottomOverlay.needFullRender) {\n        this.bottomOverlay.clone.wtTable.holder.scrollLeft = scrollLeft; // todo rethink, *overlay.setScroll*()\n      }\n\n      if (this.inlineStartOverlay.needFullRender) {\n        this.inlineStartOverlay.clone.wtTable.holder.scrollTop = scrollTop; // todo rethink, *overlay.setScroll*()\n      }\n    }\n\n    /**\n     * Update the main scrollable elements for all the overlays.\n     */\n  }, {\n    key: \"updateMainScrollableElements\",\n    value: function updateMainScrollableElements() {\n      this.deregisterListeners();\n      this.inlineStartOverlay.updateMainScrollableElement();\n      this.topOverlay.updateMainScrollableElement();\n      if (this.bottomOverlay.needFullRender) {\n        this.bottomOverlay.updateMainScrollableElement();\n      }\n      var wtTable = this.wtTable;\n      var rootWindow = this.domBindings.rootWindow;\n      if (rootWindow.getComputedStyle(wtTable.wtRootElement.parentNode).getPropertyValue('overflow') === 'hidden') {\n        this.scrollableElement = wtTable.holder;\n      } else {\n        this.scrollableElement = getScrollableElement(wtTable.TABLE);\n      }\n      this.registerListeners();\n    }\n\n    /**\n     *\n     */\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      this.eventManager.destroy();\n      // todo, probably all below `destory` calls has no sense. To analyze\n      this.topOverlay.destroy();\n      if (this.bottomOverlay.clone) {\n        this.bottomOverlay.destroy();\n      }\n      this.inlineStartOverlay.destroy();\n      if (this.topInlineStartCornerOverlay) {\n        this.topInlineStartCornerOverlay.destroy();\n      }\n      if (this.bottomInlineStartCornerOverlay && this.bottomInlineStartCornerOverlay.clone) {\n        this.bottomInlineStartCornerOverlay.destroy();\n      }\n      this.destroyed = true;\n    }\n\n    /**\n     * @param {boolean} [fastDraw=false] When `true`, try to refresh only the positions of borders without rerendering\n     *                                   the data. It will only work if Table.draw() does not force\n     *                                   rendering anyway.\n     */\n  }, {\n    key: \"refresh\",\n    value: function refresh() {\n      var fastDraw = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n      var spreader = this.wtTable.spreader;\n      var width = spreader.clientWidth;\n      var height = spreader.clientHeight;\n      if (width !== this.spreaderLastSize.width || height !== this.spreaderLastSize.height) {\n        this.spreaderLastSize.width = width;\n        this.spreaderLastSize.height = height;\n        this.adjustElementsSize();\n      }\n      if (this.bottomOverlay.clone) {\n        this.bottomOverlay.refresh(fastDraw);\n      }\n      this.inlineStartOverlay.refresh(fastDraw);\n      this.topOverlay.refresh(fastDraw);\n      if (this.topInlineStartCornerOverlay) {\n        this.topInlineStartCornerOverlay.refresh(fastDraw);\n      }\n      if (this.bottomInlineStartCornerOverlay && this.bottomInlineStartCornerOverlay.clone) {\n        this.bottomInlineStartCornerOverlay.refresh(fastDraw);\n      }\n    }\n\n    /**\n     * Adjust overlays elements size and master table size.\n     *\n     * @param {boolean} [force=false] When `true`, it adjust the DOM nodes sizes for all overlays.\n     */\n  }, {\n    key: \"adjustElementsSize\",\n    value: function adjustElementsSize() {\n      var force = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n      var wtViewport = this.wot.wtViewport;\n      var wtTable = this.wtTable;\n      var totalColumns = this.wtSettings.getSetting('totalColumns');\n      var totalRows = this.wtSettings.getSetting('totalRows');\n      var headerRowSize = wtViewport.getRowHeaderWidth();\n      var headerColumnSize = wtViewport.getColumnHeaderHeight();\n      var hiderStyle = wtTable.hider.style;\n      hiderStyle.width = \"\".concat(headerRowSize + this.inlineStartOverlay.sumCellSizes(0, totalColumns), \"px\");\n      hiderStyle.height = \"\".concat(headerColumnSize + this.topOverlay.sumCellSizes(0, totalRows) + 1, \"px\");\n      if (this.scrollbarSize > 0) {\n        // todo refactoring, looking as a part of logic which should be moved outside the class\n        var _wtTable$wtRootElemen = wtTable.wtRootElement,\n          rootElemScrollHeight = _wtTable$wtRootElemen.scrollHeight,\n          rootElemScrollWidth = _wtTable$wtRootElemen.scrollWidth;\n        var _wtTable$holder = wtTable.holder,\n          holderScrollHeight = _wtTable$holder.scrollHeight,\n          holderScrollWidth = _wtTable$holder.scrollWidth;\n        this.hasScrollbarRight = rootElemScrollHeight < holderScrollHeight;\n        this.hasScrollbarBottom = rootElemScrollWidth < holderScrollWidth;\n        if (this.hasScrollbarRight && wtTable.hider.scrollWidth + this.scrollbarSize > rootElemScrollWidth) {\n          this.hasScrollbarBottom = true;\n        } else if (this.hasScrollbarBottom && wtTable.hider.scrollHeight + this.scrollbarSize > rootElemScrollHeight) {\n          this.hasScrollbarRight = true;\n        }\n      }\n      this.topOverlay.adjustElementsSize(force);\n      this.inlineStartOverlay.adjustElementsSize(force);\n      this.bottomOverlay.adjustElementsSize(force);\n    }\n\n    /**\n     *\n     */\n  }, {\n    key: \"applyToDOM\",\n    value: function applyToDOM() {\n      if (!this.wtTable.isVisible()) {\n        return;\n      }\n      this.topOverlay.applyToDOM();\n      if (this.bottomOverlay.clone) {\n        this.bottomOverlay.applyToDOM();\n      }\n      this.inlineStartOverlay.applyToDOM();\n    }\n\n    /**\n     * Get the parent overlay of the provided element.\n     *\n     * @param {HTMLElement} element An element to process.\n     * @returns {object|null}\n     */\n  }, {\n    key: \"getParentOverlay\",\n    value: function getParentOverlay(element) {\n      if (!element) {\n        return null;\n      }\n      var overlays = [this.topOverlay, this.inlineStartOverlay, this.bottomOverlay, this.topInlineStartCornerOverlay, this.bottomInlineStartCornerOverlay];\n      var result = null;\n      arrayEach(overlays, function (overlay) {\n        if (!overlay) {\n          return;\n        }\n        if (overlay.clone && overlay.clone.wtTable.TABLE.contains(element)) {\n          // todo demeter\n          result = overlay.clone;\n        }\n      });\n      return result;\n    }\n\n    /**\n     * Synchronize the class names between the main overlay table and the tables on the other overlays.\n     *\n     */\n  }, {\n    key: \"syncOverlayTableClassNames\",\n    value: function syncOverlayTableClassNames() {\n      var masterTable = this.wtTable.TABLE;\n      var overlays = [this.topOverlay, this.inlineStartOverlay, this.bottomOverlay, this.topInlineStartCornerOverlay, this.bottomInlineStartCornerOverlay];\n      arrayEach(overlays, function (elem) {\n        if (!elem) {\n          return;\n        }\n        elem.clone.wtTable.TABLE.className = masterTable.className; // todo demeter\n      });\n    }\n  }]);\n  return Overlays;\n}();\nexport default Overlays;"],"mappings":"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"},"metadata":{},"sourceType":"module"}